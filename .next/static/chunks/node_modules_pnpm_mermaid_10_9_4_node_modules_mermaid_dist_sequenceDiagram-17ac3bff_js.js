"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_pnpm_mermaid_10_9_4_node_modules_mermaid_dist_sequenceDiagram-17ac3bff_js"],{

/***/ "./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/sequenceDiagram-17ac3bff.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/sequenceDiagram-17ac3bff.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagram: function() { return /* binding */ diagram; }\n/* harmony export */ });\n/* harmony import */ var _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mermaid-ad1dc92f.js */ \"./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/mermaid-ad1dc92f.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"./node_modules/.pnpm/d3@7.9.0/node_modules/d3/src/index.js\");\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @braintree/sanitize-url */ \"./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./svgDrawCommon-3ba9043b.js */ \"./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/svgDrawCommon-3ba9043b.js\");\n/* harmony import */ var ts_dedent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ts-dedent */ \"./node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ \"./node_modules/.pnpm/dayjs@1.11.15/node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dompurify */ \"./node_modules/.pnpm/dompurify@3.1.6/node_modules/dompurify/dist/purify.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 2], $V1 = [1, 3], $V2 = [1, 4], $V3 = [2, 4], $V4 = [1, 9], $V5 = [1, 11], $V6 = [1, 13], $V7 = [1, 14], $V8 = [1, 16], $V9 = [1, 17], $Va = [1, 18], $Vb = [1, 24], $Vc = [1, 25], $Vd = [1, 26], $Ve = [1, 27], $Vf = [1, 28], $Vg = [1, 29], $Vh = [1, 30], $Vi = [1, 31], $Vj = [1, 32], $Vk = [1, 33], $Vl = [1, 34], $Vm = [1, 35], $Vn = [1, 36], $Vo = [1, 37], $Vp = [1, 38], $Vq = [1, 39], $Vr = [1, 41], $Vs = [1, 42], $Vt = [1, 43], $Vu = [1, 44], $Vv = [1, 45], $Vw = [1, 46], $Vx = [1, 4, 5, 13, 14, 16, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 59, 60, 61, 62, 70], $Vy = [4, 5, 16, 50, 52, 53], $Vz = [4, 5, 13, 14, 16, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 50, 52, 53, 54, 59, 60, 61, 62, 70], $VA = [4, 5, 13, 14, 16, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 49, 50, 52, 53, 54, 59, 60, 61, 62, 70], $VB = [4, 5, 13, 14, 16, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 48, 50, 52, 53, 54, 59, 60, 61, 62, 70], $VC = [4, 5, 13, 14, 16, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 50, 52, 53, 54, 59, 60, 61, 62, 70], $VD = [68, 69, 70], $VE = [1, 120];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SPACE\": 4, \"NEWLINE\": 5, \"SD\": 6, \"document\": 7, \"line\": 8, \"statement\": 9, \"box_section\": 10, \"box_line\": 11, \"participant_statement\": 12, \"create\": 13, \"box\": 14, \"restOfLine\": 15, \"end\": 16, \"signal\": 17, \"autonumber\": 18, \"NUM\": 19, \"off\": 20, \"activate\": 21, \"actor\": 22, \"deactivate\": 23, \"note_statement\": 24, \"links_statement\": 25, \"link_statement\": 26, \"properties_statement\": 27, \"details_statement\": 28, \"title\": 29, \"legacy_title\": 30, \"acc_title\": 31, \"acc_title_value\": 32, \"acc_descr\": 33, \"acc_descr_value\": 34, \"acc_descr_multiline_value\": 35, \"loop\": 36, \"rect\": 37, \"opt\": 38, \"alt\": 39, \"else_sections\": 40, \"par\": 41, \"par_sections\": 42, \"par_over\": 43, \"critical\": 44, \"option_sections\": 45, \"break\": 46, \"option\": 47, \"and\": 48, \"else\": 49, \"participant\": 50, \"AS\": 51, \"participant_actor\": 52, \"destroy\": 53, \"note\": 54, \"placement\": 55, \"text2\": 56, \"over\": 57, \"actor_pair\": 58, \"links\": 59, \"link\": 60, \"properties\": 61, \"details\": 62, \"spaceList\": 63, \",\": 64, \"left_of\": 65, \"right_of\": 66, \"signaltype\": 67, \"+\": 68, \"-\": 69, \"ACTOR\": 70, \"SOLID_OPEN_ARROW\": 71, \"DOTTED_OPEN_ARROW\": 72, \"SOLID_ARROW\": 73, \"DOTTED_ARROW\": 74, \"SOLID_CROSS\": 75, \"DOTTED_CROSS\": 76, \"SOLID_POINT\": 77, \"DOTTED_POINT\": 78, \"TXT\": 79, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SPACE\", 5: \"NEWLINE\", 6: \"SD\", 13: \"create\", 14: \"box\", 15: \"restOfLine\", 16: \"end\", 18: \"autonumber\", 19: \"NUM\", 20: \"off\", 21: \"activate\", 23: \"deactivate\", 29: \"title\", 30: \"legacy_title\", 31: \"acc_title\", 32: \"acc_title_value\", 33: \"acc_descr\", 34: \"acc_descr_value\", 35: \"acc_descr_multiline_value\", 36: \"loop\", 37: \"rect\", 38: \"opt\", 39: \"alt\", 41: \"par\", 43: \"par_over\", 44: \"critical\", 46: \"break\", 47: \"option\", 48: \"and\", 49: \"else\", 50: \"participant\", 51: \"AS\", 52: \"participant_actor\", 53: \"destroy\", 54: \"note\", 57: \"over\", 59: \"links\", 60: \"link\", 61: \"properties\", 62: \"details\", 64: \",\", 65: \"left_of\", 66: \"right_of\", 68: \"+\", 69: \"-\", 70: \"ACTOR\", 71: \"SOLID_OPEN_ARROW\", 72: \"DOTTED_OPEN_ARROW\", 73: \"SOLID_ARROW\", 74: \"DOTTED_ARROW\", 75: \"SOLID_CROSS\", 76: \"DOTTED_CROSS\", 77: \"SOLID_POINT\", 78: \"DOTTED_POINT\", 79: \"TXT\" },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [8, 1], [8, 1], [10, 0], [10, 2], [11, 2], [11, 1], [11, 1], [9, 1], [9, 2], [9, 4], [9, 2], [9, 4], [9, 3], [9, 3], [9, 2], [9, 3], [9, 3], [9, 2], [9, 2], [9, 2], [9, 2], [9, 2], [9, 1], [9, 1], [9, 2], [9, 2], [9, 1], [9, 4], [9, 4], [9, 4], [9, 4], [9, 4], [9, 4], [9, 4], [9, 4], [45, 1], [45, 4], [42, 1], [42, 4], [40, 1], [40, 4], [12, 5], [12, 3], [12, 5], [12, 3], [12, 3], [24, 4], [24, 4], [25, 3], [26, 3], [27, 3], [28, 3], [63, 2], [63, 1], [58, 3], [58, 1], [55, 1], [55, 1], [17, 5], [17, 5], [17, 4], [22, 1], [67, 1], [67, 1], [67, 1], [67, 1], [67, 1], [67, 1], [67, 1], [67, 1], [56, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 3:\n          yy.apply($$[$0]);\n          return $$[$0];\n        case 4:\n        case 9:\n          this.$ = [];\n          break;\n        case 5:\n        case 10:\n          $$[$0 - 1].push($$[$0]);\n          this.$ = $$[$0 - 1];\n          break;\n        case 6:\n        case 7:\n        case 11:\n        case 12:\n          this.$ = $$[$0];\n          break;\n        case 8:\n        case 13:\n          this.$ = [];\n          break;\n        case 15:\n          $$[$0].type = \"createParticipant\";\n          this.$ = $$[$0];\n          break;\n        case 16:\n          $$[$0 - 1].unshift({ type: \"boxStart\", boxData: yy.parseBoxData($$[$0 - 2]) });\n          $$[$0 - 1].push({ type: \"boxEnd\", boxText: $$[$0 - 2] });\n          this.$ = $$[$0 - 1];\n          break;\n        case 18:\n          this.$ = { type: \"sequenceIndex\", sequenceIndex: Number($$[$0 - 2]), sequenceIndexStep: Number($$[$0 - 1]), sequenceVisible: true, signalType: yy.LINETYPE.AUTONUMBER };\n          break;\n        case 19:\n          this.$ = { type: \"sequenceIndex\", sequenceIndex: Number($$[$0 - 1]), sequenceIndexStep: 1, sequenceVisible: true, signalType: yy.LINETYPE.AUTONUMBER };\n          break;\n        case 20:\n          this.$ = { type: \"sequenceIndex\", sequenceVisible: false, signalType: yy.LINETYPE.AUTONUMBER };\n          break;\n        case 21:\n          this.$ = { type: \"sequenceIndex\", sequenceVisible: true, signalType: yy.LINETYPE.AUTONUMBER };\n          break;\n        case 22:\n          this.$ = { type: \"activeStart\", signalType: yy.LINETYPE.ACTIVE_START, actor: $$[$0 - 1] };\n          break;\n        case 23:\n          this.$ = { type: \"activeEnd\", signalType: yy.LINETYPE.ACTIVE_END, actor: $$[$0 - 1] };\n          break;\n        case 29:\n          yy.setDiagramTitle($$[$0].substring(6));\n          this.$ = $$[$0].substring(6);\n          break;\n        case 30:\n          yy.setDiagramTitle($$[$0].substring(7));\n          this.$ = $$[$0].substring(7);\n          break;\n        case 31:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 32:\n        case 33:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 34:\n          $$[$0 - 1].unshift({ type: \"loopStart\", loopText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.LOOP_START });\n          $$[$0 - 1].push({ type: \"loopEnd\", loopText: $$[$0 - 2], signalType: yy.LINETYPE.LOOP_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 35:\n          $$[$0 - 1].unshift({ type: \"rectStart\", color: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.RECT_START });\n          $$[$0 - 1].push({ type: \"rectEnd\", color: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.RECT_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 36:\n          $$[$0 - 1].unshift({ type: \"optStart\", optText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.OPT_START });\n          $$[$0 - 1].push({ type: \"optEnd\", optText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.OPT_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 37:\n          $$[$0 - 1].unshift({ type: \"altStart\", altText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.ALT_START });\n          $$[$0 - 1].push({ type: \"altEnd\", signalType: yy.LINETYPE.ALT_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 38:\n          $$[$0 - 1].unshift({ type: \"parStart\", parText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.PAR_START });\n          $$[$0 - 1].push({ type: \"parEnd\", signalType: yy.LINETYPE.PAR_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 39:\n          $$[$0 - 1].unshift({ type: \"parStart\", parText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.PAR_OVER_START });\n          $$[$0 - 1].push({ type: \"parEnd\", signalType: yy.LINETYPE.PAR_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 40:\n          $$[$0 - 1].unshift({ type: \"criticalStart\", criticalText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.CRITICAL_START });\n          $$[$0 - 1].push({ type: \"criticalEnd\", signalType: yy.LINETYPE.CRITICAL_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 41:\n          $$[$0 - 1].unshift({ type: \"breakStart\", breakText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.BREAK_START });\n          $$[$0 - 1].push({ type: \"breakEnd\", optText: yy.parseMessage($$[$0 - 2]), signalType: yy.LINETYPE.BREAK_END });\n          this.$ = $$[$0 - 1];\n          break;\n        case 43:\n          this.$ = $$[$0 - 3].concat([{ type: \"option\", optionText: yy.parseMessage($$[$0 - 1]), signalType: yy.LINETYPE.CRITICAL_OPTION }, $$[$0]]);\n          break;\n        case 45:\n          this.$ = $$[$0 - 3].concat([{ type: \"and\", parText: yy.parseMessage($$[$0 - 1]), signalType: yy.LINETYPE.PAR_AND }, $$[$0]]);\n          break;\n        case 47:\n          this.$ = $$[$0 - 3].concat([{ type: \"else\", altText: yy.parseMessage($$[$0 - 1]), signalType: yy.LINETYPE.ALT_ELSE }, $$[$0]]);\n          break;\n        case 48:\n          $$[$0 - 3].draw = \"participant\";\n          $$[$0 - 3].type = \"addParticipant\";\n          $$[$0 - 3].description = yy.parseMessage($$[$0 - 1]);\n          this.$ = $$[$0 - 3];\n          break;\n        case 49:\n          $$[$0 - 1].draw = \"participant\";\n          $$[$0 - 1].type = \"addParticipant\";\n          this.$ = $$[$0 - 1];\n          break;\n        case 50:\n          $$[$0 - 3].draw = \"actor\";\n          $$[$0 - 3].type = \"addParticipant\";\n          $$[$0 - 3].description = yy.parseMessage($$[$0 - 1]);\n          this.$ = $$[$0 - 3];\n          break;\n        case 51:\n          $$[$0 - 1].draw = \"actor\";\n          $$[$0 - 1].type = \"addParticipant\";\n          this.$ = $$[$0 - 1];\n          break;\n        case 52:\n          $$[$0 - 1].type = \"destroyParticipant\";\n          this.$ = $$[$0 - 1];\n          break;\n        case 53:\n          this.$ = [$$[$0 - 1], { type: \"addNote\", placement: $$[$0 - 2], actor: $$[$0 - 1].actor, text: $$[$0] }];\n          break;\n        case 54:\n          $$[$0 - 2] = [].concat($$[$0 - 1], $$[$0 - 1]).slice(0, 2);\n          $$[$0 - 2][0] = $$[$0 - 2][0].actor;\n          $$[$0 - 2][1] = $$[$0 - 2][1].actor;\n          this.$ = [$$[$0 - 1], { type: \"addNote\", placement: yy.PLACEMENT.OVER, actor: $$[$0 - 2].slice(0, 2), text: $$[$0] }];\n          break;\n        case 55:\n          this.$ = [$$[$0 - 1], { type: \"addLinks\", actor: $$[$0 - 1].actor, text: $$[$0] }];\n          break;\n        case 56:\n          this.$ = [$$[$0 - 1], { type: \"addALink\", actor: $$[$0 - 1].actor, text: $$[$0] }];\n          break;\n        case 57:\n          this.$ = [$$[$0 - 1], { type: \"addProperties\", actor: $$[$0 - 1].actor, text: $$[$0] }];\n          break;\n        case 58:\n          this.$ = [$$[$0 - 1], { type: \"addDetails\", actor: $$[$0 - 1].actor, text: $$[$0] }];\n          break;\n        case 61:\n          this.$ = [$$[$0 - 2], $$[$0]];\n          break;\n        case 62:\n          this.$ = $$[$0];\n          break;\n        case 63:\n          this.$ = yy.PLACEMENT.LEFTOF;\n          break;\n        case 64:\n          this.$ = yy.PLACEMENT.RIGHTOF;\n          break;\n        case 65:\n          this.$ = [\n            $$[$0 - 4],\n            $$[$0 - 1],\n            { type: \"addMessage\", from: $$[$0 - 4].actor, to: $$[$0 - 1].actor, signalType: $$[$0 - 3], msg: $$[$0], activate: true },\n            { type: \"activeStart\", signalType: yy.LINETYPE.ACTIVE_START, actor: $$[$0 - 1] }\n          ];\n          break;\n        case 66:\n          this.$ = [\n            $$[$0 - 4],\n            $$[$0 - 1],\n            { type: \"addMessage\", from: $$[$0 - 4].actor, to: $$[$0 - 1].actor, signalType: $$[$0 - 3], msg: $$[$0] },\n            { type: \"activeEnd\", signalType: yy.LINETYPE.ACTIVE_END, actor: $$[$0 - 4] }\n          ];\n          break;\n        case 67:\n          this.$ = [$$[$0 - 3], $$[$0 - 1], { type: \"addMessage\", from: $$[$0 - 3].actor, to: $$[$0 - 1].actor, signalType: $$[$0 - 2], msg: $$[$0] }];\n          break;\n        case 68:\n          this.$ = { type: \"addParticipant\", actor: $$[$0] };\n          break;\n        case 69:\n          this.$ = yy.LINETYPE.SOLID_OPEN;\n          break;\n        case 70:\n          this.$ = yy.LINETYPE.DOTTED_OPEN;\n          break;\n        case 71:\n          this.$ = yy.LINETYPE.SOLID;\n          break;\n        case 72:\n          this.$ = yy.LINETYPE.DOTTED;\n          break;\n        case 73:\n          this.$ = yy.LINETYPE.SOLID_CROSS;\n          break;\n        case 74:\n          this.$ = yy.LINETYPE.DOTTED_CROSS;\n          break;\n        case 75:\n          this.$ = yy.LINETYPE.SOLID_POINT;\n          break;\n        case 76:\n          this.$ = yy.LINETYPE.DOTTED_POINT;\n          break;\n        case 77:\n          this.$ = yy.parseMessage($$[$0].trim().substring(1));\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: $V0, 5: $V1, 6: $V2 }, { 1: [3] }, { 3: 5, 4: $V0, 5: $V1, 6: $V2 }, { 3: 6, 4: $V0, 5: $V1, 6: $V2 }, o([1, 4, 5, 13, 14, 18, 21, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 46, 50, 52, 53, 54, 59, 60, 61, 62, 70], $V3, { 7: 7 }), { 1: [2, 1] }, { 1: [2, 2] }, { 1: [2, 3], 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, o($Vx, [2, 5]), { 9: 47, 12: 12, 13: $V6, 14: $V7, 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, o($Vx, [2, 7]), o($Vx, [2, 8]), o($Vx, [2, 14]), { 12: 48, 50: $Vo, 52: $Vp, 53: $Vq }, { 15: [1, 49] }, { 5: [1, 50] }, { 5: [1, 53], 19: [1, 51], 20: [1, 52] }, { 22: 54, 70: $Vw }, { 22: 55, 70: $Vw }, { 5: [1, 56] }, { 5: [1, 57] }, { 5: [1, 58] }, { 5: [1, 59] }, { 5: [1, 60] }, o($Vx, [2, 29]), o($Vx, [2, 30]), { 32: [1, 61] }, { 34: [1, 62] }, o($Vx, [2, 33]), { 15: [1, 63] }, { 15: [1, 64] }, { 15: [1, 65] }, { 15: [1, 66] }, { 15: [1, 67] }, { 15: [1, 68] }, { 15: [1, 69] }, { 15: [1, 70] }, { 22: 71, 70: $Vw }, { 22: 72, 70: $Vw }, { 22: 73, 70: $Vw }, { 67: 74, 71: [1, 75], 72: [1, 76], 73: [1, 77], 74: [1, 78], 75: [1, 79], 76: [1, 80], 77: [1, 81], 78: [1, 82] }, { 55: 83, 57: [1, 84], 65: [1, 85], 66: [1, 86] }, { 22: 87, 70: $Vw }, { 22: 88, 70: $Vw }, { 22: 89, 70: $Vw }, { 22: 90, 70: $Vw }, o([5, 51, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79], [2, 68]), o($Vx, [2, 6]), o($Vx, [2, 15]), o($Vy, [2, 9], { 10: 91 }), o($Vx, [2, 17]), { 5: [1, 93], 19: [1, 92] }, { 5: [1, 94] }, o($Vx, [2, 21]), { 5: [1, 95] }, { 5: [1, 96] }, o($Vx, [2, 24]), o($Vx, [2, 25]), o($Vx, [2, 26]), o($Vx, [2, 27]), o($Vx, [2, 28]), o($Vx, [2, 31]), o($Vx, [2, 32]), o($Vz, $V3, { 7: 97 }), o($Vz, $V3, { 7: 98 }), o($Vz, $V3, { 7: 99 }), o($VA, $V3, { 40: 100, 7: 101 }), o($VB, $V3, { 42: 102, 7: 103 }), o($VB, $V3, { 7: 103, 42: 104 }), o($VC, $V3, { 45: 105, 7: 106 }), o($Vz, $V3, { 7: 107 }), { 5: [1, 109], 51: [1, 108] }, { 5: [1, 111], 51: [1, 110] }, { 5: [1, 112] }, { 22: 115, 68: [1, 113], 69: [1, 114], 70: $Vw }, o($VD, [2, 69]), o($VD, [2, 70]), o($VD, [2, 71]), o($VD, [2, 72]), o($VD, [2, 73]), o($VD, [2, 74]), o($VD, [2, 75]), o($VD, [2, 76]), { 22: 116, 70: $Vw }, { 22: 118, 58: 117, 70: $Vw }, { 70: [2, 63] }, { 70: [2, 64] }, { 56: 119, 79: $VE }, { 56: 121, 79: $VE }, { 56: 122, 79: $VE }, { 56: 123, 79: $VE }, { 4: [1, 126], 5: [1, 128], 11: 125, 12: 127, 16: [1, 124], 50: $Vo, 52: $Vp, 53: $Vq }, { 5: [1, 129] }, o($Vx, [2, 19]), o($Vx, [2, 20]), o($Vx, [2, 22]), o($Vx, [2, 23]), { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [1, 130], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [1, 131], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [1, 132], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 16: [1, 133] }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [2, 46], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 49: [1, 134], 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 16: [1, 135] }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [2, 44], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 48: [1, 136], 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 16: [1, 137] }, { 16: [1, 138] }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [2, 42], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 47: [1, 139], 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 4: $V4, 5: $V5, 8: 8, 9: 10, 12: 12, 13: $V6, 14: $V7, 16: [1, 140], 17: 15, 18: $V8, 21: $V9, 22: 40, 23: $Va, 24: 19, 25: 20, 26: 21, 27: 22, 28: 23, 29: $Vb, 30: $Vc, 31: $Vd, 33: $Ve, 35: $Vf, 36: $Vg, 37: $Vh, 38: $Vi, 39: $Vj, 41: $Vk, 43: $Vl, 44: $Vm, 46: $Vn, 50: $Vo, 52: $Vp, 53: $Vq, 54: $Vr, 59: $Vs, 60: $Vt, 61: $Vu, 62: $Vv, 70: $Vw }, { 15: [1, 141] }, o($Vx, [2, 49]), { 15: [1, 142] }, o($Vx, [2, 51]), o($Vx, [2, 52]), { 22: 143, 70: $Vw }, { 22: 144, 70: $Vw }, { 56: 145, 79: $VE }, { 56: 146, 79: $VE }, { 56: 147, 79: $VE }, { 64: [1, 148], 79: [2, 62] }, { 5: [2, 55] }, { 5: [2, 77] }, { 5: [2, 56] }, { 5: [2, 57] }, { 5: [2, 58] }, o($Vx, [2, 16]), o($Vy, [2, 10]), { 12: 149, 50: $Vo, 52: $Vp, 53: $Vq }, o($Vy, [2, 12]), o($Vy, [2, 13]), o($Vx, [2, 18]), o($Vx, [2, 34]), o($Vx, [2, 35]), o($Vx, [2, 36]), o($Vx, [2, 37]), { 15: [1, 150] }, o($Vx, [2, 38]), { 15: [1, 151] }, o($Vx, [2, 39]), o($Vx, [2, 40]), { 15: [1, 152] }, o($Vx, [2, 41]), { 5: [1, 153] }, { 5: [1, 154] }, { 56: 155, 79: $VE }, { 56: 156, 79: $VE }, { 5: [2, 67] }, { 5: [2, 53] }, { 5: [2, 54] }, { 22: 157, 70: $Vw }, o($Vy, [2, 11]), o($VA, $V3, { 7: 101, 40: 158 }), o($VB, $V3, { 7: 103, 42: 159 }), o($VC, $V3, { 7: 106, 45: 160 }), o($Vx, [2, 48]), o($Vx, [2, 50]), { 5: [2, 65] }, { 5: [2, 66] }, { 79: [2, 61] }, { 16: [2, 47] }, { 16: [2, 45] }, { 16: [2, 43] }],\n    defaultActions: { 5: [2, 1], 6: [2, 2], 85: [2, 63], 86: [2, 64], 119: [2, 55], 120: [2, 77], 121: [2, 56], 122: [2, 57], 123: [2, 58], 145: [2, 67], 146: [2, 53], 147: [2, 54], 155: [2, 65], 156: [2, 66], 157: [2, 61], 158: [2, 47], 159: [2, 45], 160: [2, 43] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state2, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state2 = stack[stack.length - 1];\n        if (this.defaultActions[state2]) {\n          action = this.defaultActions[state2];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state2] && table[state2][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state2]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state2 + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 5;\n          case 1:\n            break;\n          case 2:\n            break;\n          case 3:\n            break;\n          case 4:\n            break;\n          case 5:\n            break;\n          case 6:\n            return 19;\n          case 7:\n            this.begin(\"LINE\");\n            return 14;\n          case 8:\n            this.begin(\"ID\");\n            return 50;\n          case 9:\n            this.begin(\"ID\");\n            return 52;\n          case 10:\n            return 13;\n          case 11:\n            this.begin(\"ID\");\n            return 53;\n          case 12:\n            yy_.yytext = yy_.yytext.trim();\n            this.begin(\"ALIAS\");\n            return 70;\n          case 13:\n            this.popState();\n            this.popState();\n            this.begin(\"LINE\");\n            return 51;\n          case 14:\n            this.popState();\n            this.popState();\n            return 5;\n          case 15:\n            this.begin(\"LINE\");\n            return 36;\n          case 16:\n            this.begin(\"LINE\");\n            return 37;\n          case 17:\n            this.begin(\"LINE\");\n            return 38;\n          case 18:\n            this.begin(\"LINE\");\n            return 39;\n          case 19:\n            this.begin(\"LINE\");\n            return 49;\n          case 20:\n            this.begin(\"LINE\");\n            return 41;\n          case 21:\n            this.begin(\"LINE\");\n            return 43;\n          case 22:\n            this.begin(\"LINE\");\n            return 48;\n          case 23:\n            this.begin(\"LINE\");\n            return 44;\n          case 24:\n            this.begin(\"LINE\");\n            return 47;\n          case 25:\n            this.begin(\"LINE\");\n            return 46;\n          case 26:\n            this.popState();\n            return 15;\n          case 27:\n            return 16;\n          case 28:\n            return 65;\n          case 29:\n            return 66;\n          case 30:\n            return 59;\n          case 31:\n            return 60;\n          case 32:\n            return 61;\n          case 33:\n            return 62;\n          case 34:\n            return 57;\n          case 35:\n            return 54;\n          case 36:\n            this.begin(\"ID\");\n            return 21;\n          case 37:\n            this.begin(\"ID\");\n            return 23;\n          case 38:\n            return 29;\n          case 39:\n            return 30;\n          case 40:\n            this.begin(\"acc_title\");\n            return 31;\n          case 41:\n            this.popState();\n            return \"acc_title_value\";\n          case 42:\n            this.begin(\"acc_descr\");\n            return 33;\n          case 43:\n            this.popState();\n            return \"acc_descr_value\";\n          case 44:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 45:\n            this.popState();\n            break;\n          case 46:\n            return \"acc_descr_multiline_value\";\n          case 47:\n            return 6;\n          case 48:\n            return 18;\n          case 49:\n            return 20;\n          case 50:\n            return 64;\n          case 51:\n            return 5;\n          case 52:\n            yy_.yytext = yy_.yytext.trim();\n            return 70;\n          case 53:\n            return 73;\n          case 54:\n            return 74;\n          case 55:\n            return 71;\n          case 56:\n            return 72;\n          case 57:\n            return 75;\n          case 58:\n            return 76;\n          case 59:\n            return 77;\n          case 60:\n            return 78;\n          case 61:\n            return 79;\n          case 62:\n            return 68;\n          case 63:\n            return 69;\n          case 64:\n            return 5;\n          case 65:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[0-9]+(?=[ \\n]+))/i, /^(?:box\\b)/i, /^(?:participant\\b)/i, /^(?:actor\\b)/i, /^(?:create\\b)/i, /^(?:destroy\\b)/i, /^(?:[^\\->:\\n,;]+?([\\-]*[^\\->:\\n,;]+?)*?(?=((?!\\n)\\s)+as(?!\\n)\\s|[#\\n;]|$))/i, /^(?:as\\b)/i, /^(?:(?:))/i, /^(?:loop\\b)/i, /^(?:rect\\b)/i, /^(?:opt\\b)/i, /^(?:alt\\b)/i, /^(?:else\\b)/i, /^(?:par\\b)/i, /^(?:par_over\\b)/i, /^(?:and\\b)/i, /^(?:critical\\b)/i, /^(?:option\\b)/i, /^(?:break\\b)/i, /^(?:(?:[:]?(?:no)?wrap)?[^#\\n;]*)/i, /^(?:end\\b)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:links\\b)/i, /^(?:link\\b)/i, /^(?:properties\\b)/i, /^(?:details\\b)/i, /^(?:over\\b)/i, /^(?:note\\b)/i, /^(?:activate\\b)/i, /^(?:deactivate\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:title:\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:sequenceDiagram\\b)/i, /^(?:autonumber\\b)/i, /^(?:off\\b)/i, /^(?:,)/i, /^(?:;)/i, /^(?:[^\\+\\->:\\n,;]+((?!(-x|--x|-\\)|--\\)))[\\-]*[^\\+\\->:\\n,;]+)*)/i, /^(?:->>)/i, /^(?:-->>)/i, /^(?:->)/i, /^(?:-->)/i, /^(?:-[x])/i, /^(?:--[x])/i, /^(?:-[\\)])/i, /^(?:--[\\)])/i, /^(?::(?:(?:no)?wrap)?[^#\\n;]+)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"acc_descr_multiline\": { \"rules\": [45, 46], \"inclusive\": false }, \"acc_descr\": { \"rules\": [43], \"inclusive\": false }, \"acc_title\": { \"rules\": [41], \"inclusive\": false }, \"ID\": { \"rules\": [2, 3, 12], \"inclusive\": false }, \"ALIAS\": { \"rules\": [2, 3, 13, 14], \"inclusive\": false }, \"LINE\": { \"rules\": [2, 3, 26], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nclass ImperativeState {\n  /**\n   * @param init - Function that creates the default state.\n   */\n  constructor(init) {\n    this.init = init;\n    this.records = this.init();\n  }\n  reset() {\n    this.records = this.init();\n  }\n}\nconst state = new ImperativeState(() => ({\n  prevActor: void 0,\n  actors: {},\n  createdActors: {},\n  destroyedActors: {},\n  boxes: [],\n  messages: [],\n  notes: [],\n  sequenceNumbersEnabled: false,\n  wrapEnabled: void 0,\n  currentBox: void 0,\n  lastCreated: void 0,\n  lastDestroyed: void 0\n}));\nconst addBox = function(data) {\n  state.records.boxes.push({\n    name: data.text,\n    wrap: data.wrap === void 0 && autoWrap() || !!data.wrap,\n    fill: data.color,\n    actorKeys: []\n  });\n  state.records.currentBox = state.records.boxes.slice(-1)[0];\n};\nconst addActor = function(id, name, description, type) {\n  let assignedBox = state.records.currentBox;\n  const old = state.records.actors[id];\n  if (old) {\n    if (state.records.currentBox && old.box && state.records.currentBox !== old.box) {\n      throw new Error(\n        \"A same participant should only be defined in one Box: \" + old.name + \" can't be in '\" + old.box.name + \"' and in '\" + state.records.currentBox.name + \"' at the same time.\"\n      );\n    }\n    assignedBox = old.box ? old.box : state.records.currentBox;\n    old.box = assignedBox;\n    if (old && name === old.name && description == null) {\n      return;\n    }\n  }\n  if (description == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  if (type == null || description.text == null) {\n    description = { text: name, wrap: null, type };\n  }\n  state.records.actors[id] = {\n    box: assignedBox,\n    name,\n    description: description.text,\n    wrap: description.wrap === void 0 && autoWrap() || !!description.wrap,\n    prevActor: state.records.prevActor,\n    links: {},\n    properties: {},\n    actorCnt: null,\n    rectData: null,\n    type: type || \"participant\"\n  };\n  if (state.records.prevActor && state.records.actors[state.records.prevActor]) {\n    state.records.actors[state.records.prevActor].nextActor = id;\n  }\n  if (state.records.currentBox) {\n    state.records.currentBox.actorKeys.push(id);\n  }\n  state.records.prevActor = id;\n};\nconst activationCount = (part) => {\n  let i;\n  let count = 0;\n  for (i = 0; i < state.records.messages.length; i++) {\n    if (state.records.messages[i].type === LINETYPE.ACTIVE_START && state.records.messages[i].from.actor === part) {\n      count++;\n    }\n    if (state.records.messages[i].type === LINETYPE.ACTIVE_END && state.records.messages[i].from.actor === part) {\n      count--;\n    }\n  }\n  return count;\n};\nconst addMessage = function(idFrom, idTo, message, answer) {\n  state.records.messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n    answer\n  });\n};\nconst addSignal = function(idFrom, idTo, message = { text: void 0, wrap: void 0 }, messageType, activate = false) {\n  if (messageType === LINETYPE.ACTIVE_END) {\n    const cnt = activationCount(idFrom.actor);\n    if (cnt < 1) {\n      let error = new Error(\"Trying to inactivate an inactive participant (\" + idFrom.actor + \")\");\n      error.hash = {\n        text: \"->>-\",\n        token: \"->>-\",\n        line: \"1\",\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: [\"'ACTIVE_PARTICIPANT'\"]\n      };\n      throw error;\n    }\n  }\n  state.records.messages.push({\n    from: idFrom,\n    to: idTo,\n    message: message.text,\n    wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n    type: messageType,\n    activate\n  });\n  return true;\n};\nconst hasAtLeastOneBox = function() {\n  return state.records.boxes.length > 0;\n};\nconst hasAtLeastOneBoxWithTitle = function() {\n  return state.records.boxes.some((b) => b.name);\n};\nconst getMessages = function() {\n  return state.records.messages;\n};\nconst getBoxes = function() {\n  return state.records.boxes;\n};\nconst getActors = function() {\n  return state.records.actors;\n};\nconst getCreatedActors = function() {\n  return state.records.createdActors;\n};\nconst getDestroyedActors = function() {\n  return state.records.destroyedActors;\n};\nconst getActor = function(id) {\n  return state.records.actors[id];\n};\nconst getActorKeys = function() {\n  return Object.keys(state.records.actors);\n};\nconst enableSequenceNumbers = function() {\n  state.records.sequenceNumbersEnabled = true;\n};\nconst disableSequenceNumbers = function() {\n  state.records.sequenceNumbersEnabled = false;\n};\nconst showSequenceNumbers = () => state.records.sequenceNumbersEnabled;\nconst setWrap = function(wrapSetting) {\n  state.records.wrapEnabled = wrapSetting;\n};\nconst autoWrap = () => {\n  if (state.records.wrapEnabled !== void 0) {\n    return state.records.wrapEnabled;\n  }\n  return (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)().sequence.wrap;\n};\nconst clear = function() {\n  state.reset();\n  (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.v)();\n};\nconst parseMessage = function(str) {\n  const _str = str.trim();\n  const message = {\n    text: _str.replace(/^:?(?:no)?wrap:/, \"\").trim(),\n    wrap: _str.match(/^:?wrap:/) !== null ? true : _str.match(/^:?nowrap:/) !== null ? false : void 0\n  };\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"parseMessage:\", message);\n  return message;\n};\nconst parseBoxData = function(str) {\n  const match = str.match(/^((?:rgba?|hsla?)\\s*\\(.*\\)|\\w*)(.*)$/);\n  let color = match != null && match[1] ? match[1].trim() : \"transparent\";\n  let title = match != null && match[2] ? match[2].trim() : void 0;\n  if (window && window.CSS) {\n    if (!window.CSS.supports(\"color\", color)) {\n      color = \"transparent\";\n      title = str.trim();\n    }\n  } else {\n    const style = new Option().style;\n    style.color = color;\n    if (style.color !== color) {\n      color = \"transparent\";\n      title = str.trim();\n    }\n  }\n  return {\n    color,\n    text: title !== void 0 ? (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.d)(title.replace(/^:?(?:no)?wrap:/, \"\"), (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : void 0,\n    wrap: title !== void 0 ? title.match(/^:?wrap:/) !== null ? true : title.match(/^:?nowrap:/) !== null ? false : void 0 : void 0\n  };\n};\nconst LINETYPE = {\n  SOLID: 0,\n  DOTTED: 1,\n  NOTE: 2,\n  SOLID_CROSS: 3,\n  DOTTED_CROSS: 4,\n  SOLID_OPEN: 5,\n  DOTTED_OPEN: 6,\n  LOOP_START: 10,\n  LOOP_END: 11,\n  ALT_START: 12,\n  ALT_ELSE: 13,\n  ALT_END: 14,\n  OPT_START: 15,\n  OPT_END: 16,\n  ACTIVE_START: 17,\n  ACTIVE_END: 18,\n  PAR_START: 19,\n  PAR_AND: 20,\n  PAR_END: 21,\n  RECT_START: 22,\n  RECT_END: 23,\n  SOLID_POINT: 24,\n  DOTTED_POINT: 25,\n  AUTONUMBER: 26,\n  CRITICAL_START: 27,\n  CRITICAL_OPTION: 28,\n  CRITICAL_END: 29,\n  BREAK_START: 30,\n  BREAK_END: 31,\n  PAR_OVER_START: 32\n};\nconst ARROWTYPE = {\n  FILLED: 0,\n  OPEN: 1\n};\nconst PLACEMENT = {\n  LEFTOF: 0,\n  RIGHTOF: 1,\n  OVER: 2\n};\nconst addNote = function(actor, placement, message) {\n  const note = {\n    actor,\n    placement,\n    message: message.text,\n    wrap: message.wrap === void 0 && autoWrap() || !!message.wrap\n  };\n  const actors = [].concat(actor, actor);\n  state.records.notes.push(note);\n  state.records.messages.push({\n    from: actors[0],\n    to: actors[1],\n    message: message.text,\n    wrap: message.wrap === void 0 && autoWrap() || !!message.wrap,\n    type: LINETYPE.NOTE,\n    placement\n  });\n};\nconst addLinks = function(actorId, text) {\n  const actor = getActor(actorId);\n  try {\n    let sanitizedText = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n    sanitizedText = sanitizedText.replace(/&amp;/g, \"&\");\n    sanitizedText = sanitizedText.replace(/&equals;/g, \"=\");\n    const links = JSON.parse(sanitizedText);\n    insertLinks(actor, links);\n  } catch (e) {\n    _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor link text\", e);\n  }\n};\nconst addALink = function(actorId, text) {\n  const actor = getActor(actorId);\n  try {\n    const links = {};\n    let sanitizedText = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n    var sep = sanitizedText.indexOf(\"@\");\n    sanitizedText = sanitizedText.replace(/&amp;/g, \"&\");\n    sanitizedText = sanitizedText.replace(/&equals;/g, \"=\");\n    var label = sanitizedText.slice(0, sep - 1).trim();\n    var link = sanitizedText.slice(sep + 1).trim();\n    links[label] = link;\n    insertLinks(actor, links);\n  } catch (e) {\n    _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor link text\", e);\n  }\n};\nfunction insertLinks(actor, links) {\n  if (actor.links == null) {\n    actor.links = links;\n  } else {\n    for (let key in links) {\n      actor.links[key] = links[key];\n    }\n  }\n}\nconst addProperties = function(actorId, text) {\n  const actor = getActor(actorId);\n  try {\n    let sanitizedText = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.d)(text.text, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n    const properties = JSON.parse(sanitizedText);\n    insertProperties(actor, properties);\n  } catch (e) {\n    _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor properties text\", e);\n  }\n};\nfunction insertProperties(actor, properties) {\n  if (actor.properties == null) {\n    actor.properties = properties;\n  } else {\n    for (let key in properties) {\n      actor.properties[key] = properties[key];\n    }\n  }\n}\nfunction boxEnd() {\n  state.records.currentBox = void 0;\n}\nconst addDetails = function(actorId, text) {\n  const actor = getActor(actorId);\n  const elem = document.getElementById(text.text);\n  try {\n    const text2 = elem.innerHTML;\n    const details = JSON.parse(text2);\n    if (details[\"properties\"]) {\n      insertProperties(actor, details[\"properties\"]);\n    }\n    if (details[\"links\"]) {\n      insertLinks(actor, details[\"links\"]);\n    }\n  } catch (e) {\n    _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while parsing actor details text\", e);\n  }\n};\nconst getActorProperty = function(actor, key) {\n  if (actor !== void 0 && actor.properties !== void 0) {\n    return actor.properties[key];\n  }\n  return void 0;\n};\nconst apply = function(param) {\n  if (Array.isArray(param)) {\n    param.forEach(function(item) {\n      apply(item);\n    });\n  } else {\n    switch (param.type) {\n      case \"sequenceIndex\":\n        state.records.messages.push({\n          from: void 0,\n          to: void 0,\n          message: {\n            start: param.sequenceIndex,\n            step: param.sequenceIndexStep,\n            visible: param.sequenceVisible\n          },\n          wrap: false,\n          type: param.signalType\n        });\n        break;\n      case \"addParticipant\":\n        addActor(param.actor, param.actor, param.description, param.draw);\n        break;\n      case \"createParticipant\":\n        if (state.records.actors[param.actor]) {\n          throw new Error(\n            \"It is not possible to have actors with the same id, even if one is destroyed before the next is created. Use 'AS' aliases to simulate the behavior\"\n          );\n        }\n        state.records.lastCreated = param.actor;\n        addActor(param.actor, param.actor, param.description, param.draw);\n        state.records.createdActors[param.actor] = state.records.messages.length;\n        break;\n      case \"destroyParticipant\":\n        state.records.lastDestroyed = param.actor;\n        state.records.destroyedActors[param.actor] = state.records.messages.length;\n        break;\n      case \"activeStart\":\n        addSignal(param.actor, void 0, void 0, param.signalType);\n        break;\n      case \"activeEnd\":\n        addSignal(param.actor, void 0, void 0, param.signalType);\n        break;\n      case \"addNote\":\n        addNote(param.actor, param.placement, param.text);\n        break;\n      case \"addLinks\":\n        addLinks(param.actor, param.text);\n        break;\n      case \"addALink\":\n        addALink(param.actor, param.text);\n        break;\n      case \"addProperties\":\n        addProperties(param.actor, param.text);\n        break;\n      case \"addDetails\":\n        addDetails(param.actor, param.text);\n        break;\n      case \"addMessage\":\n        if (state.records.lastCreated) {\n          if (param.to !== state.records.lastCreated) {\n            throw new Error(\n              \"The created participant \" + state.records.lastCreated + \" does not have an associated creating message after its declaration. Please check the sequence diagram.\"\n            );\n          } else {\n            state.records.lastCreated = void 0;\n          }\n        } else if (state.records.lastDestroyed) {\n          if (param.to !== state.records.lastDestroyed && param.from !== state.records.lastDestroyed) {\n            throw new Error(\n              \"The destroyed participant \" + state.records.lastDestroyed + \" does not have an associated destroying message after its declaration. Please check the sequence diagram.\"\n            );\n          } else {\n            state.records.lastDestroyed = void 0;\n          }\n        }\n        addSignal(param.from, param.to, param.msg, param.signalType, param.activate);\n        break;\n      case \"boxStart\":\n        addBox(param.boxData);\n        break;\n      case \"boxEnd\":\n        boxEnd();\n        break;\n      case \"loopStart\":\n        addSignal(void 0, void 0, param.loopText, param.signalType);\n        break;\n      case \"loopEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"rectStart\":\n        addSignal(void 0, void 0, param.color, param.signalType);\n        break;\n      case \"rectEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"optStart\":\n        addSignal(void 0, void 0, param.optText, param.signalType);\n        break;\n      case \"optEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"altStart\":\n        addSignal(void 0, void 0, param.altText, param.signalType);\n        break;\n      case \"else\":\n        addSignal(void 0, void 0, param.altText, param.signalType);\n        break;\n      case \"altEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"setAccTitle\":\n        (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.s)(param.text);\n        break;\n      case \"parStart\":\n        addSignal(void 0, void 0, param.parText, param.signalType);\n        break;\n      case \"and\":\n        addSignal(void 0, void 0, param.parText, param.signalType);\n        break;\n      case \"parEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"criticalStart\":\n        addSignal(void 0, void 0, param.criticalText, param.signalType);\n        break;\n      case \"option\":\n        addSignal(void 0, void 0, param.optionText, param.signalType);\n        break;\n      case \"criticalEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n      case \"breakStart\":\n        addSignal(void 0, void 0, param.breakText, param.signalType);\n        break;\n      case \"breakEnd\":\n        addSignal(void 0, void 0, void 0, param.signalType);\n        break;\n    }\n  }\n};\nconst db = {\n  addActor,\n  addMessage,\n  addSignal,\n  addLinks,\n  addDetails,\n  addProperties,\n  autoWrap,\n  setWrap,\n  enableSequenceNumbers,\n  disableSequenceNumbers,\n  showSequenceNumbers,\n  getMessages,\n  getActors,\n  getCreatedActors,\n  getDestroyedActors,\n  getActor,\n  getActorKeys,\n  getActorProperty,\n  getAccTitle: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.g,\n  getBoxes,\n  getDiagramTitle: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.t,\n  setDiagramTitle: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.q,\n  getConfig: () => (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)().sequence,\n  clear,\n  parseMessage,\n  parseBoxData,\n  LINETYPE,\n  ARROWTYPE,\n  PLACEMENT,\n  addNote,\n  setAccTitle: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.s,\n  apply,\n  setAccDescription: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.b,\n  getAccDescription: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.a,\n  hasAtLeastOneBox,\n  hasAtLeastOneBoxWithTitle\n};\nconst getStyles = (options) => `.actor {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n\n  text.actor > tspan {\n    fill: ${options.actorTextColor};\n    stroke: none;\n  }\n\n  .actor-line {\n    stroke: ${options.actorLineColor};\n  }\n\n  .messageLine0 {\n    stroke-width: 1.5;\n    stroke-dasharray: none;\n    stroke: ${options.signalColor};\n  }\n\n  .messageLine1 {\n    stroke-width: 1.5;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.signalColor};\n  }\n\n  #arrowhead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .sequenceNumber {\n    fill: ${options.sequenceNumberColor};\n  }\n\n  #sequencenumber {\n    fill: ${options.signalColor};\n  }\n\n  #crosshead path {\n    fill: ${options.signalColor};\n    stroke: ${options.signalColor};\n  }\n\n  .messageText {\n    fill: ${options.signalTextColor};\n    stroke: none;\n  }\n\n  .labelBox {\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBkgColor};\n  }\n\n  .labelText, .labelText > tspan {\n    fill: ${options.labelTextColor};\n    stroke: none;\n  }\n\n  .loopText, .loopText > tspan {\n    fill: ${options.loopTextColor};\n    stroke: none;\n  }\n\n  .loopLine {\n    stroke-width: 2px;\n    stroke-dasharray: 2, 2;\n    stroke: ${options.labelBoxBorderColor};\n    fill: ${options.labelBoxBorderColor};\n  }\n\n  .note {\n    //stroke: #decc93;\n    stroke: ${options.noteBorderColor};\n    fill: ${options.noteBkgColor};\n  }\n\n  .noteText, .noteText > tspan {\n    fill: ${options.noteTextColor};\n    stroke: none;\n  }\n\n  .activation0 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation1 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .activation2 {\n    fill: ${options.activationBkgColor};\n    stroke: ${options.activationBorderColor};\n  }\n\n  .actorPopupMenu {\n    position: absolute;\n  }\n\n  .actorPopupMenuPanel {\n    position: absolute;\n    fill: ${options.actorBkg};\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    filter: drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4));\n}\n  .actor-man line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n  }\n  .actor-man circle, line {\n    stroke: ${options.actorBorder};\n    fill: ${options.actorBkg};\n    stroke-width: 2px;\n  }\n`;\nconst styles = getStyles;\nconst ACTOR_TYPE_WIDTH = 18 * 2;\nconst TOP_ACTOR_CLASS = \"actor-top\";\nconst BOTTOM_ACTOR_CLASS = \"actor-bottom\";\nconst drawRect = function(elem, rectData) {\n  return (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.d)(elem, rectData);\n};\nconst drawPopup = function(elem, actor, minMenuWidth, textAttrs, forceMenus) {\n  if (actor.links === void 0 || actor.links === null || Object.keys(actor.links).length === 0) {\n    return { height: 0, width: 0 };\n  }\n  const links = actor.links;\n  const actorCnt2 = actor.actorCnt;\n  const rectData = actor.rectData;\n  var displayValue = \"none\";\n  if (forceMenus) {\n    displayValue = \"block !important\";\n  }\n  const g = elem.append(\"g\");\n  g.attr(\"id\", \"actor\" + actorCnt2 + \"_popup\");\n  g.attr(\"class\", \"actorPopupMenu\");\n  g.attr(\"display\", displayValue);\n  var actorClass = \"\";\n  if (rectData.class !== void 0) {\n    actorClass = \" \" + rectData.class;\n  }\n  let menuWidth = rectData.width > minMenuWidth ? rectData.width : minMenuWidth;\n  const rectElem = g.append(\"rect\");\n  rectElem.attr(\"class\", \"actorPopupMenuPanel\" + actorClass);\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.height);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", menuWidth);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (links != null) {\n    var linkY = 20;\n    for (let key in links) {\n      var linkElem = g.append(\"a\");\n      var sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl)(links[key]);\n      linkElem.attr(\"xlink:href\", sanitizedLink);\n      linkElem.attr(\"target\", \"_blank\");\n      _drawMenuItemTextCandidateFunc(textAttrs)(\n        key,\n        linkElem,\n        rectData.x + 10,\n        rectData.height + linkY,\n        menuWidth,\n        20,\n        { class: \"actor\" },\n        textAttrs\n      );\n      linkY += 30;\n    }\n  }\n  rectElem.attr(\"height\", linkY);\n  return { height: rectData.height + linkY, width: menuWidth };\n};\nconst popupMenuToggle = function(popId) {\n  return \"var pu = document.getElementById('\" + popId + \"'); if (pu != null) { pu.style.display = pu.style.display == 'block' ? 'none' : 'block'; }\";\n};\nconst drawKatex = async function(elem, textData, msgModel = null) {\n  let textElem = elem.append(\"foreignObject\");\n  const linesSanitized = await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.r)(textData.text, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.F)());\n  const divElem = textElem.append(\"xhtml:div\").attr(\"style\", \"width: fit-content;\").attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\").html(linesSanitized);\n  const dim = divElem.node().getBoundingClientRect();\n  textElem.attr(\"height\", Math.round(dim.height)).attr(\"width\", Math.round(dim.width));\n  if (textData.class === \"noteText\") {\n    const rectElem = elem.node().firstChild;\n    rectElem.setAttribute(\"height\", dim.height + 2 * textData.textMargin);\n    const rectDim = rectElem.getBBox();\n    textElem.attr(\"x\", Math.round(rectDim.x + rectDim.width / 2 - dim.width / 2)).attr(\"y\", Math.round(rectDim.y + rectDim.height / 2 - dim.height / 2));\n  } else if (msgModel) {\n    let { startx, stopx, starty } = msgModel;\n    if (startx > stopx) {\n      const temp = startx;\n      startx = stopx;\n      stopx = temp;\n    }\n    textElem.attr(\"x\", Math.round(startx + Math.abs(startx - stopx) / 2 - dim.width / 2));\n    if (textData.class === \"loopText\") {\n      textElem.attr(\"y\", Math.round(starty));\n    } else {\n      textElem.attr(\"y\", Math.round(starty - dim.height));\n    }\n  }\n  return [textElem];\n};\nconst drawText = function(elem, textData) {\n  let prevTextHeight = 0;\n  let textHeight = 0;\n  const lines = textData.text.split(_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n  const [_textFontSize, _textFontSizePx] = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.D)(textData.fontSize);\n  let textElems = [];\n  let dy = 0;\n  let yfunc = () => textData.y;\n  if (textData.valign !== void 0 && textData.textMargin !== void 0 && textData.textMargin > 0) {\n    switch (textData.valign) {\n      case \"top\":\n      case \"start\":\n        yfunc = () => Math.round(textData.y + textData.textMargin);\n        break;\n      case \"middle\":\n      case \"center\":\n        yfunc = () => Math.round(textData.y + (prevTextHeight + textHeight + textData.textMargin) / 2);\n        break;\n      case \"bottom\":\n      case \"end\":\n        yfunc = () => Math.round(\n          textData.y + (prevTextHeight + textHeight + 2 * textData.textMargin) - textData.textMargin\n        );\n        break;\n    }\n  }\n  if (textData.anchor !== void 0 && textData.textMargin !== void 0 && textData.width !== void 0) {\n    switch (textData.anchor) {\n      case \"left\":\n      case \"start\":\n        textData.x = Math.round(textData.x + textData.textMargin);\n        textData.anchor = \"start\";\n        textData.dominantBaseline = \"middle\";\n        textData.alignmentBaseline = \"middle\";\n        break;\n      case \"middle\":\n      case \"center\":\n        textData.x = Math.round(textData.x + textData.width / 2);\n        textData.anchor = \"middle\";\n        textData.dominantBaseline = \"middle\";\n        textData.alignmentBaseline = \"middle\";\n        break;\n      case \"right\":\n      case \"end\":\n        textData.x = Math.round(textData.x + textData.width - textData.textMargin);\n        textData.anchor = \"end\";\n        textData.dominantBaseline = \"middle\";\n        textData.alignmentBaseline = \"middle\";\n        break;\n    }\n  }\n  for (let [i, line] of lines.entries()) {\n    if (textData.textMargin !== void 0 && textData.textMargin === 0 && _textFontSize !== void 0) {\n      dy = i * _textFontSize;\n    }\n    const textElem = elem.append(\"text\");\n    textElem.attr(\"x\", textData.x);\n    textElem.attr(\"y\", yfunc());\n    if (textData.anchor !== void 0) {\n      textElem.attr(\"text-anchor\", textData.anchor).attr(\"dominant-baseline\", textData.dominantBaseline).attr(\"alignment-baseline\", textData.alignmentBaseline);\n    }\n    if (textData.fontFamily !== void 0) {\n      textElem.style(\"font-family\", textData.fontFamily);\n    }\n    if (_textFontSizePx !== void 0) {\n      textElem.style(\"font-size\", _textFontSizePx);\n    }\n    if (textData.fontWeight !== void 0) {\n      textElem.style(\"font-weight\", textData.fontWeight);\n    }\n    if (textData.fill !== void 0) {\n      textElem.attr(\"fill\", textData.fill);\n    }\n    if (textData.class !== void 0) {\n      textElem.attr(\"class\", textData.class);\n    }\n    if (textData.dy !== void 0) {\n      textElem.attr(\"dy\", textData.dy);\n    } else if (dy !== 0) {\n      textElem.attr(\"dy\", dy);\n    }\n    const text = line || _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.Z;\n    if (textData.tspan) {\n      const span = textElem.append(\"tspan\");\n      span.attr(\"x\", textData.x);\n      if (textData.fill !== void 0) {\n        span.attr(\"fill\", textData.fill);\n      }\n      span.text(text);\n    } else {\n      textElem.text(text);\n    }\n    if (textData.valign !== void 0 && textData.textMargin !== void 0 && textData.textMargin > 0) {\n      textHeight += (textElem._groups || textElem)[0][0].getBBox().height;\n      prevTextHeight = textHeight;\n    }\n    textElems.push(textElem);\n  }\n  return textElems;\n};\nconst drawLabel = function(elem, txtObject) {\n  function genPoints(x, y, width, height, cut) {\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n  }\n  const polygon = elem.append(\"polygon\");\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, txtObject.width, txtObject.height, 7));\n  polygon.attr(\"class\", \"labelBox\");\n  txtObject.y = txtObject.y + txtObject.height / 2;\n  drawText(elem, txtObject);\n  return polygon;\n};\nlet actorCnt = -1;\nconst fixLifeLineHeights = (diagram2, actors, actorKeys, conf2) => {\n  if (!diagram2.select) {\n    return;\n  }\n  actorKeys.forEach((actorKey) => {\n    const actor = actors[actorKey];\n    const actorDOM = diagram2.select(\"#actor\" + actor.actorCnt);\n    if (!conf2.mirrorActors && actor.stopy) {\n      actorDOM.attr(\"y2\", actor.stopy + actor.height / 2);\n    } else if (conf2.mirrorActors) {\n      actorDOM.attr(\"y2\", actor.stopy);\n    }\n  });\n};\nconst drawActorTypeParticipant = async function(elem, actor, conf2, isFooter) {\n  const actorY = isFooter ? actor.stopy : actor.starty;\n  const center = actor.x + actor.width / 2;\n  const centerY = actorY + 5;\n  const boxplusLineGroup = elem.append(\"g\").lower();\n  var g = boxplusLineGroup;\n  if (!isFooter) {\n    actorCnt++;\n    if (Object.keys(actor.links || {}).length && !conf2.forceMenus) {\n      g.attr(\"onclick\", popupMenuToggle(`actor${actorCnt}_popup`)).attr(\"cursor\", \"pointer\");\n    }\n    g.append(\"line\").attr(\"id\", \"actor\" + actorCnt).attr(\"x1\", center).attr(\"y1\", centerY).attr(\"x2\", center).attr(\"y2\", 2e3).attr(\"class\", \"actor-line\").attr(\"class\", \"200\").attr(\"stroke-width\", \"0.5px\").attr(\"stroke\", \"#999\");\n    g = boxplusLineGroup.append(\"g\");\n    actor.actorCnt = actorCnt;\n    if (actor.links != null) {\n      g.attr(\"id\", \"root-\" + actorCnt);\n    }\n  }\n  const rect = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n  var cssclass = \"actor\";\n  if (actor.properties != null && actor.properties[\"class\"]) {\n    cssclass = actor.properties[\"class\"];\n  } else {\n    rect.fill = \"#eaeaea\";\n  }\n  if (isFooter) {\n    cssclass += ` ${BOTTOM_ACTOR_CLASS}`;\n  } else {\n    cssclass += ` ${TOP_ACTOR_CLASS}`;\n  }\n  rect.x = actor.x;\n  rect.y = actorY;\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = cssclass;\n  rect.rx = 3;\n  rect.ry = 3;\n  rect.name = actor.name;\n  const rectElem = drawRect(g, rect);\n  actor.rectData = rect;\n  if (actor.properties != null && actor.properties[\"icon\"]) {\n    const iconSrc = actor.properties[\"icon\"].trim();\n    if (iconSrc.charAt(0) === \"@\") {\n      (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.b)(g, rect.x + rect.width - 20, rect.y + 10, iconSrc.substr(1));\n    } else {\n      (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.c)(g, rect.x + rect.width - 20, rect.y + 10, iconSrc);\n    }\n  }\n  await _drawTextCandidateFunc(conf2, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(actor.description))(\n    actor.description,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"actor\" },\n    conf2\n  );\n  let height = actor.height;\n  if (rectElem.node) {\n    const bounds2 = rectElem.node().getBBox();\n    actor.height = bounds2.height;\n    height = bounds2.height;\n  }\n  return height;\n};\nconst drawActorTypeActor = async function(elem, actor, conf2, isFooter) {\n  const actorY = isFooter ? actor.stopy : actor.starty;\n  const center = actor.x + actor.width / 2;\n  const centerY = actorY + 80;\n  elem.lower();\n  if (!isFooter) {\n    actorCnt++;\n    elem.append(\"line\").attr(\"id\", \"actor\" + actorCnt).attr(\"x1\", center).attr(\"y1\", centerY).attr(\"x2\", center).attr(\"y2\", 2e3).attr(\"class\", \"actor-line\").attr(\"class\", \"200\").attr(\"stroke-width\", \"0.5px\").attr(\"stroke\", \"#999\");\n    actor.actorCnt = actorCnt;\n  }\n  const actElem = elem.append(\"g\");\n  let cssClass = \"actor-man\";\n  if (isFooter) {\n    cssClass += ` ${BOTTOM_ACTOR_CLASS}`;\n  } else {\n    cssClass += ` ${TOP_ACTOR_CLASS}`;\n  }\n  actElem.attr(\"class\", cssClass);\n  actElem.attr(\"name\", actor.name);\n  const rect = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n  rect.x = actor.x;\n  rect.y = actorY;\n  rect.fill = \"#eaeaea\";\n  rect.width = actor.width;\n  rect.height = actor.height;\n  rect.class = \"actor\";\n  rect.rx = 3;\n  rect.ry = 3;\n  actElem.append(\"line\").attr(\"id\", \"actor-man-torso\" + actorCnt).attr(\"x1\", center).attr(\"y1\", actorY + 25).attr(\"x2\", center).attr(\"y2\", actorY + 45);\n  actElem.append(\"line\").attr(\"id\", \"actor-man-arms\" + actorCnt).attr(\"x1\", center - ACTOR_TYPE_WIDTH / 2).attr(\"y1\", actorY + 33).attr(\"x2\", center + ACTOR_TYPE_WIDTH / 2).attr(\"y2\", actorY + 33);\n  actElem.append(\"line\").attr(\"x1\", center - ACTOR_TYPE_WIDTH / 2).attr(\"y1\", actorY + 60).attr(\"x2\", center).attr(\"y2\", actorY + 45);\n  actElem.append(\"line\").attr(\"x1\", center).attr(\"y1\", actorY + 45).attr(\"x2\", center + ACTOR_TYPE_WIDTH / 2 - 2).attr(\"y2\", actorY + 60);\n  const circle = actElem.append(\"circle\");\n  circle.attr(\"cx\", actor.x + actor.width / 2);\n  circle.attr(\"cy\", actorY + 10);\n  circle.attr(\"r\", 15);\n  circle.attr(\"width\", actor.width);\n  circle.attr(\"height\", actor.height);\n  const bounds2 = actElem.node().getBBox();\n  actor.height = bounds2.height;\n  await _drawTextCandidateFunc(conf2, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(actor.description))(\n    actor.description,\n    actElem,\n    rect.x,\n    rect.y + 35,\n    rect.width,\n    rect.height,\n    { class: \"actor\" },\n    conf2\n  );\n  return actor.height;\n};\nconst drawActor = async function(elem, actor, conf2, isFooter) {\n  switch (actor.type) {\n    case \"actor\":\n      return await drawActorTypeActor(elem, actor, conf2, isFooter);\n    case \"participant\":\n      return await drawActorTypeParticipant(elem, actor, conf2, isFooter);\n  }\n};\nconst drawBox = async function(elem, box, conf2) {\n  const boxplusTextGroup = elem.append(\"g\");\n  const g = boxplusTextGroup;\n  drawBackgroundRect(g, box);\n  if (box.name) {\n    await _drawTextCandidateFunc(conf2)(\n      box.name,\n      g,\n      box.x,\n      box.y + (box.textMaxHeight || 0) / 2,\n      box.width,\n      0,\n      { class: \"text\" },\n      conf2\n    );\n  }\n  g.lower();\n};\nconst anchorElement = function(elem) {\n  return elem.append(\"g\");\n};\nconst drawActivation = function(elem, bounds2, verticalPos, conf2, actorActivations2) {\n  const rect = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n  const g = bounds2.anchored;\n  rect.x = bounds2.startx;\n  rect.y = bounds2.starty;\n  rect.class = \"activation\" + actorActivations2 % 3;\n  rect.width = bounds2.stopx - bounds2.startx;\n  rect.height = verticalPos - bounds2.starty;\n  drawRect(g, rect);\n};\nconst drawLoop = async function(elem, loopModel, labelText, conf2) {\n  const {\n    boxMargin,\n    boxTextMargin,\n    labelBoxHeight,\n    labelBoxWidth,\n    messageFontFamily: fontFamily,\n    messageFontSize: fontSize,\n    messageFontWeight: fontWeight\n  } = conf2;\n  const g = elem.append(\"g\");\n  const drawLoopLine = function(startx, starty, stopx, stopy) {\n    return g.append(\"line\").attr(\"x1\", startx).attr(\"y1\", starty).attr(\"x2\", stopx).attr(\"y2\", stopy).attr(\"class\", \"loopLine\");\n  };\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.stopx, loopModel.starty);\n  drawLoopLine(loopModel.stopx, loopModel.starty, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.stopy, loopModel.stopx, loopModel.stopy);\n  drawLoopLine(loopModel.startx, loopModel.starty, loopModel.startx, loopModel.stopy);\n  if (loopModel.sections !== void 0) {\n    loopModel.sections.forEach(function(item) {\n      drawLoopLine(loopModel.startx, item.y, loopModel.stopx, item.y).style(\n        \"stroke-dasharray\",\n        \"3, 3\"\n      );\n    });\n  }\n  let txt = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n  txt.text = labelText;\n  txt.x = loopModel.startx;\n  txt.y = loopModel.starty;\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.anchor = \"middle\";\n  txt.valign = \"middle\";\n  txt.tspan = false;\n  txt.width = labelBoxWidth || 50;\n  txt.height = labelBoxHeight || 20;\n  txt.textMargin = boxTextMargin;\n  txt.class = \"labelText\";\n  drawLabel(g, txt);\n  txt = getTextObj();\n  txt.text = loopModel.title;\n  txt.x = loopModel.startx + labelBoxWidth / 2 + (loopModel.stopx - loopModel.startx) / 2;\n  txt.y = loopModel.starty + boxMargin + boxTextMargin;\n  txt.anchor = \"middle\";\n  txt.valign = \"middle\";\n  txt.textMargin = boxTextMargin;\n  txt.class = \"loopText\";\n  txt.fontFamily = fontFamily;\n  txt.fontSize = fontSize;\n  txt.fontWeight = fontWeight;\n  txt.wrap = true;\n  let textElem = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(txt.text) ? await drawKatex(g, txt, loopModel) : drawText(g, txt);\n  if (loopModel.sectionTitles !== void 0) {\n    for (const [idx, item] of Object.entries(loopModel.sectionTitles)) {\n      if (item.message) {\n        txt.text = item.message;\n        txt.x = loopModel.startx + (loopModel.stopx - loopModel.startx) / 2;\n        txt.y = loopModel.sections[idx].y + boxMargin + boxTextMargin;\n        txt.class = \"loopText\";\n        txt.anchor = \"middle\";\n        txt.valign = \"middle\";\n        txt.tspan = false;\n        txt.fontFamily = fontFamily;\n        txt.fontSize = fontSize;\n        txt.fontWeight = fontWeight;\n        txt.wrap = loopModel.wrap;\n        if ((0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(txt.text)) {\n          loopModel.starty = loopModel.sections[idx].y;\n          await drawKatex(g, txt, loopModel);\n        } else {\n          drawText(g, txt);\n        }\n        let sectionHeight = Math.round(\n          textElem.map((te) => (te._groups || te)[0][0].getBBox().height).reduce((acc, curr) => acc + curr)\n        );\n        loopModel.sections[idx].height += sectionHeight - (boxMargin + boxTextMargin);\n      }\n    }\n  }\n  loopModel.height = Math.round(loopModel.stopy - loopModel.starty);\n  return g;\n};\nconst drawBackgroundRect = function(elem, bounds2) {\n  (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.a)(elem, bounds2);\n};\nconst insertDatabaseIcon = function(elem) {\n  elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"database\").attr(\"fill-rule\", \"evenodd\").attr(\"clip-rule\", \"evenodd\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\n    \"d\",\n    \"M12.258.001l.256.004.255.005.253.008.251.01.249.012.247.015.246.016.242.019.241.02.239.023.236.024.233.027.231.028.229.031.225.032.223.034.22.036.217.038.214.04.211.041.208.043.205.045.201.046.198.048.194.05.191.051.187.053.183.054.18.056.175.057.172.059.168.06.163.061.16.063.155.064.15.066.074.033.073.033.071.034.07.034.069.035.068.035.067.035.066.035.064.036.064.036.062.036.06.036.06.037.058.037.058.037.055.038.055.038.053.038.052.038.051.039.05.039.048.039.047.039.045.04.044.04.043.04.041.04.04.041.039.041.037.041.036.041.034.041.033.042.032.042.03.042.029.042.027.042.026.043.024.043.023.043.021.043.02.043.018.044.017.043.015.044.013.044.012.044.011.045.009.044.007.045.006.045.004.045.002.045.001.045v17l-.001.045-.002.045-.004.045-.006.045-.007.045-.009.044-.011.045-.012.044-.013.044-.015.044-.017.043-.018.044-.02.043-.021.043-.023.043-.024.043-.026.043-.027.042-.029.042-.03.042-.032.042-.033.042-.034.041-.036.041-.037.041-.039.041-.04.041-.041.04-.043.04-.044.04-.045.04-.047.039-.048.039-.05.039-.051.039-.052.038-.053.038-.055.038-.055.038-.058.037-.058.037-.06.037-.06.036-.062.036-.064.036-.064.036-.066.035-.067.035-.068.035-.069.035-.07.034-.071.034-.073.033-.074.033-.15.066-.155.064-.16.063-.163.061-.168.06-.172.059-.175.057-.18.056-.183.054-.187.053-.191.051-.194.05-.198.048-.201.046-.205.045-.208.043-.211.041-.214.04-.217.038-.22.036-.223.034-.225.032-.229.031-.231.028-.233.027-.236.024-.239.023-.241.02-.242.019-.246.016-.247.015-.249.012-.251.01-.253.008-.255.005-.256.004-.258.001-.258-.001-.256-.004-.255-.005-.253-.008-.251-.01-.249-.012-.247-.015-.245-.016-.243-.019-.241-.02-.238-.023-.236-.024-.234-.027-.231-.028-.228-.031-.226-.032-.223-.034-.22-.036-.217-.038-.214-.04-.211-.041-.208-.043-.204-.045-.201-.046-.198-.048-.195-.05-.19-.051-.187-.053-.184-.054-.179-.056-.176-.057-.172-.059-.167-.06-.164-.061-.159-.063-.155-.064-.151-.066-.074-.033-.072-.033-.072-.034-.07-.034-.069-.035-.068-.035-.067-.035-.066-.035-.064-.036-.063-.036-.062-.036-.061-.036-.06-.037-.058-.037-.057-.037-.056-.038-.055-.038-.053-.038-.052-.038-.051-.039-.049-.039-.049-.039-.046-.039-.046-.04-.044-.04-.043-.04-.041-.04-.04-.041-.039-.041-.037-.041-.036-.041-.034-.041-.033-.042-.032-.042-.03-.042-.029-.042-.027-.042-.026-.043-.024-.043-.023-.043-.021-.043-.02-.043-.018-.044-.017-.043-.015-.044-.013-.044-.012-.044-.011-.045-.009-.044-.007-.045-.006-.045-.004-.045-.002-.045-.001-.045v-17l.001-.045.002-.045.004-.045.006-.045.007-.045.009-.044.011-.045.012-.044.013-.044.015-.044.017-.043.018-.044.02-.043.021-.043.023-.043.024-.043.026-.043.027-.042.029-.042.03-.042.032-.042.033-.042.034-.041.036-.041.037-.041.039-.041.04-.041.041-.04.043-.04.044-.04.046-.04.046-.039.049-.039.049-.039.051-.039.052-.038.053-.038.055-.038.056-.038.057-.037.058-.037.06-.037.061-.036.062-.036.063-.036.064-.036.066-.035.067-.035.068-.035.069-.035.07-.034.072-.034.072-.033.074-.033.151-.066.155-.064.159-.063.164-.061.167-.06.172-.059.176-.057.179-.056.184-.054.187-.053.19-.051.195-.05.198-.048.201-.046.204-.045.208-.043.211-.041.214-.04.217-.038.22-.036.223-.034.226-.032.228-.031.231-.028.234-.027.236-.024.238-.023.241-.02.243-.019.245-.016.247-.015.249-.012.251-.01.253-.008.255-.005.256-.004.258-.001.258.001zm-9.258 20.499v.01l.001.021.003.021.004.022.005.021.006.022.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.023.018.024.019.024.021.024.022.025.023.024.024.025.052.049.056.05.061.051.066.051.07.051.075.051.079.052.084.052.088.052.092.052.097.052.102.051.105.052.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.048.144.049.147.047.152.047.155.047.16.045.163.045.167.043.171.043.176.041.178.041.183.039.187.039.19.037.194.035.197.035.202.033.204.031.209.03.212.029.216.027.219.025.222.024.226.021.23.02.233.018.236.016.24.015.243.012.246.01.249.008.253.005.256.004.259.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.021.224-.024.22-.026.216-.027.212-.028.21-.031.205-.031.202-.034.198-.034.194-.036.191-.037.187-.039.183-.04.179-.04.175-.042.172-.043.168-.044.163-.045.16-.046.155-.046.152-.047.148-.048.143-.049.139-.049.136-.05.131-.05.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.053.083-.051.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.05.023-.024.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.023.01-.022.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.127l-.077.055-.08.053-.083.054-.085.053-.087.052-.09.052-.093.051-.095.05-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.045-.118.044-.12.043-.122.042-.124.042-.126.041-.128.04-.13.04-.132.038-.134.038-.135.037-.138.037-.139.035-.142.035-.143.034-.144.033-.147.032-.148.031-.15.03-.151.03-.153.029-.154.027-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.01-.179.008-.179.008-.181.006-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.006-.179-.008-.179-.008-.178-.01-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.027-.153-.029-.151-.03-.15-.03-.148-.031-.146-.032-.145-.033-.143-.034-.141-.035-.14-.035-.137-.037-.136-.037-.134-.038-.132-.038-.13-.04-.128-.04-.126-.041-.124-.042-.122-.042-.12-.044-.117-.043-.116-.045-.113-.045-.112-.046-.109-.047-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.05-.093-.052-.09-.051-.087-.052-.085-.053-.083-.054-.08-.054-.077-.054v4.127zm0-5.654v.011l.001.021.003.021.004.021.005.022.006.022.007.022.009.022.01.022.011.023.012.023.013.023.015.024.016.023.017.024.018.024.019.024.021.024.022.024.023.025.024.024.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.052.11.051.114.051.119.052.123.05.127.051.131.05.135.049.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.044.171.042.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.022.23.02.233.018.236.016.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.012.241-.015.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.048.139-.05.136-.049.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.051.051-.049.023-.025.023-.024.021-.025.02-.024.019-.024.018-.024.017-.024.015-.023.014-.023.013-.024.012-.022.01-.023.01-.023.008-.022.006-.022.006-.022.004-.021.004-.022.001-.021.001-.021v-4.139l-.077.054-.08.054-.083.054-.085.052-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.049-.105.048-.106.047-.109.047-.111.046-.114.045-.115.044-.118.044-.12.044-.122.042-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.035-.143.033-.144.033-.147.033-.148.031-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.025-.161.024-.162.023-.163.022-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.011-.178.009-.179.009-.179.007-.181.007-.182.005-.182.004-.184.003-.184.002h-.37l-.184-.002-.184-.003-.182-.004-.182-.005-.181-.007-.179-.007-.179-.009-.178-.009-.176-.011-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.022-.162-.023-.161-.024-.159-.025-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.031-.146-.033-.145-.033-.143-.033-.141-.035-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.04-.126-.041-.124-.042-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.047-.105-.048-.102-.049-.1-.049-.097-.05-.095-.051-.093-.051-.09-.051-.087-.053-.085-.052-.083-.054-.08-.054-.077-.054v4.139zm0-5.666v.011l.001.02.003.022.004.021.005.022.006.021.007.022.009.023.01.022.011.023.012.023.013.023.015.023.016.024.017.024.018.023.019.024.021.025.022.024.023.024.024.025.052.05.056.05.061.05.066.051.07.051.075.052.079.051.084.052.088.052.092.052.097.052.102.052.105.051.11.052.114.051.119.051.123.051.127.05.131.05.135.05.139.049.144.048.147.048.152.047.155.046.16.045.163.045.167.043.171.043.176.042.178.04.183.04.187.038.19.037.194.036.197.034.202.033.204.032.209.03.212.028.216.027.219.025.222.024.226.021.23.02.233.018.236.017.24.014.243.012.246.01.249.008.253.006.256.003.259.001.26-.001.257-.003.254-.006.25-.008.247-.01.244-.013.241-.014.237-.016.233-.018.231-.02.226-.022.224-.024.22-.025.216-.027.212-.029.21-.03.205-.032.202-.033.198-.035.194-.036.191-.037.187-.039.183-.039.179-.041.175-.042.172-.043.168-.044.163-.045.16-.045.155-.047.152-.047.148-.048.143-.049.139-.049.136-.049.131-.051.126-.05.123-.051.118-.052.114-.051.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.052.07-.051.065-.051.06-.051.056-.05.051-.049.023-.025.023-.025.021-.024.02-.024.019-.024.018-.024.017-.024.015-.023.014-.024.013-.023.012-.023.01-.022.01-.023.008-.022.006-.022.006-.022.004-.022.004-.021.001-.021.001-.021v-4.153l-.077.054-.08.054-.083.053-.085.053-.087.053-.09.051-.093.051-.095.051-.097.05-.1.049-.102.048-.105.048-.106.048-.109.046-.111.046-.114.046-.115.044-.118.044-.12.043-.122.043-.124.042-.126.041-.128.04-.13.039-.132.039-.134.038-.135.037-.138.036-.139.036-.142.034-.143.034-.144.033-.147.032-.148.032-.15.03-.151.03-.153.028-.154.028-.156.027-.158.026-.159.024-.161.024-.162.023-.163.023-.165.021-.166.02-.167.019-.169.018-.169.017-.171.016-.173.015-.173.014-.175.013-.175.012-.177.01-.178.01-.179.009-.179.007-.181.006-.182.006-.182.004-.184.003-.184.001-.185.001-.185-.001-.184-.001-.184-.003-.182-.004-.182-.006-.181-.006-.179-.007-.179-.009-.178-.01-.176-.01-.176-.012-.175-.013-.173-.014-.172-.015-.171-.016-.17-.017-.169-.018-.167-.019-.166-.02-.165-.021-.163-.023-.162-.023-.161-.024-.159-.024-.157-.026-.156-.027-.155-.028-.153-.028-.151-.03-.15-.03-.148-.032-.146-.032-.145-.033-.143-.034-.141-.034-.14-.036-.137-.036-.136-.037-.134-.038-.132-.039-.13-.039-.128-.041-.126-.041-.124-.041-.122-.043-.12-.043-.117-.044-.116-.044-.113-.046-.112-.046-.109-.046-.106-.048-.105-.048-.102-.048-.1-.05-.097-.049-.095-.051-.093-.051-.09-.052-.087-.052-.085-.053-.083-.053-.08-.054-.077-.054v4.153zm8.74-8.179l-.257.004-.254.005-.25.008-.247.011-.244.012-.241.014-.237.016-.233.018-.231.021-.226.022-.224.023-.22.026-.216.027-.212.028-.21.031-.205.032-.202.033-.198.034-.194.036-.191.038-.187.038-.183.04-.179.041-.175.042-.172.043-.168.043-.163.045-.16.046-.155.046-.152.048-.148.048-.143.048-.139.049-.136.05-.131.05-.126.051-.123.051-.118.051-.114.052-.11.052-.106.052-.101.052-.096.052-.092.052-.088.052-.083.052-.079.052-.074.051-.07.052-.065.051-.06.05-.056.05-.051.05-.023.025-.023.024-.021.024-.02.025-.019.024-.018.024-.017.023-.015.024-.014.023-.013.023-.012.023-.01.023-.01.022-.008.022-.006.023-.006.021-.004.022-.004.021-.001.021-.001.021.001.021.001.021.004.021.004.022.006.021.006.023.008.022.01.022.01.023.012.023.013.023.014.023.015.024.017.023.018.024.019.024.02.025.021.024.023.024.023.025.051.05.056.05.06.05.065.051.07.052.074.051.079.052.083.052.088.052.092.052.096.052.101.052.106.052.11.052.114.052.118.051.123.051.126.051.131.05.136.05.139.049.143.048.148.048.152.048.155.046.16.046.163.045.168.043.172.043.175.042.179.041.183.04.187.038.191.038.194.036.198.034.202.033.205.032.21.031.212.028.216.027.22.026.224.023.226.022.231.021.233.018.237.016.241.014.244.012.247.011.25.008.254.005.257.004.26.001.26-.001.257-.004.254-.005.25-.008.247-.011.244-.012.241-.014.237-.016.233-.018.231-.021.226-.022.224-.023.22-.026.216-.027.212-.028.21-.031.205-.032.202-.033.198-.034.194-.036.191-.038.187-.038.183-.04.179-.041.175-.042.172-.043.168-.043.163-.045.16-.046.155-.046.152-.048.148-.048.143-.048.139-.049.136-.05.131-.05.126-.051.123-.051.118-.051.114-.052.11-.052.106-.052.101-.052.096-.052.092-.052.088-.052.083-.052.079-.052.074-.051.07-.052.065-.051.06-.05.056-.05.051-.05.023-.025.023-.024.021-.024.02-.025.019-.024.018-.024.017-.023.015-.024.014-.023.013-.023.012-.023.01-.023.01-.022.008-.022.006-.023.006-.021.004-.022.004-.021.001-.021.001-.021-.001-.021-.001-.021-.004-.021-.004-.022-.006-.021-.006-.023-.008-.022-.01-.022-.01-.023-.012-.023-.013-.023-.014-.023-.015-.024-.017-.023-.018-.024-.019-.024-.02-.025-.021-.024-.023-.024-.023-.025-.051-.05-.056-.05-.06-.05-.065-.051-.07-.052-.074-.051-.079-.052-.083-.052-.088-.052-.092-.052-.096-.052-.101-.052-.106-.052-.11-.052-.114-.052-.118-.051-.123-.051-.126-.051-.131-.05-.136-.05-.139-.049-.143-.048-.148-.048-.152-.048-.155-.046-.16-.046-.163-.045-.168-.043-.172-.043-.175-.042-.179-.041-.183-.04-.187-.038-.191-.038-.194-.036-.198-.034-.202-.033-.205-.032-.21-.031-.212-.028-.216-.027-.22-.026-.224-.023-.226-.022-.231-.021-.233-.018-.237-.016-.241-.014-.244-.012-.247-.011-.25-.008-.254-.005-.257-.004-.26-.001-.26.001z\"\n  );\n};\nconst insertComputerIcon = function(elem) {\n  elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"computer\").attr(\"width\", \"24\").attr(\"height\", \"24\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\n    \"d\",\n    \"M2 2v13h20v-13h-20zm18 11h-16v-9h16v9zm-10.228 6l.466-1h3.524l.467 1h-4.457zm14.228 3h-24l2-6h2.104l-1.33 4h18.45l-1.297-4h2.073l2 6zm-5-10h-14v-7h14v7z\"\n  );\n};\nconst insertClockIcon = function(elem) {\n  elem.append(\"defs\").append(\"symbol\").attr(\"id\", \"clock\").attr(\"width\", \"24\").attr(\"height\", \"24\").append(\"path\").attr(\"transform\", \"scale(.5)\").attr(\n    \"d\",\n    \"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.848 12.459c.202.038.202.333.001.372-1.907.361-6.045 1.111-6.547 1.111-.719 0-1.301-.582-1.301-1.301 0-.512.77-5.447 1.125-7.445.034-.192.312-.181.343.014l.985 6.238 5.394 1.011z\"\n  );\n};\nconst insertArrowHead = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 7.9).attr(\"refY\", 5).attr(\"markerUnits\", \"userSpaceOnUse\").attr(\"markerWidth\", 12).attr(\"markerHeight\", 12).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\");\n};\nconst insertArrowFilledHead = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"filled-head\").attr(\"refX\", 15.5).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst insertSequenceNumber = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"sequencenumber\").attr(\"refX\", 15).attr(\"refY\", 15).attr(\"markerWidth\", 60).attr(\"markerHeight\", 40).attr(\"orient\", \"auto\").append(\"circle\").attr(\"cx\", 15).attr(\"cy\", 15).attr(\"r\", 6);\n};\nconst insertArrowCrossHead = function(elem) {\n  const defs = elem.append(\"defs\");\n  const marker = defs.append(\"marker\").attr(\"id\", \"crosshead\").attr(\"markerWidth\", 15).attr(\"markerHeight\", 8).attr(\"orient\", \"auto\").attr(\"refX\", 4).attr(\"refY\", 4.5);\n  marker.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"#000000\").style(\"stroke-dasharray\", \"0, 0\").attr(\"stroke-width\", \"1pt\").attr(\"d\", \"M 1,2 L 6,7 M 6,2 L 1,7\");\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    anchor: void 0,\n    style: \"#666\",\n    width: void 0,\n    height: void 0,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: void 0\n  };\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    width: 100,\n    anchor: \"start\",\n    height: 100,\n    rx: 0,\n    ry: 0\n  };\n};\nconst _drawTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"text-anchor\", \"middle\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf2) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf2;\n    const [_actorFontSize, _actorFontSizePx] = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.D)(actorFontSize);\n    const lines = content.split(_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * _actorFontSize - _actorFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).style(\"text-anchor\", \"middle\").style(\"font-size\", _actorFontSizePx).style(\"font-weight\", actorFontWeight).style(\"font-family\", actorFontFamily);\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf2) {\n    const s = g.append(\"switch\");\n    const f = s.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height);\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, s, x, y, width, height, textAttrs, conf2);\n    _setTextAttrs(text, textAttrs);\n  }\n  async function byKatex(content, g, x, y, width, height, textAttrs, conf2) {\n    const dim = await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.H)(content, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.F)());\n    const s = g.append(\"switch\");\n    const f = s.append(\"foreignObject\").attr(\"x\", x + width / 2 - dim.width / 2).attr(\"y\", y + height / 2 - dim.height / 2).attr(\"width\", dim.width).attr(\"height\", dim.height);\n    const text = f.append(\"xhtml:div\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").html(await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.r)(content, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.F)()));\n    byTspan(content, s, x, y, width, height, textAttrs, conf2);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf2, hasKatex2 = false) {\n    if (hasKatex2) {\n      return byKatex;\n    }\n    return conf2.textPlacement === \"fo\" ? byFo : conf2.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst _drawMenuItemTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs) {\n    const text = g.append(\"text\").attr(\"x\", x).attr(\"y\", y).style(\"text-anchor\", \"start\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf2) {\n    const { actorFontSize, actorFontFamily, actorFontWeight } = conf2;\n    const lines = content.split(_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.lineBreakRegex);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * actorFontSize - actorFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x).attr(\"y\", y).style(\"text-anchor\", \"start\").style(\"font-size\", actorFontSize).style(\"font-weight\", actorFontWeight).style(\"font-family\", actorFontFamily);\n      text.append(\"tspan\").attr(\"x\", x).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf2) {\n    const s = g.append(\"switch\");\n    const f = s.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height);\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, s, x, y, width, height, textAttrs, conf2);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (fromTextAttrsDict.hasOwnProperty(key)) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf2) {\n    return conf2.textPlacement === \"fo\" ? byFo : conf2.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst svgDraw = {\n  drawRect,\n  drawText,\n  drawLabel,\n  drawActor,\n  drawBox,\n  drawPopup,\n  anchorElement,\n  drawActivation,\n  drawLoop,\n  drawBackgroundRect,\n  insertArrowHead,\n  insertArrowFilledHead,\n  insertSequenceNumber,\n  insertArrowCrossHead,\n  insertDatabaseIcon,\n  insertComputerIcon,\n  insertClockIcon,\n  getTextObj,\n  getNoteRect,\n  fixLifeLineHeights,\n  sanitizeUrl: _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_1__.sanitizeUrl\n};\nlet conf = {};\nconst bounds = {\n  data: {\n    startx: void 0,\n    stopx: void 0,\n    starty: void 0,\n    stopy: void 0\n  },\n  verticalPos: 0,\n  sequenceItems: [],\n  activations: [],\n  models: {\n    getHeight: function() {\n      return Math.max.apply(\n        null,\n        this.actors.length === 0 ? [0] : this.actors.map((actor) => actor.height || 0)\n      ) + (this.loops.length === 0 ? 0 : this.loops.map((it) => it.height || 0).reduce((acc, h) => acc + h)) + (this.messages.length === 0 ? 0 : this.messages.map((it) => it.height || 0).reduce((acc, h) => acc + h)) + (this.notes.length === 0 ? 0 : this.notes.map((it) => it.height || 0).reduce((acc, h) => acc + h));\n    },\n    clear: function() {\n      this.actors = [];\n      this.boxes = [];\n      this.loops = [];\n      this.messages = [];\n      this.notes = [];\n    },\n    addBox: function(boxModel) {\n      this.boxes.push(boxModel);\n    },\n    addActor: function(actorModel) {\n      this.actors.push(actorModel);\n    },\n    addLoop: function(loopModel) {\n      this.loops.push(loopModel);\n    },\n    addMessage: function(msgModel) {\n      this.messages.push(msgModel);\n    },\n    addNote: function(noteModel) {\n      this.notes.push(noteModel);\n    },\n    lastActor: function() {\n      return this.actors[this.actors.length - 1];\n    },\n    lastLoop: function() {\n      return this.loops[this.loops.length - 1];\n    },\n    lastMessage: function() {\n      return this.messages[this.messages.length - 1];\n    },\n    lastNote: function() {\n      return this.notes[this.notes.length - 1];\n    },\n    actors: [],\n    boxes: [],\n    loops: [],\n    messages: [],\n    notes: []\n  },\n  init: function() {\n    this.sequenceItems = [];\n    this.activations = [];\n    this.models.clear();\n    this.data = {\n      startx: void 0,\n      stopx: void 0,\n      starty: void 0,\n      stopy: void 0\n    };\n    this.verticalPos = 0;\n    setConf((0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)());\n  },\n  updateVal: function(obj, key, val, fun) {\n    if (obj[key] === void 0) {\n      obj[key] = val;\n    } else {\n      obj[key] = fun(val, obj[key]);\n    }\n  },\n  updateBounds: function(startx, starty, stopx, stopy) {\n    const _self = this;\n    let cnt = 0;\n    function updateFn(type) {\n      return function updateItemBounds(item) {\n        cnt++;\n        const n = _self.sequenceItems.length - cnt + 1;\n        _self.updateVal(item, \"starty\", starty - n * conf.boxMargin, Math.min);\n        _self.updateVal(item, \"stopy\", stopy + n * conf.boxMargin, Math.max);\n        _self.updateVal(bounds.data, \"startx\", startx - n * conf.boxMargin, Math.min);\n        _self.updateVal(bounds.data, \"stopx\", stopx + n * conf.boxMargin, Math.max);\n        if (!(type === \"activation\")) {\n          _self.updateVal(item, \"startx\", startx - n * conf.boxMargin, Math.min);\n          _self.updateVal(item, \"stopx\", stopx + n * conf.boxMargin, Math.max);\n          _self.updateVal(bounds.data, \"starty\", starty - n * conf.boxMargin, Math.min);\n          _self.updateVal(bounds.data, \"stopy\", stopy + n * conf.boxMargin, Math.max);\n        }\n      };\n    }\n    this.sequenceItems.forEach(updateFn());\n    this.activations.forEach(updateFn(\"activation\"));\n  },\n  insert: function(startx, starty, stopx, stopy) {\n    const _startx = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(startx, stopx);\n    const _stopx = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(startx, stopx);\n    const _starty = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(starty, stopy);\n    const _stopy = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(starty, stopy);\n    this.updateVal(bounds.data, \"startx\", _startx, Math.min);\n    this.updateVal(bounds.data, \"starty\", _starty, Math.min);\n    this.updateVal(bounds.data, \"stopx\", _stopx, Math.max);\n    this.updateVal(bounds.data, \"stopy\", _stopy, Math.max);\n    this.updateBounds(_startx, _starty, _stopx, _stopy);\n  },\n  newActivation: function(message, diagram2, actors) {\n    const actorRect = actors[message.from.actor];\n    const stackedSize = actorActivations(message.from.actor).length || 0;\n    const x = actorRect.x + actorRect.width / 2 + (stackedSize - 1) * conf.activationWidth / 2;\n    this.activations.push({\n      startx: x,\n      starty: this.verticalPos + 2,\n      stopx: x + conf.activationWidth,\n      stopy: void 0,\n      actor: message.from.actor,\n      anchored: svgDraw.anchorElement(diagram2)\n    });\n  },\n  endActivation: function(message) {\n    const lastActorActivationIdx = this.activations.map(function(activation) {\n      return activation.actor;\n    }).lastIndexOf(message.from.actor);\n    return this.activations.splice(lastActorActivationIdx, 1)[0];\n  },\n  createLoop: function(title = { message: void 0, wrap: false, width: void 0 }, fill) {\n    return {\n      startx: void 0,\n      starty: this.verticalPos,\n      stopx: void 0,\n      stopy: void 0,\n      title: title.message,\n      wrap: title.wrap,\n      width: title.width,\n      height: 0,\n      fill\n    };\n  },\n  newLoop: function(title = { message: void 0, wrap: false, width: void 0 }, fill) {\n    this.sequenceItems.push(this.createLoop(title, fill));\n  },\n  endLoop: function() {\n    return this.sequenceItems.pop();\n  },\n  isLoopOverlap: function() {\n    return this.sequenceItems.length ? this.sequenceItems[this.sequenceItems.length - 1].overlap : false;\n  },\n  addSectionToLoop: function(message) {\n    const loop = this.sequenceItems.pop();\n    loop.sections = loop.sections || [];\n    loop.sectionTitles = loop.sectionTitles || [];\n    loop.sections.push({ y: bounds.getVerticalPos(), height: 0 });\n    loop.sectionTitles.push(message);\n    this.sequenceItems.push(loop);\n  },\n  saveVerticalPos: function() {\n    if (this.isLoopOverlap()) {\n      this.savedVerticalPos = this.verticalPos;\n    }\n  },\n  resetVerticalPos: function() {\n    if (this.isLoopOverlap()) {\n      this.verticalPos = this.savedVerticalPos;\n    }\n  },\n  bumpVerticalPos: function(bump) {\n    this.verticalPos = this.verticalPos + bump;\n    this.data.stopy = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(this.data.stopy, this.verticalPos);\n  },\n  getVerticalPos: function() {\n    return this.verticalPos;\n  },\n  getBounds: function() {\n    return { bounds: this.data, models: this.models };\n  }\n};\nconst drawNote = async function(elem, noteModel) {\n  bounds.bumpVerticalPos(conf.boxMargin);\n  noteModel.height = conf.boxMargin;\n  noteModel.starty = bounds.getVerticalPos();\n  const rect = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.g)();\n  rect.x = noteModel.startx;\n  rect.y = noteModel.starty;\n  rect.width = noteModel.width || conf.width;\n  rect.class = \"note\";\n  const g = elem.append(\"g\");\n  const rectElem = svgDraw.drawRect(g, rect);\n  const textObj = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n  textObj.x = noteModel.startx;\n  textObj.y = noteModel.starty;\n  textObj.width = rect.width;\n  textObj.dy = \"1em\";\n  textObj.text = noteModel.message;\n  textObj.class = \"noteText\";\n  textObj.fontFamily = conf.noteFontFamily;\n  textObj.fontSize = conf.noteFontSize;\n  textObj.fontWeight = conf.noteFontWeight;\n  textObj.anchor = conf.noteAlign;\n  textObj.textMargin = conf.noteMargin;\n  textObj.valign = \"center\";\n  const textElem = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(textObj.text) ? await drawKatex(g, textObj) : drawText(g, textObj);\n  const textHeight = Math.round(\n    textElem.map((te) => (te._groups || te)[0][0].getBBox().height).reduce((acc, curr) => acc + curr)\n  );\n  rectElem.attr(\"height\", textHeight + 2 * conf.noteMargin);\n  noteModel.height += textHeight + 2 * conf.noteMargin;\n  bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n  noteModel.stopy = noteModel.starty + textHeight + 2 * conf.noteMargin;\n  noteModel.stopx = noteModel.startx + rect.width;\n  bounds.insert(noteModel.startx, noteModel.starty, noteModel.stopx, noteModel.stopy);\n  bounds.models.addNote(noteModel);\n};\nconst messageFont = (cnf) => {\n  return {\n    fontFamily: cnf.messageFontFamily,\n    fontSize: cnf.messageFontSize,\n    fontWeight: cnf.messageFontWeight\n  };\n};\nconst noteFont = (cnf) => {\n  return {\n    fontFamily: cnf.noteFontFamily,\n    fontSize: cnf.noteFontSize,\n    fontWeight: cnf.noteFontWeight\n  };\n};\nconst actorFont = (cnf) => {\n  return {\n    fontFamily: cnf.actorFontFamily,\n    fontSize: cnf.actorFontSize,\n    fontWeight: cnf.actorFontWeight\n  };\n};\nasync function boundMessage(_diagram, msgModel) {\n  bounds.bumpVerticalPos(10);\n  const { startx, stopx, message } = msgModel;\n  const lines = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.splitBreaks(message).length;\n  const isKatexMsg = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(message);\n  const textDims = isKatexMsg ? await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.H)(message, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(message, messageFont(conf));\n  if (!isKatexMsg) {\n    const lineHeight = textDims.height / lines;\n    msgModel.height += lineHeight;\n    bounds.bumpVerticalPos(lineHeight);\n  }\n  let lineStartY;\n  let totalOffset = textDims.height - 10;\n  const textWidth = textDims.width;\n  if (startx === stopx) {\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    if (!conf.rightAngles) {\n      totalOffset += conf.boxMargin;\n      lineStartY = bounds.getVerticalPos() + totalOffset;\n    }\n    totalOffset += 30;\n    const dx = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(textWidth / 2, conf.width / 2);\n    bounds.insert(\n      startx - dx,\n      bounds.getVerticalPos() - 10 + totalOffset,\n      stopx + dx,\n      bounds.getVerticalPos() + 30 + totalOffset\n    );\n  } else {\n    totalOffset += conf.boxMargin;\n    lineStartY = bounds.getVerticalPos() + totalOffset;\n    bounds.insert(startx, lineStartY - 10, stopx, lineStartY);\n  }\n  bounds.bumpVerticalPos(totalOffset);\n  msgModel.height += totalOffset;\n  msgModel.stopy = msgModel.starty + msgModel.height;\n  bounds.insert(msgModel.fromBounds, msgModel.starty, msgModel.toBounds, msgModel.stopy);\n  return lineStartY;\n}\nconst drawMessage = async function(diagram2, msgModel, lineStartY, diagObj) {\n  const { startx, stopx, starty, message, type, sequenceIndex, sequenceVisible } = msgModel;\n  const textDims = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(message, messageFont(conf));\n  const textObj = (0,_svgDrawCommon_3ba9043b_js__WEBPACK_IMPORTED_MODULE_6__.e)();\n  textObj.x = startx;\n  textObj.y = starty + 10;\n  textObj.width = stopx - startx;\n  textObj.class = \"messageText\";\n  textObj.dy = \"1em\";\n  textObj.text = message;\n  textObj.fontFamily = conf.messageFontFamily;\n  textObj.fontSize = conf.messageFontSize;\n  textObj.fontWeight = conf.messageFontWeight;\n  textObj.anchor = conf.messageAlign;\n  textObj.valign = \"center\";\n  textObj.textMargin = conf.wrapPadding;\n  textObj.tspan = false;\n  (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(textObj.text) ? await drawKatex(diagram2, textObj, { startx, stopx, starty: lineStartY }) : drawText(diagram2, textObj);\n  const textWidth = textDims.width;\n  let line;\n  if (startx === stopx) {\n    if (conf.rightAngles) {\n      line = diagram2.append(\"path\").attr(\n        \"d\",\n        `M  ${startx},${lineStartY} H ${startx + _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width / 2, textWidth / 2)} V ${lineStartY + 25} H ${startx}`\n      );\n    } else {\n      line = diagram2.append(\"path\").attr(\n        \"d\",\n        \"M \" + startx + \",\" + lineStartY + \" C \" + (startx + 60) + \",\" + (lineStartY - 10) + \" \" + (startx + 60) + \",\" + (lineStartY + 30) + \" \" + startx + \",\" + (lineStartY + 20)\n      );\n    }\n  } else {\n    line = diagram2.append(\"line\");\n    line.attr(\"x1\", startx);\n    line.attr(\"y1\", lineStartY);\n    line.attr(\"x2\", stopx);\n    line.attr(\"y2\", lineStartY);\n  }\n  if (type === diagObj.db.LINETYPE.DOTTED || type === diagObj.db.LINETYPE.DOTTED_CROSS || type === diagObj.db.LINETYPE.DOTTED_POINT || type === diagObj.db.LINETYPE.DOTTED_OPEN) {\n    line.style(\"stroke-dasharray\", \"3, 3\");\n    line.attr(\"class\", \"messageLine1\");\n  } else {\n    line.attr(\"class\", \"messageLine0\");\n  }\n  let url = \"\";\n  if (conf.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  line.attr(\"stroke-width\", 2);\n  line.attr(\"stroke\", \"none\");\n  line.style(\"fill\", \"none\");\n  if (type === diagObj.db.LINETYPE.SOLID || type === diagObj.db.LINETYPE.DOTTED) {\n    line.attr(\"marker-end\", \"url(\" + url + \"#arrowhead)\");\n  }\n  if (type === diagObj.db.LINETYPE.SOLID_POINT || type === diagObj.db.LINETYPE.DOTTED_POINT) {\n    line.attr(\"marker-end\", \"url(\" + url + \"#filled-head)\");\n  }\n  if (type === diagObj.db.LINETYPE.SOLID_CROSS || type === diagObj.db.LINETYPE.DOTTED_CROSS) {\n    line.attr(\"marker-end\", \"url(\" + url + \"#crosshead)\");\n  }\n  if (sequenceVisible || conf.showSequenceNumbers) {\n    line.attr(\"marker-start\", \"url(\" + url + \"#sequencenumber)\");\n    diagram2.append(\"text\").attr(\"x\", startx).attr(\"y\", lineStartY + 4).attr(\"font-family\", \"sans-serif\").attr(\"font-size\", \"12px\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"sequenceNumber\").text(sequenceIndex);\n  }\n};\nconst addActorRenderingData = async function(diagram2, actors, createdActors, actorKeys, verticalPos, messages, isFooter) {\n  let prevWidth = 0;\n  let prevMargin = 0;\n  let prevBox = void 0;\n  let maxHeight = 0;\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const box = actor.box;\n    if (prevBox && prevBox != box) {\n      if (!isFooter) {\n        bounds.models.addBox(prevBox);\n      }\n      prevMargin += conf.boxMargin + prevBox.margin;\n    }\n    if (box && box != prevBox) {\n      if (!isFooter) {\n        box.x = prevWidth + prevMargin;\n        box.y = verticalPos;\n      }\n      prevMargin += box.margin;\n    }\n    actor.width = actor.width || conf.width;\n    actor.height = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actor.height || conf.height, conf.height);\n    actor.margin = actor.margin || conf.actorMargin;\n    maxHeight = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, actor.height);\n    if (createdActors[actor.name]) {\n      prevMargin += actor.width / 2;\n    }\n    actor.x = prevWidth + prevMargin;\n    actor.starty = bounds.getVerticalPos();\n    bounds.insert(actor.x, verticalPos, actor.x + actor.width, actor.height);\n    prevWidth += actor.width + prevMargin;\n    if (actor.box) {\n      actor.box.width = prevWidth + box.margin - actor.box.x;\n    }\n    prevMargin = actor.margin;\n    prevBox = actor.box;\n    bounds.models.addActor(actor);\n  }\n  if (prevBox && !isFooter) {\n    bounds.models.addBox(prevBox);\n  }\n  bounds.bumpVerticalPos(maxHeight);\n};\nconst drawActors = async function(diagram2, actors, actorKeys, isFooter) {\n  if (!isFooter) {\n    for (const actorKey of actorKeys) {\n      const actor = actors[actorKey];\n      await svgDraw.drawActor(diagram2, actor, conf, false);\n    }\n  } else {\n    let maxHeight = 0;\n    bounds.bumpVerticalPos(conf.boxMargin * 2);\n    for (const actorKey of actorKeys) {\n      const actor = actors[actorKey];\n      if (!actor.stopy) {\n        actor.stopy = bounds.getVerticalPos();\n      }\n      const height = await svgDraw.drawActor(diagram2, actor, conf, true);\n      maxHeight = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, height);\n    }\n    bounds.bumpVerticalPos(maxHeight + conf.boxMargin);\n  }\n};\nconst drawActorsPopup = function(diagram2, actors, actorKeys, doc) {\n  let maxHeight = 0;\n  let maxWidth = 0;\n  for (const actorKey of actorKeys) {\n    const actor = actors[actorKey];\n    const minMenuWidth = getRequiredPopupWidth(actor);\n    const menuDimensions = svgDraw.drawPopup(\n      diagram2,\n      actor,\n      minMenuWidth,\n      conf,\n      conf.forceMenus,\n      doc\n    );\n    if (menuDimensions.height > maxHeight) {\n      maxHeight = menuDimensions.height;\n    }\n    if (menuDimensions.width + actor.x > maxWidth) {\n      maxWidth = menuDimensions.width + actor.x;\n    }\n  }\n  return { maxHeight, maxWidth };\n};\nconst setConf = function(cnf) {\n  (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.f)(conf, cnf);\n  if (cnf.fontFamily) {\n    conf.actorFontFamily = conf.noteFontFamily = conf.messageFontFamily = cnf.fontFamily;\n  }\n  if (cnf.fontSize) {\n    conf.actorFontSize = conf.noteFontSize = conf.messageFontSize = cnf.fontSize;\n  }\n  if (cnf.fontWeight) {\n    conf.actorFontWeight = conf.noteFontWeight = conf.messageFontWeight = cnf.fontWeight;\n  }\n};\nconst actorActivations = function(actor) {\n  return bounds.activations.filter(function(activation) {\n    return activation.actor === actor;\n  });\n};\nconst activationBounds = function(actor, actors) {\n  const actorObj = actors[actor];\n  const activations = actorActivations(actor);\n  const left = activations.reduce(function(acc, activation) {\n    return _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(acc, activation.startx);\n  }, actorObj.x + actorObj.width / 2 - 1);\n  const right = activations.reduce(function(acc, activation) {\n    return _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(acc, activation.stopx);\n  }, actorObj.x + actorObj.width / 2 + 1);\n  return [left, right];\n};\nfunction adjustLoopHeightForWrap(loopWidths, msg, preMargin, postMargin, addLoopFn) {\n  bounds.bumpVerticalPos(preMargin);\n  let heightAdjust = postMargin;\n  if (msg.id && msg.message && loopWidths[msg.id]) {\n    const loopWidth = loopWidths[msg.id].width;\n    const textConf = messageFont(conf);\n    msg.message = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(`[${msg.message}]`, loopWidth - 2 * conf.wrapPadding, textConf);\n    msg.width = loopWidth;\n    msg.wrap = true;\n    const textDims = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(msg.message, textConf);\n    const totalOffset = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(textDims.height, conf.labelBoxHeight);\n    heightAdjust = postMargin + totalOffset;\n    _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(`${totalOffset} - ${msg.message}`);\n  }\n  addLoopFn(msg);\n  bounds.bumpVerticalPos(heightAdjust);\n}\nfunction adjustCreatedDestroyedData(msg, msgModel, lineStartY, index, actors, createdActors, destroyedActors) {\n  function receiverAdjustment(actor, adjustment) {\n    if (actor.x < actors[msg.from].x) {\n      bounds.insert(\n        msgModel.stopx - adjustment,\n        msgModel.starty,\n        msgModel.startx,\n        msgModel.stopy + actor.height / 2 + conf.noteMargin\n      );\n      msgModel.stopx = msgModel.stopx + adjustment;\n    } else {\n      bounds.insert(\n        msgModel.startx,\n        msgModel.starty,\n        msgModel.stopx + adjustment,\n        msgModel.stopy + actor.height / 2 + conf.noteMargin\n      );\n      msgModel.stopx = msgModel.stopx - adjustment;\n    }\n  }\n  function senderAdjustment(actor, adjustment) {\n    if (actor.x < actors[msg.to].x) {\n      bounds.insert(\n        msgModel.startx - adjustment,\n        msgModel.starty,\n        msgModel.stopx,\n        msgModel.stopy + actor.height / 2 + conf.noteMargin\n      );\n      msgModel.startx = msgModel.startx + adjustment;\n    } else {\n      bounds.insert(\n        msgModel.stopx,\n        msgModel.starty,\n        msgModel.startx + adjustment,\n        msgModel.stopy + actor.height / 2 + conf.noteMargin\n      );\n      msgModel.startx = msgModel.startx - adjustment;\n    }\n  }\n  if (createdActors[msg.to] == index) {\n    const actor = actors[msg.to];\n    const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 + 3 : actor.width / 2 + 3;\n    receiverAdjustment(actor, adjustment);\n    actor.starty = lineStartY - actor.height / 2;\n    bounds.bumpVerticalPos(actor.height / 2);\n  } else if (destroyedActors[msg.from] == index) {\n    const actor = actors[msg.from];\n    if (conf.mirrorActors) {\n      const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 : actor.width / 2;\n      senderAdjustment(actor, adjustment);\n    }\n    actor.stopy = lineStartY - actor.height / 2;\n    bounds.bumpVerticalPos(actor.height / 2);\n  } else if (destroyedActors[msg.to] == index) {\n    const actor = actors[msg.to];\n    if (conf.mirrorActors) {\n      const adjustment = actor.type == \"actor\" ? ACTOR_TYPE_WIDTH / 2 + 3 : actor.width / 2 + 3;\n      receiverAdjustment(actor, adjustment);\n    }\n    actor.stopy = lineStartY - actor.height / 2;\n    bounds.bumpVerticalPos(actor.height / 2);\n  }\n}\nconst draw = async function(_text, id, _version, diagObj) {\n  const { securityLevel, sequence } = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)();\n  conf = sequence;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(sandboxElement.nodes()[0].contentDocument.body) : (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  bounds.init();\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(diagObj.db);\n  const diagram2 = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : (0,d3__WEBPACK_IMPORTED_MODULE_0__.select)(`[id=\"${id}\"]`);\n  const actors = diagObj.db.getActors();\n  const createdActors = diagObj.db.getCreatedActors();\n  const destroyedActors = diagObj.db.getDestroyedActors();\n  const boxes = diagObj.db.getBoxes();\n  let actorKeys = diagObj.db.getActorKeys();\n  const messages = diagObj.db.getMessages();\n  const title = diagObj.db.getDiagramTitle();\n  const hasBoxes = diagObj.db.hasAtLeastOneBox();\n  const hasBoxTitles = diagObj.db.hasAtLeastOneBoxWithTitle();\n  const maxMessageWidthPerActor = await getMaxMessageWidthPerActor(actors, messages, diagObj);\n  conf.height = await calculateActorMargins(actors, maxMessageWidthPerActor, boxes);\n  svgDraw.insertComputerIcon(diagram2);\n  svgDraw.insertDatabaseIcon(diagram2);\n  svgDraw.insertClockIcon(diagram2);\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n    if (hasBoxTitles) {\n      bounds.bumpVerticalPos(boxes[0].textMaxHeight);\n    }\n  }\n  if (conf.hideUnusedParticipants === true) {\n    const newActors = /* @__PURE__ */ new Set();\n    messages.forEach((message) => {\n      newActors.add(message.from);\n      newActors.add(message.to);\n    });\n    actorKeys = actorKeys.filter((actorKey) => newActors.has(actorKey));\n  }\n  await addActorRenderingData(diagram2, actors, createdActors, actorKeys, 0, messages, false);\n  const loopWidths = await calculateLoopBounds(messages, actors, maxMessageWidthPerActor, diagObj);\n  svgDraw.insertArrowHead(diagram2);\n  svgDraw.insertArrowCrossHead(diagram2);\n  svgDraw.insertArrowFilledHead(diagram2);\n  svgDraw.insertSequenceNumber(diagram2);\n  function activeEnd(msg, verticalPos) {\n    const activationData = bounds.endActivation(msg);\n    if (activationData.starty + 18 > verticalPos) {\n      activationData.starty = verticalPos - 6;\n      verticalPos += 12;\n    }\n    svgDraw.drawActivation(\n      diagram2,\n      activationData,\n      verticalPos,\n      conf,\n      actorActivations(msg.from.actor).length\n    );\n    bounds.insert(activationData.startx, verticalPos - 10, activationData.stopx, verticalPos);\n  }\n  let sequenceIndex = 1;\n  let sequenceIndexStep = 1;\n  const messagesToDraw = [];\n  const backgrounds = [];\n  let index = 0;\n  for (const msg of messages) {\n    let loopModel, noteModel, msgModel;\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.NOTE:\n        bounds.resetVerticalPos();\n        noteModel = msg.noteModel;\n        await drawNote(diagram2, noteModel);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        bounds.newActivation(msg, diagram2, actors);\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        activeEnd(msg, bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.LOOP_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"loop\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.RECT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin,\n          (message) => bounds.newLoop(void 0, message.message)\n        );\n        break;\n      case diagObj.db.LINETYPE.RECT_END:\n        loopModel = bounds.endLoop();\n        backgrounds.push(loopModel);\n        bounds.models.addLoop(loopModel);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        break;\n      case diagObj.db.LINETYPE.OPT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.OPT_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"opt\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.ALT_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.ALT_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"alt\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.PAR_START:\n      case diagObj.db.LINETYPE.PAR_OVER_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        bounds.saveVerticalPos();\n        break;\n      case diagObj.db.LINETYPE.PAR_AND:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.PAR_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"par\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.AUTONUMBER:\n        sequenceIndex = msg.message.start || sequenceIndex;\n        sequenceIndexStep = msg.message.step || sequenceIndexStep;\n        if (msg.message.visible) {\n          diagObj.db.enableSequenceNumbers();\n        } else {\n          diagObj.db.disableSequenceNumbers();\n        }\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin + conf.boxTextMargin,\n          conf.boxMargin,\n          (message) => bounds.addSectionToLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.CRITICAL_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"critical\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      case diagObj.db.LINETYPE.BREAK_START:\n        adjustLoopHeightForWrap(\n          loopWidths,\n          msg,\n          conf.boxMargin,\n          conf.boxMargin + conf.boxTextMargin,\n          (message) => bounds.newLoop(message)\n        );\n        break;\n      case diagObj.db.LINETYPE.BREAK_END:\n        loopModel = bounds.endLoop();\n        await svgDraw.drawLoop(diagram2, loopModel, \"break\", conf);\n        bounds.bumpVerticalPos(loopModel.stopy - bounds.getVerticalPos());\n        bounds.models.addLoop(loopModel);\n        break;\n      default:\n        try {\n          msgModel = msg.msgModel;\n          msgModel.starty = bounds.getVerticalPos();\n          msgModel.sequenceIndex = sequenceIndex;\n          msgModel.sequenceVisible = diagObj.db.showSequenceNumbers();\n          const lineStartY = await boundMessage(diagram2, msgModel);\n          adjustCreatedDestroyedData(\n            msg,\n            msgModel,\n            lineStartY,\n            index,\n            actors,\n            createdActors,\n            destroyedActors\n          );\n          messagesToDraw.push({ messageModel: msgModel, lineStartY });\n          bounds.models.addMessage(msgModel);\n        } catch (e) {\n          _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.error(\"error while drawing message\", e);\n        }\n    }\n    if ([\n      diagObj.db.LINETYPE.SOLID_OPEN,\n      diagObj.db.LINETYPE.DOTTED_OPEN,\n      diagObj.db.LINETYPE.SOLID,\n      diagObj.db.LINETYPE.DOTTED,\n      diagObj.db.LINETYPE.SOLID_CROSS,\n      diagObj.db.LINETYPE.DOTTED_CROSS,\n      diagObj.db.LINETYPE.SOLID_POINT,\n      diagObj.db.LINETYPE.DOTTED_POINT\n    ].includes(msg.type)) {\n      sequenceIndex = sequenceIndex + sequenceIndexStep;\n    }\n    index++;\n  }\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"createdActors\", createdActors);\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"destroyedActors\", destroyedActors);\n  await drawActors(diagram2, actors, actorKeys, false);\n  for (const e of messagesToDraw) {\n    await drawMessage(diagram2, e.messageModel, e.lineStartY, diagObj);\n  }\n  if (conf.mirrorActors) {\n    await drawActors(diagram2, actors, actorKeys, true);\n  }\n  backgrounds.forEach((e) => svgDraw.drawBackgroundRect(diagram2, e));\n  fixLifeLineHeights(diagram2, actors, actorKeys, conf);\n  for (const box2 of bounds.models.boxes) {\n    box2.height = bounds.getVerticalPos() - box2.y;\n    bounds.insert(box2.x, box2.y, box2.x + box2.width, box2.height);\n    box2.startx = box2.x;\n    box2.starty = box2.y;\n    box2.stopx = box2.startx + box2.width;\n    box2.stopy = box2.starty + box2.height;\n    box2.stroke = \"rgb(0,0,0, 0.5)\";\n    await svgDraw.drawBox(diagram2, box2, conf);\n  }\n  if (hasBoxes) {\n    bounds.bumpVerticalPos(conf.boxMargin);\n  }\n  const requiredBoxSize = drawActorsPopup(diagram2, actors, actorKeys, doc);\n  const { bounds: box } = bounds.getBounds();\n  let boxHeight = box.stopy - box.starty;\n  if (boxHeight < requiredBoxSize.maxHeight) {\n    boxHeight = requiredBoxSize.maxHeight;\n  }\n  let height = boxHeight + 2 * conf.diagramMarginY;\n  if (conf.mirrorActors) {\n    height = height - conf.boxMargin + conf.bottomMarginAdj;\n  }\n  let boxWidth = box.stopx - box.startx;\n  if (boxWidth < requiredBoxSize.maxWidth) {\n    boxWidth = requiredBoxSize.maxWidth;\n  }\n  const width = boxWidth + 2 * conf.diagramMarginX;\n  if (title) {\n    diagram2.append(\"text\").text(title).attr(\"x\", (box.stopx - box.startx) / 2 - 2 * conf.diagramMarginX).attr(\"y\", -25);\n  }\n  (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.i)(diagram2, height, width, conf.useMaxWidth);\n  const extraVertForTitle = title ? 40 : 0;\n  diagram2.attr(\n    \"viewBox\",\n    box.startx - conf.diagramMarginX + \" -\" + (conf.diagramMarginY + extraVertForTitle) + \" \" + width + \" \" + (height + extraVertForTitle)\n  );\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(`models:`, bounds.models);\n};\nasync function getMaxMessageWidthPerActor(actors, messages, diagObj) {\n  const maxMessageWidthPerActor = {};\n  for (const msg of messages) {\n    if (actors[msg.to] && actors[msg.from]) {\n      const actor = actors[msg.to];\n      if (msg.placement === diagObj.db.PLACEMENT.LEFTOF && !actor.prevActor) {\n        continue;\n      }\n      if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF && !actor.nextActor) {\n        continue;\n      }\n      const isNote = msg.placement !== void 0;\n      const isMessage = !isNote;\n      const textFont = isNote ? noteFont(conf) : messageFont(conf);\n      const wrappedMessage = msg.wrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, conf.width - 2 * conf.wrapPadding, textFont) : msg.message;\n      const messageDimensions = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(wrappedMessage) ? await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.H)(msg.message, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(wrappedMessage, textFont);\n      const messageWidth = messageDimensions.width + 2 * conf.wrapPadding;\n      if (isMessage && msg.from === actor.nextActor) {\n        maxMessageWidthPerActor[msg.to] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === actor.prevActor) {\n        maxMessageWidthPerActor[msg.from] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (isMessage && msg.from === msg.to) {\n        maxMessageWidthPerActor[msg.from] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth / 2\n        );\n        maxMessageWidthPerActor[msg.to] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[msg.to] || 0,\n          messageWidth / 2\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n        maxMessageWidthPerActor[msg.from] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[msg.from] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n        maxMessageWidthPerActor[actor.prevActor] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n          maxMessageWidthPerActor[actor.prevActor] || 0,\n          messageWidth\n        );\n      } else if (msg.placement === diagObj.db.PLACEMENT.OVER) {\n        if (actor.prevActor) {\n          maxMessageWidthPerActor[actor.prevActor] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n            maxMessageWidthPerActor[actor.prevActor] || 0,\n            messageWidth / 2\n          );\n        }\n        if (actor.nextActor) {\n          maxMessageWidthPerActor[msg.from] = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n            maxMessageWidthPerActor[msg.from] || 0,\n            messageWidth / 2\n          );\n        }\n      }\n    }\n  }\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"maxMessageWidthPerActor:\", maxMessageWidthPerActor);\n  return maxMessageWidthPerActor;\n}\nconst getRequiredPopupWidth = function(actor) {\n  let requiredPopupWidth = 0;\n  const textFont = actorFont(conf);\n  for (const key in actor.links) {\n    const labelDimensions = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(key, textFont);\n    const labelWidth = labelDimensions.width + 2 * conf.wrapPadding + 2 * conf.boxMargin;\n    if (requiredPopupWidth < labelWidth) {\n      requiredPopupWidth = labelWidth;\n    }\n  }\n  return requiredPopupWidth;\n};\nasync function calculateActorMargins(actors, actorToMessageWidth, boxes) {\n  let maxHeight = 0;\n  for (const prop of Object.keys(actors)) {\n    const actor = actors[prop];\n    if (actor.wrap) {\n      actor.description = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(\n        actor.description,\n        conf.width - 2 * conf.wrapPadding,\n        actorFont(conf)\n      );\n    }\n    const actDims = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(actor.description) ? await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.H)(actor.description, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(actor.description, actorFont(conf));\n    actor.width = actor.wrap ? conf.width : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actDims.width + 2 * conf.wrapPadding);\n    actor.height = actor.wrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actDims.height, conf.height) : conf.height;\n    maxHeight = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, actor.height);\n  }\n  for (const actorKey in actorToMessageWidth) {\n    const actor = actors[actorKey];\n    if (!actor) {\n      continue;\n    }\n    const nextActor = actors[actor.nextActor];\n    if (!nextActor) {\n      const messageWidth2 = actorToMessageWidth[actorKey];\n      const actorWidth2 = messageWidth2 + conf.actorMargin - actor.width / 2;\n      actor.margin = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actorWidth2, conf.actorMargin);\n      continue;\n    }\n    const messageWidth = actorToMessageWidth[actorKey];\n    const actorWidth = messageWidth + conf.actorMargin - actor.width / 2 - nextActor.width / 2;\n    actor.margin = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(actorWidth, conf.actorMargin);\n  }\n  let maxBoxHeight = 0;\n  boxes.forEach((box) => {\n    const textFont = messageFont(conf);\n    let totalWidth = box.actorKeys.reduce((total, aKey) => {\n      return total += actors[aKey].width + (actors[aKey].margin || 0);\n    }, 0);\n    totalWidth -= 2 * conf.boxTextMargin;\n    if (box.wrap) {\n      box.name = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(box.name, totalWidth - 2 * conf.wrapPadding, textFont);\n    }\n    const boxMsgDimensions = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(box.name, textFont);\n    maxBoxHeight = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(boxMsgDimensions.height, maxBoxHeight);\n    const minWidth = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(totalWidth, boxMsgDimensions.width + 2 * conf.wrapPadding);\n    box.margin = conf.boxTextMargin;\n    if (totalWidth < minWidth) {\n      const missing = (minWidth - totalWidth) / 2;\n      box.margin += missing;\n    }\n  });\n  boxes.forEach((box) => box.textMaxHeight = maxBoxHeight);\n  return _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(maxHeight, conf.height);\n}\nconst buildNoteModel = async function(msg, actors, diagObj) {\n  const startx = actors[msg.from].x;\n  const stopx = actors[msg.to].x;\n  const shouldWrap = msg.wrap && msg.message;\n  let textDimensions = (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.G)(msg.message) ? await (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.H)(msg.message, (0,_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.c)()) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(\n    shouldWrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(msg.message, conf.width, noteFont(conf)) : msg.message,\n    noteFont(conf)\n  );\n  const noteModel = {\n    width: shouldWrap ? conf.width : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width + 2 * conf.noteMargin),\n    height: 0,\n    startx: actors[msg.from].x,\n    stopx: 0,\n    starty: 0,\n    stopy: 0,\n    message: msg.message\n  };\n  if (msg.placement === diagObj.db.PLACEMENT.RIGHTOF) {\n    noteModel.width = shouldWrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n      actors[msg.from].width / 2 + actors[msg.to].width / 2,\n      textDimensions.width + 2 * conf.noteMargin\n    );\n    noteModel.startx = startx + (actors[msg.from].width + conf.actorMargin) / 2;\n  } else if (msg.placement === diagObj.db.PLACEMENT.LEFTOF) {\n    noteModel.width = shouldWrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, textDimensions.width + 2 * conf.noteMargin) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n      actors[msg.from].width / 2 + actors[msg.to].width / 2,\n      textDimensions.width + 2 * conf.noteMargin\n    );\n    noteModel.startx = startx - noteModel.width + (actors[msg.from].width - conf.actorMargin) / 2;\n  } else if (msg.to === msg.from) {\n    textDimensions = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(\n      shouldWrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(\n        msg.message,\n        _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actors[msg.from].width),\n        noteFont(conf)\n      ) : msg.message,\n      noteFont(conf)\n    );\n    noteModel.width = shouldWrap ? _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(conf.width, actors[msg.from].width) : _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n      actors[msg.from].width,\n      conf.width,\n      textDimensions.width + 2 * conf.noteMargin\n    );\n    noteModel.startx = startx + (actors[msg.from].width - noteModel.width) / 2;\n  } else {\n    noteModel.width = Math.abs(startx + actors[msg.from].width / 2 - (stopx + actors[msg.to].width / 2)) + conf.actorMargin;\n    noteModel.startx = startx < stopx ? startx + actors[msg.from].width / 2 - conf.actorMargin / 2 : stopx + actors[msg.to].width / 2 - conf.actorMargin / 2;\n  }\n  if (shouldWrap) {\n    noteModel.message = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(\n      msg.message,\n      noteModel.width - 2 * conf.wrapPadding,\n      noteFont(conf)\n    );\n  }\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\n    `NM:[${noteModel.startx},${noteModel.stopx},${noteModel.starty},${noteModel.stopy}:${noteModel.width},${noteModel.height}=${msg.message}]`\n  );\n  return noteModel;\n};\nconst buildMessageModel = function(msg, actors, diagObj) {\n  if (![\n    diagObj.db.LINETYPE.SOLID_OPEN,\n    diagObj.db.LINETYPE.DOTTED_OPEN,\n    diagObj.db.LINETYPE.SOLID,\n    diagObj.db.LINETYPE.DOTTED,\n    diagObj.db.LINETYPE.SOLID_CROSS,\n    diagObj.db.LINETYPE.DOTTED_CROSS,\n    diagObj.db.LINETYPE.SOLID_POINT,\n    diagObj.db.LINETYPE.DOTTED_POINT\n  ].includes(msg.type)) {\n    return {};\n  }\n  const [fromLeft, fromRight] = activationBounds(msg.from, actors);\n  const [toLeft, toRight] = activationBounds(msg.to, actors);\n  const isArrowToRight = fromLeft <= toLeft;\n  const startx = isArrowToRight ? fromRight : fromLeft;\n  let stopx = isArrowToRight ? toLeft : toRight;\n  const isArrowToActivation = Math.abs(toLeft - toRight) > 2;\n  const adjustValue = (value) => {\n    return isArrowToRight ? -value : value;\n  };\n  if (msg.from === msg.to) {\n    stopx = startx;\n  } else {\n    if (msg.activate && !isArrowToActivation) {\n      stopx += adjustValue(conf.activationWidth / 2 - 1);\n    }\n    if (![diagObj.db.LINETYPE.SOLID_OPEN, diagObj.db.LINETYPE.DOTTED_OPEN].includes(msg.type)) {\n      stopx += adjustValue(3);\n    }\n  }\n  const allBounds = [fromLeft, fromRight, toLeft, toRight];\n  const boundedWidth = Math.abs(startx - stopx);\n  if (msg.wrap && msg.message) {\n    msg.message = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.wrapLabel(\n      msg.message,\n      _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(boundedWidth + 2 * conf.wrapPadding, conf.width),\n      messageFont(conf)\n    );\n  }\n  const msgDims = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.calculateTextDimensions(msg.message, messageFont(conf));\n  return {\n    width: _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n      msg.wrap ? 0 : msgDims.width + 2 * conf.wrapPadding,\n      boundedWidth + 2 * conf.wrapPadding,\n      conf.width\n    ),\n    height: 0,\n    startx,\n    stopx,\n    starty: 0,\n    stopy: 0,\n    message: msg.message,\n    type: msg.type,\n    wrap: msg.wrap,\n    fromBounds: Math.min.apply(null, allBounds),\n    toBounds: Math.max.apply(null, allBounds)\n  };\n};\nconst calculateLoopBounds = async function(messages, actors, _maxWidthPerActor, diagObj) {\n  const loops = {};\n  const stack = [];\n  let current, noteModel, msgModel;\n  for (const msg of messages) {\n    msg.id = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.u.random({ length: 10 });\n    switch (msg.type) {\n      case diagObj.db.LINETYPE.LOOP_START:\n      case diagObj.db.LINETYPE.ALT_START:\n      case diagObj.db.LINETYPE.OPT_START:\n      case diagObj.db.LINETYPE.PAR_START:\n      case diagObj.db.LINETYPE.PAR_OVER_START:\n      case diagObj.db.LINETYPE.CRITICAL_START:\n      case diagObj.db.LINETYPE.BREAK_START:\n        stack.push({\n          id: msg.id,\n          msg: msg.message,\n          from: Number.MAX_SAFE_INTEGER,\n          to: Number.MIN_SAFE_INTEGER,\n          width: 0\n        });\n        break;\n      case diagObj.db.LINETYPE.ALT_ELSE:\n      case diagObj.db.LINETYPE.PAR_AND:\n      case diagObj.db.LINETYPE.CRITICAL_OPTION:\n        if (msg.message) {\n          current = stack.pop();\n          loops[current.id] = current;\n          loops[msg.id] = current;\n          stack.push(current);\n        }\n        break;\n      case diagObj.db.LINETYPE.LOOP_END:\n      case diagObj.db.LINETYPE.ALT_END:\n      case diagObj.db.LINETYPE.OPT_END:\n      case diagObj.db.LINETYPE.PAR_END:\n      case diagObj.db.LINETYPE.CRITICAL_END:\n      case diagObj.db.LINETYPE.BREAK_END:\n        current = stack.pop();\n        loops[current.id] = current;\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_START:\n        {\n          const actorRect = actors[msg.from ? msg.from.actor : msg.to.actor];\n          const stackedSize = actorActivations(msg.from ? msg.from.actor : msg.to.actor).length;\n          const x = actorRect.x + actorRect.width / 2 + (stackedSize - 1) * conf.activationWidth / 2;\n          const toAdd = {\n            startx: x,\n            stopx: x + conf.activationWidth,\n            actor: msg.from.actor,\n            enabled: true\n          };\n          bounds.activations.push(toAdd);\n        }\n        break;\n      case diagObj.db.LINETYPE.ACTIVE_END:\n        {\n          const lastActorActivationIdx = bounds.activations.map((a) => a.actor).lastIndexOf(msg.from.actor);\n          delete bounds.activations.splice(lastActorActivationIdx, 1)[0];\n        }\n        break;\n    }\n    const isNote = msg.placement !== void 0;\n    if (isNote) {\n      noteModel = await buildNoteModel(msg, actors, diagObj);\n      msg.noteModel = noteModel;\n      stack.forEach((stk) => {\n        current = stk;\n        current.from = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(current.from, noteModel.startx);\n        current.to = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.to, noteModel.startx + noteModel.width);\n        current.width = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, Math.abs(current.from - current.to)) - conf.labelBoxWidth;\n      });\n    } else {\n      msgModel = buildMessageModel(msg, actors, diagObj);\n      msg.msgModel = msgModel;\n      if (msgModel.startx && msgModel.stopx && stack.length > 0) {\n        stack.forEach((stk) => {\n          current = stk;\n          if (msgModel.startx === msgModel.stopx) {\n            const from = actors[msg.from];\n            const to = actors[msg.to];\n            current.from = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(\n              from.x - msgModel.width / 2,\n              from.x - from.width / 2,\n              current.from\n            );\n            current.to = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(\n              to.x + msgModel.width / 2,\n              to.x + from.width / 2,\n              current.to\n            );\n            current.width = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, Math.abs(current.to - current.from)) - conf.labelBoxWidth;\n          } else {\n            current.from = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMin(msgModel.startx, current.from);\n            current.to = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(msgModel.stopx, current.to);\n            current.width = _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.e.getMax(current.width, msgModel.width) - conf.labelBoxWidth;\n          }\n        });\n      }\n    }\n  }\n  bounds.activations = [];\n  _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_5__.l.debug(\"Loop type widths:\", loops);\n  return loops;\n};\nconst renderer = {\n  bounds,\n  drawActors,\n  drawActorsPopup,\n  setConf,\n  draw\n};\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer,\n  styles,\n  init: ({ wrap }) => {\n    db.setWrap(wrap);\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vbWVybWFpZEAxMC45LjQvbm9kZV9tb2R1bGVzL21lcm1haWQvZGlzdC9zZXF1ZW5jZURpYWdyYW0tMTdhYzNiZmYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK2E7QUFDblo7QUFDMEI7QUFDa0g7QUFDcko7QUFDSjtBQUNJO0FBQ0g7QUFDYztBQUNGO0FBQ1o7QUFDYztBQUM5QjtBQUNBO0FBQ0Esc0JBQXNCLGdCQUFnQixLQUFLO0FBQzNDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTCxVQUFVO0FBQ1YsZ0JBQWdCLGd4Q0FBZ3hDO0FBQ2h5QyxrQkFBa0IsMjFCQUEyMUI7QUFDNzJCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHdEQUF3RDtBQUN2Riw0QkFBNEIscUNBQXFDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsOEZBQThGO0FBQzdILDRCQUE0Qix5RUFBeUU7QUFDckc7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDJGQUEyRjtBQUMxSCw0QkFBNEIsdUZBQXVGO0FBQ25IO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwyRkFBMkY7QUFDMUgs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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUCw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLGlCQUFpQiwwQkFBMEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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Q0E7O0FBRUE7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDs7QUFFQTtBQUNBLFlBQVk7QUFDWixjQUFjO0FBQ2Q7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQSxZQUFZO0FBQ1osY0FBYztBQUNkOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaOztBQUVBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1osY0FBYztBQUNkOztBQUVBO0FBQ0EsWUFBWTtBQUNaLGNBQWM7QUFDZDs7QUFFQTtBQUNBLFlBQVk7QUFDWixjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDZEQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvRUFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZUFBZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDZEQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFlBQVksNkRBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1REFBUTtBQUNwQjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw2REFBb0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBSyxVQUFVLFlBQVk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1EQUFNO0FBQzdCLHFCQUFxQixtREFBTTtBQUMzQix3QkFBd0IsbURBQU07QUFDOUIsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG1EQUFNO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1EQUFNO0FBQ2xDLFlBQVk7QUFDWiwyQkFBMkIsbURBQU07QUFDakMseUJBQXlCLG1EQUFNO0FBQy9CLDRCQUE0QixtREFBTTtBQUNsQztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsbURBQUc7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tZXJtYWlkQDEwLjkuNC9ub2RlX21vZHVsZXMvbWVybWFpZC9kaXN0L3NlcXVlbmNlRGlhZ3JhbS0xN2FjM2JmZi5qcz80M2IyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGcgYXMgZ2V0QWNjVGl0bGUsIHQgYXMgZ2V0RGlhZ3JhbVRpdGxlLCBxIGFzIHNldERpYWdyYW1UaXRsZSwgYyBhcyBnZXRDb25maWcsIHMgYXMgc2V0QWNjVGl0bGUsIGIgYXMgc2V0QWNjRGVzY3JpcHRpb24sIGEgYXMgZ2V0QWNjRGVzY3JpcHRpb24sIHYgYXMgY2xlYXIkMSwgbCBhcyBsb2csIGQgYXMgc2FuaXRpemVUZXh0LCBlIGFzIGNvbW1vbiwgRCBhcyBwYXJzZUZvbnRTaXplLCBHIGFzIGhhc0thdGV4LCByIGFzIHJlbmRlckthdGV4U2FuaXRpemVkLCBGIGFzIGdldENvbmZpZyQxLCBaIGFzIFpFUk9fV0lEVEhfU1BBQ0UsIEggYXMgY2FsY3VsYXRlTWF0aE1MRGltZW5zaW9ucywgZiBhcyBhc3NpZ25XaXRoRGVwdGgsIGkgYXMgY29uZmlndXJlU3ZnU2l6ZSwgdSBhcyB1dGlscyB9IGZyb20gXCIuL21lcm1haWQtYWQxZGM5MmYuanNcIjtcbmltcG9ydCB7IHNlbGVjdCB9IGZyb20gXCJkM1wiO1xuaW1wb3J0IHsgc2FuaXRpemVVcmwgfSBmcm9tIFwiQGJyYWludHJlZS9zYW5pdGl6ZS11cmxcIjtcbmltcG9ydCB7IGQgYXMgZHJhd1JlY3QkMSwgYSBhcyBkcmF3QmFja2dyb3VuZFJlY3QkMSwgYiBhcyBkcmF3RW1iZWRkZWRJbWFnZSwgYyBhcyBkcmF3SW1hZ2UsIGUgYXMgZ2V0VGV4dE9iaiQxLCBnIGFzIGdldE5vdGVSZWN0JDEgfSBmcm9tIFwiLi9zdmdEcmF3Q29tbW9uLTNiYTkwNDNiLmpzXCI7XG5pbXBvcnQgXCJ0cy1kZWRlbnRcIjtcbmltcG9ydCBcImRheWpzXCI7XG5pbXBvcnQgXCJkb21wdXJpZnlcIjtcbmltcG9ydCBcImtocm9tYVwiO1xuaW1wb3J0IFwibG9kYXNoLWVzL21lbW9pemUuanNcIjtcbmltcG9ydCBcImxvZGFzaC1lcy9tZXJnZS5qc1wiO1xuaW1wb3J0IFwic3R5bGlzXCI7XG5pbXBvcnQgXCJsb2Rhc2gtZXMvaXNFbXB0eS5qc1wiO1xudmFyIHBhcnNlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgbyA9IGZ1bmN0aW9uKGssIHYsIG8yLCBsKSB7XG4gICAgZm9yIChvMiA9IG8yIHx8IHt9LCBsID0gay5sZW5ndGg7IGwtLTsgbzJba1tsXV0gPSB2KVxuICAgICAgO1xuICAgIHJldHVybiBvMjtcbiAgfSwgJFYwID0gWzEsIDJdLCAkVjEgPSBbMSwgM10sICRWMiA9IFsxLCA0XSwgJFYzID0gWzIsIDRdLCAkVjQgPSBbMSwgOV0sICRWNSA9IFsxLCAxMV0sICRWNiA9IFsxLCAxM10sICRWNyA9IFsxLCAxNF0sICRWOCA9IFsxLCAxNl0sICRWOSA9IFsxLCAxN10sICRWYSA9IFsxLCAxOF0sICRWYiA9IFsxLCAyNF0sICRWYyA9IFsxLCAyNV0sICRWZCA9IFsxLCAyNl0sICRWZSA9IFsxLCAyN10sICRWZiA9IFsxLCAyOF0sICRWZyA9IFsxLCAyOV0sICRWaCA9IFsxLCAzMF0sICRWaSA9IFsxLCAzMV0sICRWaiA9IFsxLCAzMl0sICRWayA9IFsxLCAzM10sICRWbCA9IFsxLCAzNF0sICRWbSA9IFsxLCAzNV0sICRWbiA9IFsxLCAzNl0sICRWbyA9IFsxLCAzN10sICRWcCA9IFsxLCAzOF0sICRWcSA9IFsxLCAzOV0sICRWciA9IFsxLCA0MV0sICRWcyA9IFsxLCA0Ml0sICRWdCA9IFsxLCA0M10sICRWdSA9IFsxLCA0NF0sICRWdiA9IFsxLCA0NV0sICRWdyA9IFsxLCA0Nl0sICRWeCA9IFsxLCA0LCA1LCAxMywgMTQsIDE2LCAxOCwgMjEsIDIzLCAyOSwgMzAsIDMxLCAzMywgMzUsIDM2LCAzNywgMzgsIDM5LCA0MSwgNDMsIDQ0LCA0NiwgNDcsIDQ4LCA0OSwgNTAsIDUyLCA1MywgNTQsIDU5LCA2MCwgNjEsIDYyLCA3MF0sICRWeSA9IFs0LCA1LCAxNiwgNTAsIDUyLCA1M10sICRWeiA9IFs0LCA1LCAxMywgMTQsIDE2LCAxOCwgMjEsIDIzLCAyOSwgMzAsIDMxLCAzMywgMzUsIDM2LCAzNywgMzgsIDM5LCA0MSwgNDMsIDQ0LCA0NiwgNTAsIDUyLCA1MywgNTQsIDU5LCA2MCwgNjEsIDYyLCA3MF0sICRWQSA9IFs0LCA1LCAxMywgMTQsIDE2LCAxOCwgMjEsIDIzLCAyOSwgMzAsIDMxLCAzMywgMzUsIDM2LCAzNywgMzgsIDM5LCA0MSwgNDMsIDQ0LCA0NiwgNDksIDUwLCA1MiwgNTMsIDU0LCA1OSwgNjAsIDYxLCA2MiwgNzBdLCAkVkIgPSBbNCwgNSwgMTMsIDE0LCAxNiwgMTgsIDIxLCAyMywgMjksIDMwLCAzMSwgMzMsIDM1LCAzNiwgMzcsIDM4LCAzOSwgNDEsIDQzLCA0NCwgNDYsIDQ4LCA1MCwgNTIsIDUzLCA1NCwgNTksIDYwLCA2MSwgNjIsIDcwXSwgJFZDID0gWzQsIDUsIDEzLCAxNCwgMTYsIDE4LCAyMSwgMjMsIDI5LCAzMCwgMzEsIDMzLCAzNSwgMzYsIDM3LCAzOCwgMzksIDQxLCA0MywgNDQsIDQ2LCA0NywgNTAsIDUyLCA1MywgNTQsIDU5LCA2MCwgNjEsIDYyLCA3MF0sICRWRCA9IFs2OCwgNjksIDcwXSwgJFZFID0gWzEsIDEyMF07XG4gIHZhciBwYXJzZXIyID0ge1xuICAgIHRyYWNlOiBmdW5jdGlvbiB0cmFjZSgpIHtcbiAgICB9LFxuICAgIHl5OiB7fSxcbiAgICBzeW1ib2xzXzogeyBcImVycm9yXCI6IDIsIFwic3RhcnRcIjogMywgXCJTUEFDRVwiOiA0LCBcIk5FV0xJTkVcIjogNSwgXCJTRFwiOiA2LCBcImRvY3VtZW50XCI6IDcsIFwibGluZVwiOiA4LCBcInN0YXRlbWVudFwiOiA5LCBcImJveF9zZWN0aW9uXCI6IDEwLCBcImJveF9saW5lXCI6IDExLCBcInBhcnRpY2lwYW50X3N0YXRlbWVudFwiOiAxMiwgXCJjcmVhdGVcIjogMTMsIFwiYm94XCI6IDE0LCBcInJlc3RPZkxpbmVcIjogMTUsIFwiZW5kXCI6IDE2LCBcInNpZ25hbFwiOiAxNywgXCJhdXRvbnVtYmVyXCI6IDE4LCBcIk5VTVwiOiAxOSwgXCJvZmZcIjogMjAsIFwiYWN0aXZhdGVcIjogMjEsIFwiYWN0b3JcIjogMjIsIFwiZGVhY3RpdmF0ZVwiOiAyMywgXCJub3RlX3N0YXRlbWVudFwiOiAyNCwgXCJsaW5rc19zdGF0ZW1lbnRcIjogMjUsIFwibGlua19zdGF0ZW1lbnRcIjogMjYsIFwicHJvcGVydGllc19zdGF0ZW1lbnRcIjogMjcsIFwiZGV0YWlsc19zdGF0ZW1lbnRcIjogMjgsIFwidGl0bGVcIjogMjksIFwibGVnYWN5X3RpdGxlXCI6IDMwLCBcImFjY190aXRsZVwiOiAzMSwgXCJhY2NfdGl0bGVfdmFsdWVcIjogMzIsIFwiYWNjX2Rlc2NyXCI6IDMzLCBcImFjY19kZXNjcl92YWx1ZVwiOiAzNCwgXCJhY2NfZGVzY3JfbXVsdGlsaW5lX3ZhbHVlXCI6IDM1LCBcImxvb3BcIjogMzYsIFwicmVjdFwiOiAzNywgXCJvcHRcIjogMzgsIFwiYWx0XCI6IDM5LCBcImVsc2Vfc2VjdGlvbnNcIjogNDAsIFwicGFyXCI6IDQxLCBcInBhcl9zZWN0aW9uc1wiOiA0MiwgXCJwYXJfb3ZlclwiOiA0MywgXCJjcml0aWNhbFwiOiA0NCwgXCJvcHRpb25fc2VjdGlvbnNcIjogNDUsIFwiYnJlYWtcIjogNDYsIFwib3B0aW9uXCI6IDQ3LCBcImFuZFwiOiA0OCwgXCJlbHNlXCI6IDQ5LCBcInBhcnRpY2lwYW50XCI6IDUwLCBcIkFTXCI6IDUxLCBcInBhcnRpY2lwYW50X2FjdG9yXCI6IDUyLCBcImRlc3Ryb3lcIjogNTMsIFwibm90ZVwiOiA1NCwgXCJwbGFjZW1lbnRcIjogNTUsIFwidGV4dDJcIjogNTYsIFwib3ZlclwiOiA1NywgXCJhY3Rvcl9wYWlyXCI6IDU4LCBcImxpbmtzXCI6IDU5LCBcImxpbmtcIjogNjAsIFwicHJvcGVydGllc1wiOiA2MSwgXCJkZXRhaWxzXCI6IDYyLCBcInNwYWNlTGlzdFwiOiA2MywgXCIsXCI6IDY0LCBcImxlZnRfb2ZcIjogNjUsIFwicmlnaHRfb2ZcIjogNjYsIFwic2lnbmFsdHlwZVwiOiA2NywgXCIrXCI6IDY4LCBcIi1cIjogNjksIFwiQUNUT1JcIjogNzAsIFwiU09MSURfT1BFTl9BUlJPV1wiOiA3MSwgXCJET1RURURfT1BFTl9BUlJPV1wiOiA3MiwgXCJTT0xJRF9BUlJPV1wiOiA3MywgXCJET1RURURfQVJST1dcIjogNzQsIFwiU09MSURfQ1JPU1NcIjogNzUsIFwiRE9UVEVEX0NST1NTXCI6IDc2LCBcIlNPTElEX1BPSU5UXCI6IDc3LCBcIkRPVFRFRF9QT0lOVFwiOiA3OCwgXCJUWFRcIjogNzksIFwiJGFjY2VwdFwiOiAwLCBcIiRlbmRcIjogMSB9LFxuICAgIHRlcm1pbmFsc186IHsgMjogXCJlcnJvclwiLCA0OiBcIlNQQUNFXCIsIDU6IFwiTkVXTElORVwiLCA2OiBcIlNEXCIsIDEzOiBcImNyZWF0ZVwiLCAxNDogXCJib3hcIiwgMTU6IFwicmVzdE9mTGluZVwiLCAxNjogXCJlbmRcIiwgMTg6IFwiYXV0b251bWJlclwiLCAxOTogXCJOVU1cIiwgMjA6IFwib2ZmXCIsIDIxOiBcImFjdGl2YXRlXCIsIDIzOiBcImRlYWN0aXZhdGVcIiwgMjk6IFwidGl0bGVcIiwgMzA6IFwibGVnYWN5X3RpdGxlXCIsIDMxOiBcImFjY190aXRsZVwiLCAzMjogXCJhY2NfdGl0bGVfdmFsdWVcIiwgMzM6IFwiYWNjX2Rlc2NyXCIsIDM0OiBcImFjY19kZXNjcl92YWx1ZVwiLCAzNTogXCJhY2NfZGVzY3JfbXVsdGlsaW5lX3ZhbHVlXCIsIDM2OiBcImxvb3BcIiwgMzc6IFwicmVjdFwiLCAzODogXCJvcHRcIiwgMzk6IFwiYWx0XCIsIDQxOiBcInBhclwiLCA0MzogXCJwYXJfb3ZlclwiLCA0NDogXCJjcml0aWNhbFwiLCA0NjogXCJicmVha1wiLCA0NzogXCJvcHRpb25cIiwgNDg6IFwiYW5kXCIsIDQ5OiBcImVsc2VcIiwgNTA6IFwicGFydGljaXBhbnRcIiwgNTE6IFwiQVNcIiwgNTI6IFwicGFydGljaXBhbnRfYWN0b3JcIiwgNTM6IFwiZGVzdHJveVwiLCA1NDogXCJub3RlXCIsIDU3OiBcIm92ZXJcIiwgNTk6IFwibGlua3NcIiwgNjA6IFwibGlua1wiLCA2MTogXCJwcm9wZXJ0aWVzXCIsIDYyOiBcImRldGFpbHNcIiwgNjQ6IFwiLFwiLCA2NTogXCJsZWZ0X29mXCIsIDY2OiBcInJpZ2h0X29mXCIsIDY4OiBcIitcIiwgNjk6IFwiLVwiLCA3MDogXCJBQ1RPUlwiLCA3MTogXCJTT0xJRF9PUEVOX0FSUk9XXCIsIDcyOiBcIkRPVFRFRF9PUEVOX0FSUk9XXCIsIDczOiBcIlNPTElEX0FSUk9XXCIsIDc0OiBcIkRPVFRFRF9BUlJPV1wiLCA3NTogXCJTT0xJRF9DUk9TU1wiLCA3NjogXCJET1RURURfQ1JPU1NcIiwgNzc6IFwiU09MSURfUE9JTlRcIiwgNzg6IFwiRE9UVEVEX1BPSU5UXCIsIDc5OiBcIlRYVFwiIH0sXG4gICAgcHJvZHVjdGlvbnNfOiBbMCwgWzMsIDJdLCBbMywgMl0sIFszLCAyXSwgWzcsIDBdLCBbNywgMl0sIFs4LCAyXSwgWzgsIDFdLCBbOCwgMV0sIFsxMCwgMF0sIFsxMCwgMl0sIFsxMSwgMl0sIFsxMSwgMV0sIFsxMSwgMV0sIFs5LCAxXSwgWzksIDJdLCBbOSwgNF0sIFs5LCAyXSwgWzksIDRdLCBbOSwgM10sIFs5LCAzXSwgWzksIDJdLCBbOSwgM10sIFs5LCAzXSwgWzksIDJdLCBbOSwgMl0sIFs5LCAyXSwgWzksIDJdLCBbOSwgMl0sIFs5LCAxXSwgWzksIDFdLCBbOSwgMl0sIFs5LCAyXSwgWzksIDFdLCBbOSwgNF0sIFs5LCA0XSwgWzksIDRdLCBbOSwgNF0sIFs5LCA0XSwgWzksIDRdLCBbOSwgNF0sIFs5LCA0XSwgWzQ1LCAxXSwgWzQ1LCA0XSwgWzQyLCAxXSwgWzQyLCA0XSwgWzQwLCAxXSwgWzQwLCA0XSwgWzEyLCA1XSwgWzEyLCAzXSwgWzEyLCA1XSwgWzEyLCAzXSwgWzEyLCAzXSwgWzI0LCA0XSwgWzI0LCA0XSwgWzI1LCAzXSwgWzI2LCAzXSwgWzI3LCAzXSwgWzI4LCAzXSwgWzYzLCAyXSwgWzYzLCAxXSwgWzU4LCAzXSwgWzU4LCAxXSwgWzU1LCAxXSwgWzU1LCAxXSwgWzE3LCA1XSwgWzE3LCA1XSwgWzE3LCA0XSwgWzIyLCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzY3LCAxXSwgWzU2LCAxXV0sXG4gICAgcGVyZm9ybUFjdGlvbjogZnVuY3Rpb24gYW5vbnltb3VzKHl5dGV4dCwgeXlsZW5nLCB5eWxpbmVubywgeXksIHl5c3RhdGUsICQkLCBfJCkge1xuICAgICAgdmFyICQwID0gJCQubGVuZ3RoIC0gMTtcbiAgICAgIHN3aXRjaCAoeXlzdGF0ZSkge1xuICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgeXkuYXBwbHkoJCRbJDBdKTtcbiAgICAgICAgICByZXR1cm4gJCRbJDBdO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgIGNhc2UgOTpcbiAgICAgICAgICB0aGlzLiQgPSBbXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCgkJFskMF0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNjpcbiAgICAgICAgY2FzZSA3OlxuICAgICAgICBjYXNlIDExOlxuICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA4OlxuICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgIHRoaXMuJCA9IFtdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDE1OlxuICAgICAgICAgICQkWyQwXS50eXBlID0gXCJjcmVhdGVQYXJ0aWNpcGFudFwiO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxNjpcbiAgICAgICAgICAkJFskMCAtIDFdLnVuc2hpZnQoeyB0eXBlOiBcImJveFN0YXJ0XCIsIGJveERhdGE6IHl5LnBhcnNlQm94RGF0YSgkJFskMCAtIDJdKSB9KTtcbiAgICAgICAgICAkJFskMCAtIDFdLnB1c2goeyB0eXBlOiBcImJveEVuZFwiLCBib3hUZXh0OiAkJFskMCAtIDJdIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMTg6XG4gICAgICAgICAgdGhpcy4kID0geyB0eXBlOiBcInNlcXVlbmNlSW5kZXhcIiwgc2VxdWVuY2VJbmRleDogTnVtYmVyKCQkWyQwIC0gMl0pLCBzZXF1ZW5jZUluZGV4U3RlcDogTnVtYmVyKCQkWyQwIC0gMV0pLCBzZXF1ZW5jZVZpc2libGU6IHRydWUsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFVVE9OVU1CRVIgfTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOTpcbiAgICAgICAgICB0aGlzLiQgPSB7IHR5cGU6IFwic2VxdWVuY2VJbmRleFwiLCBzZXF1ZW5jZUluZGV4OiBOdW1iZXIoJCRbJDAgLSAxXSksIHNlcXVlbmNlSW5kZXhTdGVwOiAxLCBzZXF1ZW5jZVZpc2libGU6IHRydWUsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFVVE9OVU1CRVIgfTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyMDpcbiAgICAgICAgICB0aGlzLiQgPSB7IHR5cGU6IFwic2VxdWVuY2VJbmRleFwiLCBzZXF1ZW5jZVZpc2libGU6IGZhbHNlLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5BVVRPTlVNQkVSIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjE6XG4gICAgICAgICAgdGhpcy4kID0geyB0eXBlOiBcInNlcXVlbmNlSW5kZXhcIiwgc2VxdWVuY2VWaXNpYmxlOiB0cnVlLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5BVVRPTlVNQkVSIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjI6XG4gICAgICAgICAgdGhpcy4kID0geyB0eXBlOiBcImFjdGl2ZVN0YXJ0XCIsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFDVElWRV9TVEFSVCwgYWN0b3I6ICQkWyQwIC0gMV0gfTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyMzpcbiAgICAgICAgICB0aGlzLiQgPSB7IHR5cGU6IFwiYWN0aXZlRW5kXCIsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFDVElWRV9FTkQsIGFjdG9yOiAkJFskMCAtIDFdIH07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjk6XG4gICAgICAgICAgeXkuc2V0RGlhZ3JhbVRpdGxlKCQkWyQwXS5zdWJzdHJpbmcoNikpO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXS5zdWJzdHJpbmcoNik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzA6XG4gICAgICAgICAgeXkuc2V0RGlhZ3JhbVRpdGxlKCQkWyQwXS5zdWJzdHJpbmcoNykpO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXS5zdWJzdHJpbmcoNyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzE6XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDBdLnRyaW0oKTtcbiAgICAgICAgICB5eS5zZXRBY2NUaXRsZSh0aGlzLiQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDMyOlxuICAgICAgICBjYXNlIDMzOlxuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXS50cmltKCk7XG4gICAgICAgICAgeXkuc2V0QWNjRGVzY3JpcHRpb24odGhpcy4kKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAkJFskMCAtIDFdLnVuc2hpZnQoeyB0eXBlOiBcImxvb3BTdGFydFwiLCBsb29wVGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5MT09QX1NUQVJUIH0pO1xuICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCh7IHR5cGU6IFwibG9vcEVuZFwiLCBsb29wVGV4dDogJCRbJDAgLSAyXSwgc2lnbmFsVHlwZTogeXkuTElORVRZUEUuTE9PUF9FTkQgfSk7XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAxXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzNTpcbiAgICAgICAgICAkJFskMCAtIDFdLnVuc2hpZnQoeyB0eXBlOiBcInJlY3RTdGFydFwiLCBjb2xvcjogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5SRUNUX1NUQVJUIH0pO1xuICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCh7IHR5cGU6IFwicmVjdEVuZFwiLCBjb2xvcjogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5SRUNUX0VORCB9KTtcbiAgICAgICAgICB0aGlzLiQgPSAkJFskMCAtIDFdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM2OlxuICAgICAgICAgICQkWyQwIC0gMV0udW5zaGlmdCh7IHR5cGU6IFwib3B0U3RhcnRcIiwgb3B0VGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5PUFRfU1RBUlQgfSk7XG4gICAgICAgICAgJCRbJDAgLSAxXS5wdXNoKHsgdHlwZTogXCJvcHRFbmRcIiwgb3B0VGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5PUFRfRU5EIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzc6XG4gICAgICAgICAgJCRbJDAgLSAxXS51bnNoaWZ0KHsgdHlwZTogXCJhbHRTdGFydFwiLCBhbHRUZXh0OiB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAyXSksIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFMVF9TVEFSVCB9KTtcbiAgICAgICAgICAkJFskMCAtIDFdLnB1c2goeyB0eXBlOiBcImFsdEVuZFwiLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5BTFRfRU5EIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgJCRbJDAgLSAxXS51bnNoaWZ0KHsgdHlwZTogXCJwYXJTdGFydFwiLCBwYXJUZXh0OiB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAyXSksIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLlBBUl9TVEFSVCB9KTtcbiAgICAgICAgICAkJFskMCAtIDFdLnB1c2goeyB0eXBlOiBcInBhckVuZFwiLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5QQVJfRU5EIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgJCRbJDAgLSAxXS51bnNoaWZ0KHsgdHlwZTogXCJwYXJTdGFydFwiLCBwYXJUZXh0OiB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAyXSksIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLlBBUl9PVkVSX1NUQVJUIH0pO1xuICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCh7IHR5cGU6IFwicGFyRW5kXCIsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLlBBUl9FTkQgfSk7XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAxXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAkJFskMCAtIDFdLnVuc2hpZnQoeyB0eXBlOiBcImNyaXRpY2FsU3RhcnRcIiwgY3JpdGljYWxUZXh0OiB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAyXSksIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkNSSVRJQ0FMX1NUQVJUIH0pO1xuICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCh7IHR5cGU6IFwiY3JpdGljYWxFbmRcIiwgc2lnbmFsVHlwZTogeXkuTElORVRZUEUuQ1JJVElDQUxfRU5EIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgJCRbJDAgLSAxXS51bnNoaWZ0KHsgdHlwZTogXCJicmVha1N0YXJ0XCIsIGJyZWFrVGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMl0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5CUkVBS19TVEFSVCB9KTtcbiAgICAgICAgICAkJFskMCAtIDFdLnB1c2goeyB0eXBlOiBcImJyZWFrRW5kXCIsIG9wdFRleHQ6IHl5LnBhcnNlTWVzc2FnZSgkJFskMCAtIDJdKSwgc2lnbmFsVHlwZTogeXkuTElORVRZUEUuQlJFQUtfRU5EIH0pO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNDM6XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAzXS5jb25jYXQoW3sgdHlwZTogXCJvcHRpb25cIiwgb3B0aW9uVGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMV0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5DUklUSUNBTF9PUFRJT04gfSwgJCRbJDBdXSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAzXS5jb25jYXQoW3sgdHlwZTogXCJhbmRcIiwgcGFyVGV4dDogeXkucGFyc2VNZXNzYWdlKCQkWyQwIC0gMV0pLCBzaWduYWxUeXBlOiB5eS5MSU5FVFlQRS5QQVJfQU5EIH0sICQkWyQwXV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gM10uY29uY2F0KFt7IHR5cGU6IFwiZWxzZVwiLCBhbHRUZXh0OiB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAxXSksIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFMVF9FTFNFIH0sICQkWyQwXV0pO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ4OlxuICAgICAgICAgICQkWyQwIC0gM10uZHJhdyA9IFwicGFydGljaXBhbnRcIjtcbiAgICAgICAgICAkJFskMCAtIDNdLnR5cGUgPSBcImFkZFBhcnRpY2lwYW50XCI7XG4gICAgICAgICAgJCRbJDAgLSAzXS5kZXNjcmlwdGlvbiA9IHl5LnBhcnNlTWVzc2FnZSgkJFskMCAtIDFdKTtcbiAgICAgICAgICB0aGlzLiQgPSAkJFskMCAtIDNdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ5OlxuICAgICAgICAgICQkWyQwIC0gMV0uZHJhdyA9IFwicGFydGljaXBhbnRcIjtcbiAgICAgICAgICAkJFskMCAtIDFdLnR5cGUgPSBcImFkZFBhcnRpY2lwYW50XCI7XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAxXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA1MDpcbiAgICAgICAgICAkJFskMCAtIDNdLmRyYXcgPSBcImFjdG9yXCI7XG4gICAgICAgICAgJCRbJDAgLSAzXS50eXBlID0gXCJhZGRQYXJ0aWNpcGFudFwiO1xuICAgICAgICAgICQkWyQwIC0gM10uZGVzY3JpcHRpb24gPSB5eS5wYXJzZU1lc3NhZ2UoJCRbJDAgLSAxXSk7XG4gICAgICAgICAgdGhpcy4kID0gJCRbJDAgLSAzXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA1MTpcbiAgICAgICAgICAkJFskMCAtIDFdLmRyYXcgPSBcImFjdG9yXCI7XG4gICAgICAgICAgJCRbJDAgLSAxXS50eXBlID0gXCJhZGRQYXJ0aWNpcGFudFwiO1xuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwIC0gMV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTI6XG4gICAgICAgICAgJCRbJDAgLSAxXS50eXBlID0gXCJkZXN0cm95UGFydGljaXBhbnRcIjtcbiAgICAgICAgICB0aGlzLiQgPSAkJFskMCAtIDFdO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDUzOlxuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDFdLCB7IHR5cGU6IFwiYWRkTm90ZVwiLCBwbGFjZW1lbnQ6ICQkWyQwIC0gMl0sIGFjdG9yOiAkJFskMCAtIDFdLmFjdG9yLCB0ZXh0OiAkJFskMF0gfV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTQ6XG4gICAgICAgICAgJCRbJDAgLSAyXSA9IFtdLmNvbmNhdCgkJFskMCAtIDFdLCAkJFskMCAtIDFdKS5zbGljZSgwLCAyKTtcbiAgICAgICAgICAkJFskMCAtIDJdWzBdID0gJCRbJDAgLSAyXVswXS5hY3RvcjtcbiAgICAgICAgICAkJFskMCAtIDJdWzFdID0gJCRbJDAgLSAyXVsxXS5hY3RvcjtcbiAgICAgICAgICB0aGlzLiQgPSBbJCRbJDAgLSAxXSwgeyB0eXBlOiBcImFkZE5vdGVcIiwgcGxhY2VtZW50OiB5eS5QTEFDRU1FTlQuT1ZFUiwgYWN0b3I6ICQkWyQwIC0gMl0uc2xpY2UoMCwgMiksIHRleHQ6ICQkWyQwXSB9XTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA1NTpcbiAgICAgICAgICB0aGlzLiQgPSBbJCRbJDAgLSAxXSwgeyB0eXBlOiBcImFkZExpbmtzXCIsIGFjdG9yOiAkJFskMCAtIDFdLmFjdG9yLCB0ZXh0OiAkJFskMF0gfV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTY6XG4gICAgICAgICAgdGhpcy4kID0gWyQkWyQwIC0gMV0sIHsgdHlwZTogXCJhZGRBTGlua1wiLCBhY3RvcjogJCRbJDAgLSAxXS5hY3RvciwgdGV4dDogJCRbJDBdIH1dO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDU3OlxuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDFdLCB7IHR5cGU6IFwiYWRkUHJvcGVydGllc1wiLCBhY3RvcjogJCRbJDAgLSAxXS5hY3RvciwgdGV4dDogJCRbJDBdIH1dO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDFdLCB7IHR5cGU6IFwiYWRkRGV0YWlsc1wiLCBhY3RvcjogJCRbJDAgLSAxXS5hY3RvciwgdGV4dDogJCRbJDBdIH1dO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDYxOlxuICAgICAgICAgIHRoaXMuJCA9IFskJFskMCAtIDJdLCAkJFskMF1dO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDYyOlxuICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA2MzpcbiAgICAgICAgICB0aGlzLiQgPSB5eS5QTEFDRU1FTlQuTEVGVE9GO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgIHRoaXMuJCA9IHl5LlBMQUNFTUVOVC5SSUdIVE9GO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDY1OlxuICAgICAgICAgIHRoaXMuJCA9IFtcbiAgICAgICAgICAgICQkWyQwIC0gNF0sXG4gICAgICAgICAgICAkJFskMCAtIDFdLFxuICAgICAgICAgICAgeyB0eXBlOiBcImFkZE1lc3NhZ2VcIiwgZnJvbTogJCRbJDAgLSA0XS5hY3RvciwgdG86ICQkWyQwIC0gMV0uYWN0b3IsIHNpZ25hbFR5cGU6ICQkWyQwIC0gM10sIG1zZzogJCRbJDBdLCBhY3RpdmF0ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgeyB0eXBlOiBcImFjdGl2ZVN0YXJ0XCIsIHNpZ25hbFR5cGU6IHl5LkxJTkVUWVBFLkFDVElWRV9TVEFSVCwgYWN0b3I6ICQkWyQwIC0gMV0gfVxuICAgICAgICAgIF07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNjY6XG4gICAgICAgICAgdGhpcy4kID0gW1xuICAgICAgICAgICAgJCRbJDAgLSA0XSxcbiAgICAgICAgICAgICQkWyQwIC0gMV0sXG4gICAgICAgICAgICB7IHR5cGU6IFwiYWRkTWVzc2FnZVwiLCBmcm9tOiAkJFskMCAtIDRdLmFjdG9yLCB0bzogJCRbJDAgLSAxXS5hY3Rvciwgc2lnbmFsVHlwZTogJCRbJDAgLSAzXSwgbXNnOiAkJFskMF0gfSxcbiAgICAgICAgICAgIHsgdHlwZTogXCJhY3RpdmVFbmRcIiwgc2lnbmFsVHlwZTogeXkuTElORVRZUEUuQUNUSVZFX0VORCwgYWN0b3I6ICQkWyQwIC0gNF0gfVxuICAgICAgICAgIF07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNjc6XG4gICAgICAgICAgdGhpcy4kID0gWyQkWyQwIC0gM10sICQkWyQwIC0gMV0sIHsgdHlwZTogXCJhZGRNZXNzYWdlXCIsIGZyb206ICQkWyQwIC0gM10uYWN0b3IsIHRvOiAkJFskMCAtIDFdLmFjdG9yLCBzaWduYWxUeXBlOiAkJFskMCAtIDJdLCBtc2c6ICQkWyQwXSB9XTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA2ODpcbiAgICAgICAgICB0aGlzLiQgPSB7IHR5cGU6IFwiYWRkUGFydGljaXBhbnRcIiwgYWN0b3I6ICQkWyQwXSB9O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDY5OlxuICAgICAgICAgIHRoaXMuJCA9IHl5LkxJTkVUWVBFLlNPTElEX09QRU47XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzA6XG4gICAgICAgICAgdGhpcy4kID0geXkuTElORVRZUEUuRE9UVEVEX09QRU47XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzE6XG4gICAgICAgICAgdGhpcy4kID0geXkuTElORVRZUEUuU09MSUQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzI6XG4gICAgICAgICAgdGhpcy4kID0geXkuTElORVRZUEUuRE9UVEVEO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDczOlxuICAgICAgICAgIHRoaXMuJCA9IHl5LkxJTkVUWVBFLlNPTElEX0NST1NTO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDc0OlxuICAgICAgICAgIHRoaXMuJCA9IHl5LkxJTkVUWVBFLkRPVFRFRF9DUk9TUztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA3NTpcbiAgICAgICAgICB0aGlzLiQgPSB5eS5MSU5FVFlQRS5TT0xJRF9QT0lOVDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA3NjpcbiAgICAgICAgICB0aGlzLiQgPSB5eS5MSU5FVFlQRS5ET1RURURfUE9JTlQ7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzc6XG4gICAgICAgICAgdGhpcy4kID0geXkucGFyc2VNZXNzYWdlKCQkWyQwXS50cmltKCkuc3Vic3RyaW5nKDEpKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9LFxuICAgIHRhYmxlOiBbeyAzOiAxLCA0OiAkVjAsIDU6ICRWMSwgNjogJFYyIH0sIHsgMTogWzNdIH0sIHsgMzogNSwgNDogJFYwLCA1OiAkVjEsIDY6ICRWMiB9LCB7IDM6IDYsIDQ6ICRWMCwgNTogJFYxLCA2OiAkVjIgfSwgbyhbMSwgNCwgNSwgMTMsIDE0LCAxOCwgMjEsIDIzLCAyOSwgMzAsIDMxLCAzMywgMzUsIDM2LCAzNywgMzgsIDM5LCA0MSwgNDMsIDQ0LCA0NiwgNTAsIDUyLCA1MywgNTQsIDU5LCA2MCwgNjEsIDYyLCA3MF0sICRWMywgeyA3OiA3IH0pLCB7IDE6IFsyLCAxXSB9LCB7IDE6IFsyLCAyXSB9LCB7IDE6IFsyLCAzXSwgNDogJFY0LCA1OiAkVjUsIDg6IDgsIDk6IDEwLCAxMjogMTIsIDEzOiAkVjYsIDE0OiAkVjcsIDE3OiAxNSwgMTg6ICRWOCwgMjE6ICRWOSwgMjI6IDQwLCAyMzogJFZhLCAyNDogMTksIDI1OiAyMCwgMjY6IDIxLCAyNzogMjIsIDI4OiAyMywgMjk6ICRWYiwgMzA6ICRWYywgMzE6ICRWZCwgMzM6ICRWZSwgMzU6ICRWZiwgMzY6ICRWZywgMzc6ICRWaCwgMzg6ICRWaSwgMzk6ICRWaiwgNDE6ICRWaywgNDM6ICRWbCwgNDQ6ICRWbSwgNDY6ICRWbiwgNTA6ICRWbywgNTI6ICRWcCwgNTM6ICRWcSwgNTQ6ICRWciwgNTk6ICRWcywgNjA6ICRWdCwgNjE6ICRWdSwgNjI6ICRWdiwgNzA6ICRWdyB9LCBvKCRWeCwgWzIsIDVdKSwgeyA5OiA0NywgMTI6IDEyLCAxMzogJFY2LCAxNDogJFY3LCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgbygkVngsIFsyLCA3XSksIG8oJFZ4LCBbMiwgOF0pLCBvKCRWeCwgWzIsIDE0XSksIHsgMTI6IDQ4LCA1MDogJFZvLCA1MjogJFZwLCA1MzogJFZxIH0sIHsgMTU6IFsxLCA0OV0gfSwgeyA1OiBbMSwgNTBdIH0sIHsgNTogWzEsIDUzXSwgMTk6IFsxLCA1MV0sIDIwOiBbMSwgNTJdIH0sIHsgMjI6IDU0LCA3MDogJFZ3IH0sIHsgMjI6IDU1LCA3MDogJFZ3IH0sIHsgNTogWzEsIDU2XSB9LCB7IDU6IFsxLCA1N10gfSwgeyA1OiBbMSwgNThdIH0sIHsgNTogWzEsIDU5XSB9LCB7IDU6IFsxLCA2MF0gfSwgbygkVngsIFsyLCAyOV0pLCBvKCRWeCwgWzIsIDMwXSksIHsgMzI6IFsxLCA2MV0gfSwgeyAzNDogWzEsIDYyXSB9LCBvKCRWeCwgWzIsIDMzXSksIHsgMTU6IFsxLCA2M10gfSwgeyAxNTogWzEsIDY0XSB9LCB7IDE1OiBbMSwgNjVdIH0sIHsgMTU6IFsxLCA2Nl0gfSwgeyAxNTogWzEsIDY3XSB9LCB7IDE1OiBbMSwgNjhdIH0sIHsgMTU6IFsxLCA2OV0gfSwgeyAxNTogWzEsIDcwXSB9LCB7IDIyOiA3MSwgNzA6ICRWdyB9LCB7IDIyOiA3MiwgNzA6ICRWdyB9LCB7IDIyOiA3MywgNzA6ICRWdyB9LCB7IDY3OiA3NCwgNzE6IFsxLCA3NV0sIDcyOiBbMSwgNzZdLCA3MzogWzEsIDc3XSwgNzQ6IFsxLCA3OF0sIDc1OiBbMSwgNzldLCA3NjogWzEsIDgwXSwgNzc6IFsxLCA4MV0sIDc4OiBbMSwgODJdIH0sIHsgNTU6IDgzLCA1NzogWzEsIDg0XSwgNjU6IFsxLCA4NV0sIDY2OiBbMSwgODZdIH0sIHsgMjI6IDg3LCA3MDogJFZ3IH0sIHsgMjI6IDg4LCA3MDogJFZ3IH0sIHsgMjI6IDg5LCA3MDogJFZ3IH0sIHsgMjI6IDkwLCA3MDogJFZ3IH0sIG8oWzUsIDUxLCA2NCwgNzEsIDcyLCA3MywgNzQsIDc1LCA3NiwgNzcsIDc4LCA3OV0sIFsyLCA2OF0pLCBvKCRWeCwgWzIsIDZdKSwgbygkVngsIFsyLCAxNV0pLCBvKCRWeSwgWzIsIDldLCB7IDEwOiA5MSB9KSwgbygkVngsIFsyLCAxN10pLCB7IDU6IFsxLCA5M10sIDE5OiBbMSwgOTJdIH0sIHsgNTogWzEsIDk0XSB9LCBvKCRWeCwgWzIsIDIxXSksIHsgNTogWzEsIDk1XSB9LCB7IDU6IFsxLCA5Nl0gfSwgbygkVngsIFsyLCAyNF0pLCBvKCRWeCwgWzIsIDI1XSksIG8oJFZ4LCBbMiwgMjZdKSwgbygkVngsIFsyLCAyN10pLCBvKCRWeCwgWzIsIDI4XSksIG8oJFZ4LCBbMiwgMzFdKSwgbygkVngsIFsyLCAzMl0pLCBvKCRWeiwgJFYzLCB7IDc6IDk3IH0pLCBvKCRWeiwgJFYzLCB7IDc6IDk4IH0pLCBvKCRWeiwgJFYzLCB7IDc6IDk5IH0pLCBvKCRWQSwgJFYzLCB7IDQwOiAxMDAsIDc6IDEwMSB9KSwgbygkVkIsICRWMywgeyA0MjogMTAyLCA3OiAxMDMgfSksIG8oJFZCLCAkVjMsIHsgNzogMTAzLCA0MjogMTA0IH0pLCBvKCRWQywgJFYzLCB7IDQ1OiAxMDUsIDc6IDEwNiB9KSwgbygkVnosICRWMywgeyA3OiAxMDcgfSksIHsgNTogWzEsIDEwOV0sIDUxOiBbMSwgMTA4XSB9LCB7IDU6IFsxLCAxMTFdLCA1MTogWzEsIDExMF0gfSwgeyA1OiBbMSwgMTEyXSB9LCB7IDIyOiAxMTUsIDY4OiBbMSwgMTEzXSwgNjk6IFsxLCAxMTRdLCA3MDogJFZ3IH0sIG8oJFZELCBbMiwgNjldKSwgbygkVkQsIFsyLCA3MF0pLCBvKCRWRCwgWzIsIDcxXSksIG8oJFZELCBbMiwgNzJdKSwgbygkVkQsIFsyLCA3M10pLCBvKCRWRCwgWzIsIDc0XSksIG8oJFZELCBbMiwgNzVdKSwgbygkVkQsIFsyLCA3Nl0pLCB7IDIyOiAxMTYsIDcwOiAkVncgfSwgeyAyMjogMTE4LCA1ODogMTE3LCA3MDogJFZ3IH0sIHsgNzA6IFsyLCA2M10gfSwgeyA3MDogWzIsIDY0XSB9LCB7IDU2OiAxMTksIDc5OiAkVkUgfSwgeyA1NjogMTIxLCA3OTogJFZFIH0sIHsgNTY6IDEyMiwgNzk6ICRWRSB9LCB7IDU2OiAxMjMsIDc5OiAkVkUgfSwgeyA0OiBbMSwgMTI2XSwgNTogWzEsIDEyOF0sIDExOiAxMjUsIDEyOiAxMjcsIDE2OiBbMSwgMTI0XSwgNTA6ICRWbywgNTI6ICRWcCwgNTM6ICRWcSB9LCB7IDU6IFsxLCAxMjldIH0sIG8oJFZ4LCBbMiwgMTldKSwgbygkVngsIFsyLCAyMF0pLCBvKCRWeCwgWzIsIDIyXSksIG8oJFZ4LCBbMiwgMjNdKSwgeyA0OiAkVjQsIDU6ICRWNSwgODogOCwgOTogMTAsIDEyOiAxMiwgMTM6ICRWNiwgMTQ6ICRWNywgMTY6IFsxLCAxMzBdLCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgeyA0OiAkVjQsIDU6ICRWNSwgODogOCwgOTogMTAsIDEyOiAxMiwgMTM6ICRWNiwgMTQ6ICRWNywgMTY6IFsxLCAxMzFdLCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgeyA0OiAkVjQsIDU6ICRWNSwgODogOCwgOTogMTAsIDEyOiAxMiwgMTM6ICRWNiwgMTQ6ICRWNywgMTY6IFsxLCAxMzJdLCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgeyAxNjogWzEsIDEzM10gfSwgeyA0OiAkVjQsIDU6ICRWNSwgODogOCwgOTogMTAsIDEyOiAxMiwgMTM6ICRWNiwgMTQ6ICRWNywgMTY6IFsyLCA0Nl0sIDE3OiAxNSwgMTg6ICRWOCwgMjE6ICRWOSwgMjI6IDQwLCAyMzogJFZhLCAyNDogMTksIDI1OiAyMCwgMjY6IDIxLCAyNzogMjIsIDI4OiAyMywgMjk6ICRWYiwgMzA6ICRWYywgMzE6ICRWZCwgMzM6ICRWZSwgMzU6ICRWZiwgMzY6ICRWZywgMzc6ICRWaCwgMzg6ICRWaSwgMzk6ICRWaiwgNDE6ICRWaywgNDM6ICRWbCwgNDQ6ICRWbSwgNDY6ICRWbiwgNDk6IFsxLCAxMzRdLCA1MDogJFZvLCA1MjogJFZwLCA1MzogJFZxLCA1NDogJFZyLCA1OTogJFZzLCA2MDogJFZ0LCA2MTogJFZ1LCA2MjogJFZ2LCA3MDogJFZ3IH0sIHsgMTY6IFsxLCAxMzVdIH0sIHsgNDogJFY0LCA1OiAkVjUsIDg6IDgsIDk6IDEwLCAxMjogMTIsIDEzOiAkVjYsIDE0OiAkVjcsIDE2OiBbMiwgNDRdLCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDQ4OiBbMSwgMTM2XSwgNTA6ICRWbywgNTI6ICRWcCwgNTM6ICRWcSwgNTQ6ICRWciwgNTk6ICRWcywgNjA6ICRWdCwgNjE6ICRWdSwgNjI6ICRWdiwgNzA6ICRWdyB9LCB7IDE2OiBbMSwgMTM3XSB9LCB7IDE2OiBbMSwgMTM4XSB9LCB7IDQ6ICRWNCwgNTogJFY1LCA4OiA4LCA5OiAxMCwgMTI6IDEyLCAxMzogJFY2LCAxNDogJFY3LCAxNjogWzIsIDQyXSwgMTc6IDE1LCAxODogJFY4LCAyMTogJFY5LCAyMjogNDAsIDIzOiAkVmEsIDI0OiAxOSwgMjU6IDIwLCAyNjogMjEsIDI3OiAyMiwgMjg6IDIzLCAyOTogJFZiLCAzMDogJFZjLCAzMTogJFZkLCAzMzogJFZlLCAzNTogJFZmLCAzNjogJFZnLCAzNzogJFZoLCAzODogJFZpLCAzOTogJFZqLCA0MTogJFZrLCA0MzogJFZsLCA0NDogJFZtLCA0NjogJFZuLCA0NzogWzEsIDEzOV0sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgeyA0OiAkVjQsIDU6ICRWNSwgODogOCwgOTogMTAsIDEyOiAxMiwgMTM6ICRWNiwgMTQ6ICRWNywgMTY6IFsxLCAxNDBdLCAxNzogMTUsIDE4OiAkVjgsIDIxOiAkVjksIDIyOiA0MCwgMjM6ICRWYSwgMjQ6IDE5LCAyNTogMjAsIDI2OiAyMSwgMjc6IDIyLCAyODogMjMsIDI5OiAkVmIsIDMwOiAkVmMsIDMxOiAkVmQsIDMzOiAkVmUsIDM1OiAkVmYsIDM2OiAkVmcsIDM3OiAkVmgsIDM4OiAkVmksIDM5OiAkVmosIDQxOiAkVmssIDQzOiAkVmwsIDQ0OiAkVm0sIDQ2OiAkVm4sIDUwOiAkVm8sIDUyOiAkVnAsIDUzOiAkVnEsIDU0OiAkVnIsIDU5OiAkVnMsIDYwOiAkVnQsIDYxOiAkVnUsIDYyOiAkVnYsIDcwOiAkVncgfSwgeyAxNTogWzEsIDE0MV0gfSwgbygkVngsIFsyLCA0OV0pLCB7IDE1OiBbMSwgMTQyXSB9LCBvKCRWeCwgWzIsIDUxXSksIG8oJFZ4LCBbMiwgNTJdKSwgeyAyMjogMTQzLCA3MDogJFZ3IH0sIHsgMjI6IDE0NCwgNzA6ICRWdyB9LCB7IDU2OiAxNDUsIDc5OiAkVkUgfSwgeyA1NjogMTQ2LCA3OTogJFZFIH0sIHsgNTY6IDE0NywgNzk6ICRWRSB9LCB7IDY0OiBbMSwgMTQ4XSwgNzk6IFsyLCA2Ml0gfSwgeyA1OiBbMiwgNTVdIH0sIHsgNTogWzIsIDc3XSB9LCB7IDU6IFsyLCA1Nl0gfSwgeyA1OiBbMiwgNTddIH0sIHsgNTogWzIsIDU4XSB9LCBvKCRWeCwgWzIsIDE2XSksIG8oJFZ5LCBbMiwgMTBdKSwgeyAxMjogMTQ5LCA1MDogJFZvLCA1MjogJFZwLCA1MzogJFZxIH0sIG8oJFZ5LCBbMiwgMTJdKSwgbygkVnksIFsyLCAxM10pLCBvKCRWeCwgWzIsIDE4XSksIG8oJFZ4LCBbMiwgMzRdKSwgbygkVngsIFsyLCAzNV0pLCBvKCRWeCwgWzIsIDM2XSksIG8oJFZ4LCBbMiwgMzddKSwgeyAxNTogWzEsIDE1MF0gfSwgbygkVngsIFsyLCAzOF0pLCB7IDE1OiBbMSwgMTUxXSB9LCBvKCRWeCwgWzIsIDM5XSksIG8oJFZ4LCBbMiwgNDBdKSwgeyAxNTogWzEsIDE1Ml0gfSwgbygkVngsIFsyLCA0MV0pLCB7IDU6IFsxLCAxNTNdIH0sIHsgNTogWzEsIDE1NF0gfSwgeyA1NjogMTU1LCA3OTogJFZFIH0sIHsgNTY6IDE1NiwgNzk6ICRWRSB9LCB7IDU6IFsyLCA2N10gfSwgeyA1OiBbMiwgNTNdIH0sIHsgNTogWzIsIDU0XSB9LCB7IDIyOiAxNTcsIDcwOiAkVncgfSwgbygkVnksIFsyLCAxMV0pLCBvKCRWQSwgJFYzLCB7IDc6IDEwMSwgNDA6IDE1OCB9KSwgbygkVkIsICRWMywgeyA3OiAxMDMsIDQyOiAxNTkgfSksIG8oJFZDLCAkVjMsIHsgNzogMTA2LCA0NTogMTYwIH0pLCBvKCRWeCwgWzIsIDQ4XSksIG8oJFZ4LCBbMiwgNTBdKSwgeyA1OiBbMiwgNjVdIH0sIHsgNTogWzIsIDY2XSB9LCB7IDc5OiBbMiwgNjFdIH0sIHsgMTY6IFsyLCA0N10gfSwgeyAxNjogWzIsIDQ1XSB9LCB7IDE2OiBbMiwgNDNdIH1dLFxuICAgIGRlZmF1bHRBY3Rpb25zOiB7IDU6IFsyLCAxXSwgNjogWzIsIDJdLCA4NTogWzIsIDYzXSwgODY6IFsyLCA2NF0sIDExOTogWzIsIDU1XSwgMTIwOiBbMiwgNzddLCAxMjE6IFsyLCA1Nl0sIDEyMjogWzIsIDU3XSwgMTIzOiBbMiwgNThdLCAxNDU6IFsyLCA2N10sIDE0NjogWzIsIDUzXSwgMTQ3OiBbMiwgNTRdLCAxNTU6IFsyLCA2NV0sIDE1NjogWzIsIDY2XSwgMTU3OiBbMiwgNjFdLCAxNTg6IFsyLCA0N10sIDE1OTogWzIsIDQ1XSwgMTYwOiBbMiwgNDNdIH0sXG4gICAgcGFyc2VFcnJvcjogZnVuY3Rpb24gcGFyc2VFcnJvcihzdHIsIGhhc2gpIHtcbiAgICAgIGlmIChoYXNoLnJlY292ZXJhYmxlKSB7XG4gICAgICAgIHRoaXMudHJhY2Uoc3RyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcihzdHIpO1xuICAgICAgICBlcnJvci5oYXNoID0gaGFzaDtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG4gICAgfSxcbiAgICBwYXJzZTogZnVuY3Rpb24gcGFyc2UoaW5wdXQpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcywgc3RhY2sgPSBbMF0sIHRzdGFjayA9IFtdLCB2c3RhY2sgPSBbbnVsbF0sIGxzdGFjayA9IFtdLCB0YWJsZSA9IHRoaXMudGFibGUsIHl5dGV4dCA9IFwiXCIsIHl5bGluZW5vID0gMCwgeXlsZW5nID0gMCwgVEVSUk9SID0gMiwgRU9GID0gMTtcbiAgICAgIHZhciBhcmdzID0gbHN0YWNrLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgIHZhciBsZXhlcjIgPSBPYmplY3QuY3JlYXRlKHRoaXMubGV4ZXIpO1xuICAgICAgdmFyIHNoYXJlZFN0YXRlID0geyB5eToge30gfTtcbiAgICAgIGZvciAodmFyIGsgaW4gdGhpcy55eSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMueXksIGspKSB7XG4gICAgICAgICAgc2hhcmVkU3RhdGUueXlba10gPSB0aGlzLnl5W2tdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsZXhlcjIuc2V0SW5wdXQoaW5wdXQsIHNoYXJlZFN0YXRlLnl5KTtcbiAgICAgIHNoYXJlZFN0YXRlLnl5LmxleGVyID0gbGV4ZXIyO1xuICAgICAgc2hhcmVkU3RhdGUueXkucGFyc2VyID0gdGhpcztcbiAgICAgIGlmICh0eXBlb2YgbGV4ZXIyLnl5bGxvYyA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGxleGVyMi55eWxsb2MgPSB7fTtcbiAgICAgIH1cbiAgICAgIHZhciB5eWxvYyA9IGxleGVyMi55eWxsb2M7XG4gICAgICBsc3RhY2sucHVzaCh5eWxvYyk7XG4gICAgICB2YXIgcmFuZ2VzID0gbGV4ZXIyLm9wdGlvbnMgJiYgbGV4ZXIyLm9wdGlvbnMucmFuZ2VzO1xuICAgICAgaWYgKHR5cGVvZiBzaGFyZWRTdGF0ZS55eS5wYXJzZUVycm9yID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhpcy5wYXJzZUVycm9yID0gc2hhcmVkU3RhdGUueXkucGFyc2VFcnJvcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucGFyc2VFcnJvciA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5wYXJzZUVycm9yO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGV4KCkge1xuICAgICAgICB2YXIgdG9rZW47XG4gICAgICAgIHRva2VuID0gdHN0YWNrLnBvcCgpIHx8IGxleGVyMi5sZXgoKSB8fCBFT0Y7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICBpZiAodG9rZW4gaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgdHN0YWNrID0gdG9rZW47XG4gICAgICAgICAgICB0b2tlbiA9IHRzdGFjay5wb3AoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdG9rZW4gPSBzZWxmLnN5bWJvbHNfW3Rva2VuXSB8fCB0b2tlbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICB9XG4gICAgICB2YXIgc3ltYm9sLCBzdGF0ZTIsIGFjdGlvbiwgciwgeXl2YWwgPSB7fSwgcCwgbGVuLCBuZXdTdGF0ZSwgZXhwZWN0ZWQ7XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBzdGF0ZTIgPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKHRoaXMuZGVmYXVsdEFjdGlvbnNbc3RhdGUyXSkge1xuICAgICAgICAgIGFjdGlvbiA9IHRoaXMuZGVmYXVsdEFjdGlvbnNbc3RhdGUyXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoc3ltYm9sID09PSBudWxsIHx8IHR5cGVvZiBzeW1ib2wgPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgc3ltYm9sID0gbGV4KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGFjdGlvbiA9IHRhYmxlW3N0YXRlMl0gJiYgdGFibGVbc3RhdGUyXVtzeW1ib2xdO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSBcInVuZGVmaW5lZFwiIHx8ICFhY3Rpb24ubGVuZ3RoIHx8ICFhY3Rpb25bMF0pIHtcbiAgICAgICAgICB2YXIgZXJyU3RyID0gXCJcIjtcbiAgICAgICAgICBleHBlY3RlZCA9IFtdO1xuICAgICAgICAgIGZvciAocCBpbiB0YWJsZVtzdGF0ZTJdKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50ZXJtaW5hbHNfW3BdICYmIHAgPiBURVJST1IpIHtcbiAgICAgICAgICAgICAgZXhwZWN0ZWQucHVzaChcIidcIiArIHRoaXMudGVybWluYWxzX1twXSArIFwiJ1wiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGxleGVyMi5zaG93UG9zaXRpb24pIHtcbiAgICAgICAgICAgIGVyclN0ciA9IFwiUGFyc2UgZXJyb3Igb24gbGluZSBcIiArICh5eWxpbmVubyArIDEpICsgXCI6XFxuXCIgKyBsZXhlcjIuc2hvd1Bvc2l0aW9uKCkgKyBcIlxcbkV4cGVjdGluZyBcIiArIGV4cGVjdGVkLmpvaW4oXCIsIFwiKSArIFwiLCBnb3QgJ1wiICsgKHRoaXMudGVybWluYWxzX1tzeW1ib2xdIHx8IHN5bWJvbCkgKyBcIidcIjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXJyU3RyID0gXCJQYXJzZSBlcnJvciBvbiBsaW5lIFwiICsgKHl5bGluZW5vICsgMSkgKyBcIjogVW5leHBlY3RlZCBcIiArIChzeW1ib2wgPT0gRU9GID8gXCJlbmQgb2YgaW5wdXRcIiA6IFwiJ1wiICsgKHRoaXMudGVybWluYWxzX1tzeW1ib2xdIHx8IHN5bWJvbCkgKyBcIidcIik7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMucGFyc2VFcnJvcihlcnJTdHIsIHtcbiAgICAgICAgICAgIHRleHQ6IGxleGVyMi5tYXRjaCxcbiAgICAgICAgICAgIHRva2VuOiB0aGlzLnRlcm1pbmFsc19bc3ltYm9sXSB8fCBzeW1ib2wsXG4gICAgICAgICAgICBsaW5lOiBsZXhlcjIueXlsaW5lbm8sXG4gICAgICAgICAgICBsb2M6IHl5bG9jLFxuICAgICAgICAgICAgZXhwZWN0ZWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWN0aW9uWzBdIGluc3RhbmNlb2YgQXJyYXkgJiYgYWN0aW9uLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXJzZSBFcnJvcjogbXVsdGlwbGUgYWN0aW9ucyBwb3NzaWJsZSBhdCBzdGF0ZTogXCIgKyBzdGF0ZTIgKyBcIiwgdG9rZW46IFwiICsgc3ltYm9sKTtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKGFjdGlvblswXSkge1xuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHN0YWNrLnB1c2goc3ltYm9sKTtcbiAgICAgICAgICAgIHZzdGFjay5wdXNoKGxleGVyMi55eXRleHQpO1xuICAgICAgICAgICAgbHN0YWNrLnB1c2gobGV4ZXIyLnl5bGxvYyk7XG4gICAgICAgICAgICBzdGFjay5wdXNoKGFjdGlvblsxXSk7XG4gICAgICAgICAgICBzeW1ib2wgPSBudWxsO1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB5eWxlbmcgPSBsZXhlcjIueXlsZW5nO1xuICAgICAgICAgICAgICB5eXRleHQgPSBsZXhlcjIueXl0ZXh0O1xuICAgICAgICAgICAgICB5eWxpbmVubyA9IGxleGVyMi55eWxpbmVubztcbiAgICAgICAgICAgICAgeXlsb2MgPSBsZXhlcjIueXlsbG9jO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgbGVuID0gdGhpcy5wcm9kdWN0aW9uc19bYWN0aW9uWzFdXVsxXTtcbiAgICAgICAgICAgIHl5dmFsLiQgPSB2c3RhY2tbdnN0YWNrLmxlbmd0aCAtIGxlbl07XG4gICAgICAgICAgICB5eXZhbC5fJCA9IHtcbiAgICAgICAgICAgICAgZmlyc3RfbGluZTogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAobGVuIHx8IDEpXS5maXJzdF9saW5lLFxuICAgICAgICAgICAgICBsYXN0X2xpbmU6IGxzdGFja1tsc3RhY2subGVuZ3RoIC0gMV0ubGFzdF9saW5lLFxuICAgICAgICAgICAgICBmaXJzdF9jb2x1bW46IGxzdGFja1tsc3RhY2subGVuZ3RoIC0gKGxlbiB8fCAxKV0uZmlyc3RfY29sdW1uLFxuICAgICAgICAgICAgICBsYXN0X2NvbHVtbjogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAxXS5sYXN0X2NvbHVtblxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChyYW5nZXMpIHtcbiAgICAgICAgICAgICAgeXl2YWwuXyQucmFuZ2UgPSBbXG4gICAgICAgICAgICAgICAgbHN0YWNrW2xzdGFjay5sZW5ndGggLSAobGVuIHx8IDEpXS5yYW5nZVswXSxcbiAgICAgICAgICAgICAgICBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIDFdLnJhbmdlWzFdXG4gICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByID0gdGhpcy5wZXJmb3JtQWN0aW9uLmFwcGx5KHl5dmFsLCBbXG4gICAgICAgICAgICAgIHl5dGV4dCxcbiAgICAgICAgICAgICAgeXlsZW5nLFxuICAgICAgICAgICAgICB5eWxpbmVubyxcbiAgICAgICAgICAgICAgc2hhcmVkU3RhdGUueXksXG4gICAgICAgICAgICAgIGFjdGlvblsxXSxcbiAgICAgICAgICAgICAgdnN0YWNrLFxuICAgICAgICAgICAgICBsc3RhY2tcbiAgICAgICAgICAgIF0uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICByZXR1cm4gcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsZW4pIHtcbiAgICAgICAgICAgICAgc3RhY2sgPSBzdGFjay5zbGljZSgwLCAtMSAqIGxlbiAqIDIpO1xuICAgICAgICAgICAgICB2c3RhY2sgPSB2c3RhY2suc2xpY2UoMCwgLTEgKiBsZW4pO1xuICAgICAgICAgICAgICBsc3RhY2sgPSBsc3RhY2suc2xpY2UoMCwgLTEgKiBsZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RhY2sucHVzaCh0aGlzLnByb2R1Y3Rpb25zX1thY3Rpb25bMV1dWzBdKTtcbiAgICAgICAgICAgIHZzdGFjay5wdXNoKHl5dmFsLiQpO1xuICAgICAgICAgICAgbHN0YWNrLnB1c2goeXl2YWwuXyQpO1xuICAgICAgICAgICAgbmV3U3RhdGUgPSB0YWJsZVtzdGFja1tzdGFjay5sZW5ndGggLSAyXV1bc3RhY2tbc3RhY2subGVuZ3RoIC0gMV1dO1xuICAgICAgICAgICAgc3RhY2sucHVzaChuZXdTdGF0ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9O1xuICB2YXIgbGV4ZXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbGV4ZXIyID0ge1xuICAgICAgRU9GOiAxLFxuICAgICAgcGFyc2VFcnJvcjogZnVuY3Rpb24gcGFyc2VFcnJvcihzdHIsIGhhc2gpIHtcbiAgICAgICAgaWYgKHRoaXMueXkucGFyc2VyKSB7XG4gICAgICAgICAgdGhpcy55eS5wYXJzZXIucGFyc2VFcnJvcihzdHIsIGhhc2gpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihzdHIpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gcmVzZXRzIHRoZSBsZXhlciwgc2V0cyBuZXcgaW5wdXRcbiAgICAgIHNldElucHV0OiBmdW5jdGlvbihpbnB1dCwgeXkpIHtcbiAgICAgICAgdGhpcy55eSA9IHl5IHx8IHRoaXMueXkgfHwge307XG4gICAgICAgIHRoaXMuX2lucHV0ID0gaW5wdXQ7XG4gICAgICAgIHRoaXMuX21vcmUgPSB0aGlzLl9iYWNrdHJhY2sgPSB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy55eWxpbmVubyA9IHRoaXMueXlsZW5nID0gMDtcbiAgICAgICAgdGhpcy55eXRleHQgPSB0aGlzLm1hdGNoZWQgPSB0aGlzLm1hdGNoID0gXCJcIjtcbiAgICAgICAgdGhpcy5jb25kaXRpb25TdGFjayA9IFtcIklOSVRJQUxcIl07XG4gICAgICAgIHRoaXMueXlsbG9jID0ge1xuICAgICAgICAgIGZpcnN0X2xpbmU6IDEsXG4gICAgICAgICAgZmlyc3RfY29sdW1uOiAwLFxuICAgICAgICAgIGxhc3RfbGluZTogMSxcbiAgICAgICAgICBsYXN0X2NvbHVtbjogMFxuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhbmdlcykge1xuICAgICAgICAgIHRoaXMueXlsbG9jLnJhbmdlID0gWzAsIDBdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9LFxuICAgICAgLy8gY29uc3VtZXMgYW5kIHJldHVybnMgb25lIGNoYXIgZnJvbSB0aGUgaW5wdXRcbiAgICAgIGlucHV0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGNoID0gdGhpcy5faW5wdXRbMF07XG4gICAgICAgIHRoaXMueXl0ZXh0ICs9IGNoO1xuICAgICAgICB0aGlzLnl5bGVuZysrO1xuICAgICAgICB0aGlzLm9mZnNldCsrO1xuICAgICAgICB0aGlzLm1hdGNoICs9IGNoO1xuICAgICAgICB0aGlzLm1hdGNoZWQgKz0gY2g7XG4gICAgICAgIHZhciBsaW5lcyA9IGNoLm1hdGNoKC8oPzpcXHJcXG4/fFxcbikuKi9nKTtcbiAgICAgICAgaWYgKGxpbmVzKSB7XG4gICAgICAgICAgdGhpcy55eWxpbmVubysrO1xuICAgICAgICAgIHRoaXMueXlsbG9jLmxhc3RfbGluZSsrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMueXlsbG9jLmxhc3RfY29sdW1uKys7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5yYW5nZXMpIHtcbiAgICAgICAgICB0aGlzLnl5bGxvYy5yYW5nZVsxXSsrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2lucHV0ID0gdGhpcy5faW5wdXQuc2xpY2UoMSk7XG4gICAgICAgIHJldHVybiBjaDtcbiAgICAgIH0sXG4gICAgICAvLyB1bnNoaWZ0cyBvbmUgY2hhciAob3IgYSBzdHJpbmcpIGludG8gdGhlIGlucHV0XG4gICAgICB1bnB1dDogZnVuY3Rpb24oY2gpIHtcbiAgICAgICAgdmFyIGxlbiA9IGNoLmxlbmd0aDtcbiAgICAgICAgdmFyIGxpbmVzID0gY2guc3BsaXQoLyg/Olxcclxcbj98XFxuKS9nKTtcbiAgICAgICAgdGhpcy5faW5wdXQgPSBjaCArIHRoaXMuX2lucHV0O1xuICAgICAgICB0aGlzLnl5dGV4dCA9IHRoaXMueXl0ZXh0LnN1YnN0cigwLCB0aGlzLnl5dGV4dC5sZW5ndGggLSBsZW4pO1xuICAgICAgICB0aGlzLm9mZnNldCAtPSBsZW47XG4gICAgICAgIHZhciBvbGRMaW5lcyA9IHRoaXMubWF0Y2guc3BsaXQoLyg/Olxcclxcbj98XFxuKS9nKTtcbiAgICAgICAgdGhpcy5tYXRjaCA9IHRoaXMubWF0Y2guc3Vic3RyKDAsIHRoaXMubWF0Y2gubGVuZ3RoIC0gMSk7XG4gICAgICAgIHRoaXMubWF0Y2hlZCA9IHRoaXMubWF0Y2hlZC5zdWJzdHIoMCwgdGhpcy5tYXRjaGVkLmxlbmd0aCAtIDEpO1xuICAgICAgICBpZiAobGluZXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIHRoaXMueXlsaW5lbm8gLT0gbGluZXMubGVuZ3RoIC0gMTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgciA9IHRoaXMueXlsbG9jLnJhbmdlO1xuICAgICAgICB0aGlzLnl5bGxvYyA9IHtcbiAgICAgICAgICBmaXJzdF9saW5lOiB0aGlzLnl5bGxvYy5maXJzdF9saW5lLFxuICAgICAgICAgIGxhc3RfbGluZTogdGhpcy55eWxpbmVubyArIDEsXG4gICAgICAgICAgZmlyc3RfY29sdW1uOiB0aGlzLnl5bGxvYy5maXJzdF9jb2x1bW4sXG4gICAgICAgICAgbGFzdF9jb2x1bW46IGxpbmVzID8gKGxpbmVzLmxlbmd0aCA9PT0gb2xkTGluZXMubGVuZ3RoID8gdGhpcy55eWxsb2MuZmlyc3RfY29sdW1uIDogMCkgKyBvbGRMaW5lc1tvbGRMaW5lcy5sZW5ndGggLSBsaW5lcy5sZW5ndGhdLmxlbmd0aCAtIGxpbmVzWzBdLmxlbmd0aCA6IHRoaXMueXlsbG9jLmZpcnN0X2NvbHVtbiAtIGxlblxuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhbmdlcykge1xuICAgICAgICAgIHRoaXMueXlsbG9jLnJhbmdlID0gW3JbMF0sIHJbMF0gKyB0aGlzLnl5bGVuZyAtIGxlbl07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy55eWxlbmcgPSB0aGlzLnl5dGV4dC5sZW5ndGg7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIC8vIFdoZW4gY2FsbGVkIGZyb20gYWN0aW9uLCBjYWNoZXMgbWF0Y2hlZCB0ZXh0IGFuZCBhcHBlbmRzIGl0IG9uIG5leHQgYWN0aW9uXG4gICAgICBtb3JlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5fbW9yZSA9IHRydWU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIC8vIFdoZW4gY2FsbGVkIGZyb20gYWN0aW9uLCBzaWduYWxzIHRoZSBsZXhlciB0aGF0IHRoaXMgcnVsZSBmYWlscyB0byBtYXRjaCB0aGUgaW5wdXQsIHNvIHRoZSBuZXh0IG1hdGNoaW5nIHJ1bGUgKHJlZ2V4KSBzaG91bGQgYmUgdGVzdGVkIGluc3RlYWQuXG4gICAgICByZWplY3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJhY2t0cmFja19sZXhlcikge1xuICAgICAgICAgIHRoaXMuX2JhY2t0cmFjayA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VFcnJvcihcIkxleGljYWwgZXJyb3Igb24gbGluZSBcIiArICh0aGlzLnl5bGluZW5vICsgMSkgKyBcIi4gWW91IGNhbiBvbmx5IGludm9rZSByZWplY3QoKSBpbiB0aGUgbGV4ZXIgd2hlbiB0aGUgbGV4ZXIgaXMgb2YgdGhlIGJhY2t0cmFja2luZyBwZXJzdWFzaW9uIChvcHRpb25zLmJhY2t0cmFja19sZXhlciA9IHRydWUpLlxcblwiICsgdGhpcy5zaG93UG9zaXRpb24oKSwge1xuICAgICAgICAgICAgdGV4dDogXCJcIixcbiAgICAgICAgICAgIHRva2VuOiBudWxsLFxuICAgICAgICAgICAgbGluZTogdGhpcy55eWxpbmVub1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIC8vIHJldGFpbiBmaXJzdCBuIGNoYXJhY3RlcnMgb2YgdGhlIG1hdGNoXG4gICAgICBsZXNzOiBmdW5jdGlvbihuKSB7XG4gICAgICAgIHRoaXMudW5wdXQodGhpcy5tYXRjaC5zbGljZShuKSk7XG4gICAgICB9LFxuICAgICAgLy8gZGlzcGxheXMgYWxyZWFkeSBtYXRjaGVkIGlucHV0LCBpLmUuIGZvciBlcnJvciBtZXNzYWdlc1xuICAgICAgcGFzdElucHV0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHBhc3QgPSB0aGlzLm1hdGNoZWQuc3Vic3RyKDAsIHRoaXMubWF0Y2hlZC5sZW5ndGggLSB0aGlzLm1hdGNoLmxlbmd0aCk7XG4gICAgICAgIHJldHVybiAocGFzdC5sZW5ndGggPiAyMCA/IFwiLi4uXCIgOiBcIlwiKSArIHBhc3Quc3Vic3RyKC0yMCkucmVwbGFjZSgvXFxuL2csIFwiXCIpO1xuICAgICAgfSxcbiAgICAgIC8vIGRpc3BsYXlzIHVwY29taW5nIGlucHV0LCBpLmUuIGZvciBlcnJvciBtZXNzYWdlc1xuICAgICAgdXBjb21pbmdJbnB1dDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBuZXh0ID0gdGhpcy5tYXRjaDtcbiAgICAgICAgaWYgKG5leHQubGVuZ3RoIDwgMjApIHtcbiAgICAgICAgICBuZXh0ICs9IHRoaXMuX2lucHV0LnN1YnN0cigwLCAyMCAtIG5leHQubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKG5leHQuc3Vic3RyKDAsIDIwKSArIChuZXh0Lmxlbmd0aCA+IDIwID8gXCIuLi5cIiA6IFwiXCIpKS5yZXBsYWNlKC9cXG4vZywgXCJcIik7XG4gICAgICB9LFxuICAgICAgLy8gZGlzcGxheXMgdGhlIGNoYXJhY3RlciBwb3NpdGlvbiB3aGVyZSB0aGUgbGV4aW5nIGVycm9yIG9jY3VycmVkLCBpLmUuIGZvciBlcnJvciBtZXNzYWdlc1xuICAgICAgc2hvd1Bvc2l0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHByZSA9IHRoaXMucGFzdElucHV0KCk7XG4gICAgICAgIHZhciBjID0gbmV3IEFycmF5KHByZS5sZW5ndGggKyAxKS5qb2luKFwiLVwiKTtcbiAgICAgICAgcmV0dXJuIHByZSArIHRoaXMudXBjb21pbmdJbnB1dCgpICsgXCJcXG5cIiArIGMgKyBcIl5cIjtcbiAgICAgIH0sXG4gICAgICAvLyB0ZXN0IHRoZSBsZXhlZCB0b2tlbjogcmV0dXJuIEZBTFNFIHdoZW4gbm90IGEgbWF0Y2gsIG90aGVyd2lzZSByZXR1cm4gdG9rZW5cbiAgICAgIHRlc3RfbWF0Y2g6IGZ1bmN0aW9uKG1hdGNoLCBpbmRleGVkX3J1bGUpIHtcbiAgICAgICAgdmFyIHRva2VuLCBsaW5lcywgYmFja3VwO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmJhY2t0cmFja19sZXhlcikge1xuICAgICAgICAgIGJhY2t1cCA9IHtcbiAgICAgICAgICAgIHl5bGluZW5vOiB0aGlzLnl5bGluZW5vLFxuICAgICAgICAgICAgeXlsbG9jOiB7XG4gICAgICAgICAgICAgIGZpcnN0X2xpbmU6IHRoaXMueXlsbG9jLmZpcnN0X2xpbmUsXG4gICAgICAgICAgICAgIGxhc3RfbGluZTogdGhpcy5sYXN0X2xpbmUsXG4gICAgICAgICAgICAgIGZpcnN0X2NvbHVtbjogdGhpcy55eWxsb2MuZmlyc3RfY29sdW1uLFxuICAgICAgICAgICAgICBsYXN0X2NvbHVtbjogdGhpcy55eWxsb2MubGFzdF9jb2x1bW5cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB5eXRleHQ6IHRoaXMueXl0ZXh0LFxuICAgICAgICAgICAgbWF0Y2g6IHRoaXMubWF0Y2gsXG4gICAgICAgICAgICBtYXRjaGVzOiB0aGlzLm1hdGNoZXMsXG4gICAgICAgICAgICBtYXRjaGVkOiB0aGlzLm1hdGNoZWQsXG4gICAgICAgICAgICB5eWxlbmc6IHRoaXMueXlsZW5nLFxuICAgICAgICAgICAgb2Zmc2V0OiB0aGlzLm9mZnNldCxcbiAgICAgICAgICAgIF9tb3JlOiB0aGlzLl9tb3JlLFxuICAgICAgICAgICAgX2lucHV0OiB0aGlzLl9pbnB1dCxcbiAgICAgICAgICAgIHl5OiB0aGlzLnl5LFxuICAgICAgICAgICAgY29uZGl0aW9uU3RhY2s6IHRoaXMuY29uZGl0aW9uU3RhY2suc2xpY2UoMCksXG4gICAgICAgICAgICBkb25lOiB0aGlzLmRvbmVcbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB7XG4gICAgICAgICAgICBiYWNrdXAueXlsbG9jLnJhbmdlID0gdGhpcy55eWxsb2MucmFuZ2Uuc2xpY2UoMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxpbmVzID0gbWF0Y2hbMF0ubWF0Y2goLyg/Olxcclxcbj98XFxuKS4qL2cpO1xuICAgICAgICBpZiAobGluZXMpIHtcbiAgICAgICAgICB0aGlzLnl5bGluZW5vICs9IGxpbmVzLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnl5bGxvYyA9IHtcbiAgICAgICAgICBmaXJzdF9saW5lOiB0aGlzLnl5bGxvYy5sYXN0X2xpbmUsXG4gICAgICAgICAgbGFzdF9saW5lOiB0aGlzLnl5bGluZW5vICsgMSxcbiAgICAgICAgICBmaXJzdF9jb2x1bW46IHRoaXMueXlsbG9jLmxhc3RfY29sdW1uLFxuICAgICAgICAgIGxhc3RfY29sdW1uOiBsaW5lcyA/IGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLmxlbmd0aCAtIGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLm1hdGNoKC9cXHI/XFxuPy8pWzBdLmxlbmd0aCA6IHRoaXMueXlsbG9jLmxhc3RfY29sdW1uICsgbWF0Y2hbMF0ubGVuZ3RoXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMueXl0ZXh0ICs9IG1hdGNoWzBdO1xuICAgICAgICB0aGlzLm1hdGNoICs9IG1hdGNoWzBdO1xuICAgICAgICB0aGlzLm1hdGNoZXMgPSBtYXRjaDtcbiAgICAgICAgdGhpcy55eWxlbmcgPSB0aGlzLnl5dGV4dC5sZW5ndGg7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB7XG4gICAgICAgICAgdGhpcy55eWxsb2MucmFuZ2UgPSBbdGhpcy5vZmZzZXQsIHRoaXMub2Zmc2V0ICs9IHRoaXMueXlsZW5nXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9tb3JlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2JhY2t0cmFjayA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9pbnB1dCA9IHRoaXMuX2lucHV0LnNsaWNlKG1hdGNoWzBdLmxlbmd0aCk7XG4gICAgICAgIHRoaXMubWF0Y2hlZCArPSBtYXRjaFswXTtcbiAgICAgICAgdG9rZW4gPSB0aGlzLnBlcmZvcm1BY3Rpb24uY2FsbCh0aGlzLCB0aGlzLnl5LCB0aGlzLCBpbmRleGVkX3J1bGUsIHRoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggLSAxXSk7XG4gICAgICAgIGlmICh0aGlzLmRvbmUgJiYgdGhpcy5faW5wdXQpIHtcbiAgICAgICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYmFja3RyYWNrKSB7XG4gICAgICAgICAgZm9yICh2YXIgayBpbiBiYWNrdXApIHtcbiAgICAgICAgICAgIHRoaXNba10gPSBiYWNrdXBba107XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9LFxuICAgICAgLy8gcmV0dXJuIG5leHQgbWF0Y2ggaW4gaW5wdXRcbiAgICAgIG5leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuRU9GO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5faW5wdXQpIHtcbiAgICAgICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b2tlbiwgbWF0Y2gsIHRlbXBNYXRjaCwgaW5kZXg7XG4gICAgICAgIGlmICghdGhpcy5fbW9yZSkge1xuICAgICAgICAgIHRoaXMueXl0ZXh0ID0gXCJcIjtcbiAgICAgICAgICB0aGlzLm1hdGNoID0gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcnVsZXMgPSB0aGlzLl9jdXJyZW50UnVsZXMoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHRlbXBNYXRjaCA9IHRoaXMuX2lucHV0Lm1hdGNoKHRoaXMucnVsZXNbcnVsZXNbaV1dKTtcbiAgICAgICAgICBpZiAodGVtcE1hdGNoICYmICghbWF0Y2ggfHwgdGVtcE1hdGNoWzBdLmxlbmd0aCA+IG1hdGNoWzBdLmxlbmd0aCkpIHtcbiAgICAgICAgICAgIG1hdGNoID0gdGVtcE1hdGNoO1xuICAgICAgICAgICAgaW5kZXggPSBpO1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iYWNrdHJhY2tfbGV4ZXIpIHtcbiAgICAgICAgICAgICAgdG9rZW4gPSB0aGlzLnRlc3RfbWF0Y2godGVtcE1hdGNoLCBydWxlc1tpXSk7XG4gICAgICAgICAgICAgIGlmICh0b2tlbiAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5fYmFja3RyYWNrKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2ggPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIXRoaXMub3B0aW9ucy5mbGV4KSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICB0b2tlbiA9IHRoaXMudGVzdF9tYXRjaChtYXRjaCwgcnVsZXNbaW5kZXhdKTtcbiAgICAgICAgICBpZiAodG9rZW4gIT09IGZhbHNlKSB7XG4gICAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5faW5wdXQgPT09IFwiXCIpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5FT0Y7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VFcnJvcihcIkxleGljYWwgZXJyb3Igb24gbGluZSBcIiArICh0aGlzLnl5bGluZW5vICsgMSkgKyBcIi4gVW5yZWNvZ25pemVkIHRleHQuXFxuXCIgKyB0aGlzLnNob3dQb3NpdGlvbigpLCB7XG4gICAgICAgICAgICB0ZXh0OiBcIlwiLFxuICAgICAgICAgICAgdG9rZW46IG51bGwsXG4gICAgICAgICAgICBsaW5lOiB0aGlzLnl5bGluZW5vXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyByZXR1cm4gbmV4dCBtYXRjaCB0aGF0IGhhcyBhIHRva2VuXG4gICAgICBsZXg6IGZ1bmN0aW9uIGxleCgpIHtcbiAgICAgICAgdmFyIHIgPSB0aGlzLm5leHQoKTtcbiAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICByZXR1cm4gcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5sZXgoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIGFjdGl2YXRlcyBhIG5ldyBsZXhlciBjb25kaXRpb24gc3RhdGUgKHB1c2hlcyB0aGUgbmV3IGxleGVyIGNvbmRpdGlvbiBzdGF0ZSBvbnRvIHRoZSBjb25kaXRpb24gc3RhY2spXG4gICAgICBiZWdpbjogZnVuY3Rpb24gYmVnaW4oY29uZGl0aW9uKSB7XG4gICAgICAgIHRoaXMuY29uZGl0aW9uU3RhY2sucHVzaChjb25kaXRpb24pO1xuICAgICAgfSxcbiAgICAgIC8vIHBvcCB0aGUgcHJldmlvdXNseSBhY3RpdmUgbGV4ZXIgY29uZGl0aW9uIHN0YXRlIG9mZiB0aGUgY29uZGl0aW9uIHN0YWNrXG4gICAgICBwb3BTdGF0ZTogZnVuY3Rpb24gcG9wU3RhdGUoKSB7XG4gICAgICAgIHZhciBuID0gdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggLSAxO1xuICAgICAgICBpZiAobiA+IDApIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFjay5wb3AoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFja1swXTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIHByb2R1Y2UgdGhlIGxleGVyIHJ1bGUgc2V0IHdoaWNoIGlzIGFjdGl2ZSBmb3IgdGhlIGN1cnJlbnRseSBhY3RpdmUgbGV4ZXIgY29uZGl0aW9uIHN0YXRlXG4gICAgICBfY3VycmVudFJ1bGVzOiBmdW5jdGlvbiBfY3VycmVudFJ1bGVzKCkge1xuICAgICAgICBpZiAodGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggJiYgdGhpcy5jb25kaXRpb25TdGFja1t0aGlzLmNvbmRpdGlvblN0YWNrLmxlbmd0aCAtIDFdKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uc1t0aGlzLmNvbmRpdGlvblN0YWNrW3RoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMV1dLnJ1bGVzO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB0aGlzLmNvbmRpdGlvbnNbXCJJTklUSUFMXCJdLnJ1bGVzO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gcmV0dXJuIHRoZSBjdXJyZW50bHkgYWN0aXZlIGxleGVyIGNvbmRpdGlvbiBzdGF0ZTsgd2hlbiBhbiBpbmRleCBhcmd1bWVudCBpcyBwcm92aWRlZCBpdCBwcm9kdWNlcyB0aGUgTi10aCBwcmV2aW91cyBjb25kaXRpb24gc3RhdGUsIGlmIGF2YWlsYWJsZVxuICAgICAgdG9wU3RhdGU6IGZ1bmN0aW9uIHRvcFN0YXRlKG4pIHtcbiAgICAgICAgbiA9IHRoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMSAtIE1hdGguYWJzKG4gfHwgMCk7XG4gICAgICAgIGlmIChuID49IDApIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFja1tuXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gXCJJTklUSUFMXCI7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyBhbGlhcyBmb3IgYmVnaW4oY29uZGl0aW9uKVxuICAgICAgcHVzaFN0YXRlOiBmdW5jdGlvbiBwdXNoU3RhdGUoY29uZGl0aW9uKSB7XG4gICAgICAgIHRoaXMuYmVnaW4oY29uZGl0aW9uKTtcbiAgICAgIH0sXG4gICAgICAvLyByZXR1cm4gdGhlIG51bWJlciBvZiBzdGF0ZXMgY3VycmVudGx5IG9uIHRoZSBzdGFja1xuICAgICAgc3RhdGVTdGFja1NpemU6IGZ1bmN0aW9uIHN0YXRlU3RhY2tTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGg7XG4gICAgICB9LFxuICAgICAgb3B0aW9uczogeyBcImNhc2UtaW5zZW5zaXRpdmVcIjogdHJ1ZSB9LFxuICAgICAgcGVyZm9ybUFjdGlvbjogZnVuY3Rpb24gYW5vbnltb3VzKHl5LCB5eV8sICRhdm9pZGluZ19uYW1lX2NvbGxpc2lvbnMsIFlZX1NUQVJUKSB7XG4gICAgICAgIHN3aXRjaCAoJGF2b2lkaW5nX25hbWVfY29sbGlzaW9ucykge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHJldHVybiA1O1xuICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgIHJldHVybiAxOTtcbiAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiAxNDtcbiAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiSURcIik7XG4gICAgICAgICAgICByZXR1cm4gNTA7XG4gICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgdGhpcy5iZWdpbihcIklEXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDUyO1xuICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICByZXR1cm4gMTM7XG4gICAgICAgICAgY2FzZSAxMTpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJJRFwiKTtcbiAgICAgICAgICAgIHJldHVybiA1MztcbiAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgeXlfLnl5dGV4dCA9IHl5Xy55eXRleHQudHJpbSgpO1xuICAgICAgICAgICAgdGhpcy5iZWdpbihcIkFMSUFTXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDcwO1xuICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiA1MTtcbiAgICAgICAgICBjYXNlIDE0OlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIDU7XG4gICAgICAgICAgY2FzZSAxNTpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJMSU5FXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM2O1xuICAgICAgICAgIGNhc2UgMTY6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiAzNztcbiAgICAgICAgICBjYXNlIDE3OlxuICAgICAgICAgICAgdGhpcy5iZWdpbihcIkxJTkVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzg7XG4gICAgICAgICAgY2FzZSAxODpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJMSU5FXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDM5O1xuICAgICAgICAgIGNhc2UgMTk6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiA0OTtcbiAgICAgICAgICBjYXNlIDIwOlxuICAgICAgICAgICAgdGhpcy5iZWdpbihcIkxJTkVcIik7XG4gICAgICAgICAgICByZXR1cm4gNDE7XG4gICAgICAgICAgY2FzZSAyMTpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJMSU5FXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDQzO1xuICAgICAgICAgIGNhc2UgMjI6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiA0ODtcbiAgICAgICAgICBjYXNlIDIzOlxuICAgICAgICAgICAgdGhpcy5iZWdpbihcIkxJTkVcIik7XG4gICAgICAgICAgICByZXR1cm4gNDQ7XG4gICAgICAgICAgY2FzZSAyNDpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJMSU5FXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDQ3O1xuICAgICAgICAgIGNhc2UgMjU6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiTElORVwiKTtcbiAgICAgICAgICAgIHJldHVybiA0NjtcbiAgICAgICAgICBjYXNlIDI2OlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIDE1O1xuICAgICAgICAgIGNhc2UgMjc6XG4gICAgICAgICAgICByZXR1cm4gMTY7XG4gICAgICAgICAgY2FzZSAyODpcbiAgICAgICAgICAgIHJldHVybiA2NTtcbiAgICAgICAgICBjYXNlIDI5OlxuICAgICAgICAgICAgcmV0dXJuIDY2O1xuICAgICAgICAgIGNhc2UgMzA6XG4gICAgICAgICAgICByZXR1cm4gNTk7XG4gICAgICAgICAgY2FzZSAzMTpcbiAgICAgICAgICAgIHJldHVybiA2MDtcbiAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgcmV0dXJuIDYxO1xuICAgICAgICAgIGNhc2UgMzM6XG4gICAgICAgICAgICByZXR1cm4gNjI7XG4gICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgIHJldHVybiA1NztcbiAgICAgICAgICBjYXNlIDM1OlxuICAgICAgICAgICAgcmV0dXJuIDU0O1xuICAgICAgICAgIGNhc2UgMzY6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiSURcIik7XG4gICAgICAgICAgICByZXR1cm4gMjE7XG4gICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJJRFwiKTtcbiAgICAgICAgICAgIHJldHVybiAyMztcbiAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgcmV0dXJuIDI5O1xuICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICByZXR1cm4gMzA7XG4gICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJhY2NfdGl0bGVcIik7XG4gICAgICAgICAgICByZXR1cm4gMzE7XG4gICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBcImFjY190aXRsZV92YWx1ZVwiO1xuICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICB0aGlzLmJlZ2luKFwiYWNjX2Rlc2NyXCIpO1xuICAgICAgICAgICAgcmV0dXJuIDMzO1xuICAgICAgICAgIGNhc2UgNDM6XG4gICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICByZXR1cm4gXCJhY2NfZGVzY3JfdmFsdWVcIjtcbiAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgdGhpcy5iZWdpbihcImFjY19kZXNjcl9tdWx0aWxpbmVcIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSA0NjpcbiAgICAgICAgICAgIHJldHVybiBcImFjY19kZXNjcl9tdWx0aWxpbmVfdmFsdWVcIjtcbiAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgcmV0dXJuIDY7XG4gICAgICAgICAgY2FzZSA0ODpcbiAgICAgICAgICAgIHJldHVybiAxODtcbiAgICAgICAgICBjYXNlIDQ5OlxuICAgICAgICAgICAgcmV0dXJuIDIwO1xuICAgICAgICAgIGNhc2UgNTA6XG4gICAgICAgICAgICByZXR1cm4gNjQ7XG4gICAgICAgICAgY2FzZSA1MTpcbiAgICAgICAgICAgIHJldHVybiA1O1xuICAgICAgICAgIGNhc2UgNTI6XG4gICAgICAgICAgICB5eV8ueXl0ZXh0ID0geXlfLnl5dGV4dC50cmltKCk7XG4gICAgICAgICAgICByZXR1cm4gNzA7XG4gICAgICAgICAgY2FzZSA1MzpcbiAgICAgICAgICAgIHJldHVybiA3MztcbiAgICAgICAgICBjYXNlIDU0OlxuICAgICAgICAgICAgcmV0dXJuIDc0O1xuICAgICAgICAgIGNhc2UgNTU6XG4gICAgICAgICAgICByZXR1cm4gNzE7XG4gICAgICAgICAgY2FzZSA1NjpcbiAgICAgICAgICAgIHJldHVybiA3MjtcbiAgICAgICAgICBjYXNlIDU3OlxuICAgICAgICAgICAgcmV0dXJuIDc1O1xuICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICByZXR1cm4gNzY7XG4gICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIHJldHVybiA3NztcbiAgICAgICAgICBjYXNlIDYwOlxuICAgICAgICAgICAgcmV0dXJuIDc4O1xuICAgICAgICAgIGNhc2UgNjE6XG4gICAgICAgICAgICByZXR1cm4gNzk7XG4gICAgICAgICAgY2FzZSA2MjpcbiAgICAgICAgICAgIHJldHVybiA2ODtcbiAgICAgICAgICBjYXNlIDYzOlxuICAgICAgICAgICAgcmV0dXJuIDY5O1xuICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICByZXR1cm4gNTtcbiAgICAgICAgICBjYXNlIDY1OlxuICAgICAgICAgICAgcmV0dXJuIFwiSU5WQUxJRFwiO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcnVsZXM6IFsvXig/OltcXG5dKykvaSwgL14oPzpcXHMrKS9pLCAvXig/OigoPyFcXG4pXFxzKSspL2ksIC9eKD86I1teXFxuXSopL2ksIC9eKD86JSg/IVxceylbXlxcbl0qKS9pLCAvXig/OlteXFx9XSUlW15cXG5dKikvaSwgL14oPzpbMC05XSsoPz1bIFxcbl0rKSkvaSwgL14oPzpib3hcXGIpL2ksIC9eKD86cGFydGljaXBhbnRcXGIpL2ksIC9eKD86YWN0b3JcXGIpL2ksIC9eKD86Y3JlYXRlXFxiKS9pLCAvXig/OmRlc3Ryb3lcXGIpL2ksIC9eKD86W15cXC0+Olxcbiw7XSs/KFtcXC1dKlteXFwtPjpcXG4sO10rPykqPyg/PSgoPyFcXG4pXFxzKSthcyg/IVxcbilcXHN8WyNcXG47XXwkKSkvaSwgL14oPzphc1xcYikvaSwgL14oPzooPzopKS9pLCAvXig/Omxvb3BcXGIpL2ksIC9eKD86cmVjdFxcYikvaSwgL14oPzpvcHRcXGIpL2ksIC9eKD86YWx0XFxiKS9pLCAvXig/OmVsc2VcXGIpL2ksIC9eKD86cGFyXFxiKS9pLCAvXig/OnBhcl9vdmVyXFxiKS9pLCAvXig/OmFuZFxcYikvaSwgL14oPzpjcml0aWNhbFxcYikvaSwgL14oPzpvcHRpb25cXGIpL2ksIC9eKD86YnJlYWtcXGIpL2ksIC9eKD86KD86WzpdPyg/Om5vKT93cmFwKT9bXiNcXG47XSopL2ksIC9eKD86ZW5kXFxiKS9pLCAvXig/OmxlZnQgb2ZcXGIpL2ksIC9eKD86cmlnaHQgb2ZcXGIpL2ksIC9eKD86bGlua3NcXGIpL2ksIC9eKD86bGlua1xcYikvaSwgL14oPzpwcm9wZXJ0aWVzXFxiKS9pLCAvXig/OmRldGFpbHNcXGIpL2ksIC9eKD86b3ZlclxcYikvaSwgL14oPzpub3RlXFxiKS9pLCAvXig/OmFjdGl2YXRlXFxiKS9pLCAvXig/OmRlYWN0aXZhdGVcXGIpL2ksIC9eKD86dGl0bGVcXHNbXiNcXG47XSspL2ksIC9eKD86dGl0bGU6XFxzW14jXFxuO10rKS9pLCAvXig/OmFjY1RpdGxlXFxzKjpcXHMqKS9pLCAvXig/Oig/IVxcbnx8KSpbXlxcbl0qKS9pLCAvXig/OmFjY0Rlc2NyXFxzKjpcXHMqKS9pLCAvXig/Oig/IVxcbnx8KSpbXlxcbl0qKS9pLCAvXig/OmFjY0Rlc2NyXFxzKlxce1xccyopL2ksIC9eKD86W1xcfV0pL2ksIC9eKD86W15cXH1dKikvaSwgL14oPzpzZXF1ZW5jZURpYWdyYW1cXGIpL2ksIC9eKD86YXV0b251bWJlclxcYikvaSwgL14oPzpvZmZcXGIpL2ksIC9eKD86LCkvaSwgL14oPzo7KS9pLCAvXig/OlteXFwrXFwtPjpcXG4sO10rKCg/ISgteHwtLXh8LVxcKXwtLVxcKSkpW1xcLV0qW15cXCtcXC0+Olxcbiw7XSspKikvaSwgL14oPzotPj4pL2ksIC9eKD86LS0+PikvaSwgL14oPzotPikvaSwgL14oPzotLT4pL2ksIC9eKD86LVt4XSkvaSwgL14oPzotLVt4XSkvaSwgL14oPzotW1xcKV0pL2ksIC9eKD86LS1bXFwpXSkvaSwgL14oPzo6KD86KD86bm8pP3dyYXApP1teI1xcbjtdKykvaSwgL14oPzpcXCspL2ksIC9eKD86LSkvaSwgL14oPzokKS9pLCAvXig/Oi4pL2ldLFxuICAgICAgY29uZGl0aW9uczogeyBcImFjY19kZXNjcl9tdWx0aWxpbmVcIjogeyBcInJ1bGVzXCI6IFs0NSwgNDZdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcImFjY19kZXNjclwiOiB7IFwicnVsZXNcIjogWzQzXSwgXCJpbmNsdXNpdmVcIjogZmFsc2UgfSwgXCJhY2NfdGl0bGVcIjogeyBcInJ1bGVzXCI6IFs0MV0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiSURcIjogeyBcInJ1bGVzXCI6IFsyLCAzLCAxMl0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiQUxJQVNcIjogeyBcInJ1bGVzXCI6IFsyLCAzLCAxMywgMTRdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcIkxJTkVcIjogeyBcInJ1bGVzXCI6IFsyLCAzLCAyNl0sIFwiaW5jbHVzaXZlXCI6IGZhbHNlIH0sIFwiSU5JVElBTFwiOiB7IFwicnVsZXNcIjogWzAsIDEsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTUsIDE2LCAxNywgMTgsIDE5LCAyMCwgMjEsIDIyLCAyMywgMjQsIDI1LCAyNywgMjgsIDI5LCAzMCwgMzEsIDMyLCAzMywgMzQsIDM1LCAzNiwgMzcsIDM4LCAzOSwgNDAsIDQyLCA0NCwgNDcsIDQ4LCA0OSwgNTAsIDUxLCA1MiwgNTMsIDU0LCA1NSwgNTYsIDU3LCA1OCwgNTksIDYwLCA2MSwgNjIsIDYzLCA2NCwgNjVdLCBcImluY2x1c2l2ZVwiOiB0cnVlIH0gfVxuICAgIH07XG4gICAgcmV0dXJuIGxleGVyMjtcbiAgfSgpO1xuICBwYXJzZXIyLmxleGVyID0gbGV4ZXI7XG4gIGZ1bmN0aW9uIFBhcnNlcigpIHtcbiAgICB0aGlzLnl5ID0ge307XG4gIH1cbiAgUGFyc2VyLnByb3RvdHlwZSA9IHBhcnNlcjI7XG4gIHBhcnNlcjIuUGFyc2VyID0gUGFyc2VyO1xuICByZXR1cm4gbmV3IFBhcnNlcigpO1xufSgpO1xucGFyc2VyLnBhcnNlciA9IHBhcnNlcjtcbmNvbnN0IHBhcnNlciQxID0gcGFyc2VyO1xuY2xhc3MgSW1wZXJhdGl2ZVN0YXRlIHtcbiAgLyoqXG4gICAqIEBwYXJhbSBpbml0IC0gRnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZSBkZWZhdWx0IHN0YXRlLlxuICAgKi9cbiAgY29uc3RydWN0b3IoaW5pdCkge1xuICAgIHRoaXMuaW5pdCA9IGluaXQ7XG4gICAgdGhpcy5yZWNvcmRzID0gdGhpcy5pbml0KCk7XG4gIH1cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5yZWNvcmRzID0gdGhpcy5pbml0KCk7XG4gIH1cbn1cbmNvbnN0IHN0YXRlID0gbmV3IEltcGVyYXRpdmVTdGF0ZSgoKSA9PiAoe1xuICBwcmV2QWN0b3I6IHZvaWQgMCxcbiAgYWN0b3JzOiB7fSxcbiAgY3JlYXRlZEFjdG9yczoge30sXG4gIGRlc3Ryb3llZEFjdG9yczoge30sXG4gIGJveGVzOiBbXSxcbiAgbWVzc2FnZXM6IFtdLFxuICBub3RlczogW10sXG4gIHNlcXVlbmNlTnVtYmVyc0VuYWJsZWQ6IGZhbHNlLFxuICB3cmFwRW5hYmxlZDogdm9pZCAwLFxuICBjdXJyZW50Qm94OiB2b2lkIDAsXG4gIGxhc3RDcmVhdGVkOiB2b2lkIDAsXG4gIGxhc3REZXN0cm95ZWQ6IHZvaWQgMFxufSkpO1xuY29uc3QgYWRkQm94ID0gZnVuY3Rpb24oZGF0YSkge1xuICBzdGF0ZS5yZWNvcmRzLmJveGVzLnB1c2goe1xuICAgIG5hbWU6IGRhdGEudGV4dCxcbiAgICB3cmFwOiBkYXRhLndyYXAgPT09IHZvaWQgMCAmJiBhdXRvV3JhcCgpIHx8ICEhZGF0YS53cmFwLFxuICAgIGZpbGw6IGRhdGEuY29sb3IsXG4gICAgYWN0b3JLZXlzOiBbXVxuICB9KTtcbiAgc3RhdGUucmVjb3Jkcy5jdXJyZW50Qm94ID0gc3RhdGUucmVjb3Jkcy5ib3hlcy5zbGljZSgtMSlbMF07XG59O1xuY29uc3QgYWRkQWN0b3IgPSBmdW5jdGlvbihpZCwgbmFtZSwgZGVzY3JpcHRpb24sIHR5cGUpIHtcbiAgbGV0IGFzc2lnbmVkQm94ID0gc3RhdGUucmVjb3Jkcy5jdXJyZW50Qm94O1xuICBjb25zdCBvbGQgPSBzdGF0ZS5yZWNvcmRzLmFjdG9yc1tpZF07XG4gIGlmIChvbGQpIHtcbiAgICBpZiAoc3RhdGUucmVjb3Jkcy5jdXJyZW50Qm94ICYmIG9sZC5ib3ggJiYgc3RhdGUucmVjb3Jkcy5jdXJyZW50Qm94ICE9PSBvbGQuYm94KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiQSBzYW1lIHBhcnRpY2lwYW50IHNob3VsZCBvbmx5IGJlIGRlZmluZWQgaW4gb25lIEJveDogXCIgKyBvbGQubmFtZSArIFwiIGNhbid0IGJlIGluICdcIiArIG9sZC5ib3gubmFtZSArIFwiJyBhbmQgaW4gJ1wiICsgc3RhdGUucmVjb3Jkcy5jdXJyZW50Qm94Lm5hbWUgKyBcIicgYXQgdGhlIHNhbWUgdGltZS5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgYXNzaWduZWRCb3ggPSBvbGQuYm94ID8gb2xkLmJveCA6IHN0YXRlLnJlY29yZHMuY3VycmVudEJveDtcbiAgICBvbGQuYm94ID0gYXNzaWduZWRCb3g7XG4gICAgaWYgKG9sZCAmJiBuYW1lID09PSBvbGQubmFtZSAmJiBkZXNjcmlwdGlvbiA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGlmIChkZXNjcmlwdGlvbiA9PSBudWxsIHx8IGRlc2NyaXB0aW9uLnRleHQgPT0gbnVsbCkge1xuICAgIGRlc2NyaXB0aW9uID0geyB0ZXh0OiBuYW1lLCB3cmFwOiBudWxsLCB0eXBlIH07XG4gIH1cbiAgaWYgKHR5cGUgPT0gbnVsbCB8fCBkZXNjcmlwdGlvbi50ZXh0ID09IG51bGwpIHtcbiAgICBkZXNjcmlwdGlvbiA9IHsgdGV4dDogbmFtZSwgd3JhcDogbnVsbCwgdHlwZSB9O1xuICB9XG4gIHN0YXRlLnJlY29yZHMuYWN0b3JzW2lkXSA9IHtcbiAgICBib3g6IGFzc2lnbmVkQm94LFxuICAgIG5hbWUsXG4gICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLnRleHQsXG4gICAgd3JhcDogZGVzY3JpcHRpb24ud3JhcCA9PT0gdm9pZCAwICYmIGF1dG9XcmFwKCkgfHwgISFkZXNjcmlwdGlvbi53cmFwLFxuICAgIHByZXZBY3Rvcjogc3RhdGUucmVjb3Jkcy5wcmV2QWN0b3IsXG4gICAgbGlua3M6IHt9LFxuICAgIHByb3BlcnRpZXM6IHt9LFxuICAgIGFjdG9yQ250OiBudWxsLFxuICAgIHJlY3REYXRhOiBudWxsLFxuICAgIHR5cGU6IHR5cGUgfHwgXCJwYXJ0aWNpcGFudFwiXG4gIH07XG4gIGlmIChzdGF0ZS5yZWNvcmRzLnByZXZBY3RvciAmJiBzdGF0ZS5yZWNvcmRzLmFjdG9yc1tzdGF0ZS5yZWNvcmRzLnByZXZBY3Rvcl0pIHtcbiAgICBzdGF0ZS5yZWNvcmRzLmFjdG9yc1tzdGF0ZS5yZWNvcmRzLnByZXZBY3Rvcl0ubmV4dEFjdG9yID0gaWQ7XG4gIH1cbiAgaWYgKHN0YXRlLnJlY29yZHMuY3VycmVudEJveCkge1xuICAgIHN0YXRlLnJlY29yZHMuY3VycmVudEJveC5hY3RvcktleXMucHVzaChpZCk7XG4gIH1cbiAgc3RhdGUucmVjb3Jkcy5wcmV2QWN0b3IgPSBpZDtcbn07XG5jb25zdCBhY3RpdmF0aW9uQ291bnQgPSAocGFydCkgPT4ge1xuICBsZXQgaTtcbiAgbGV0IGNvdW50ID0gMDtcbiAgZm9yIChpID0gMDsgaSA8IHN0YXRlLnJlY29yZHMubWVzc2FnZXMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3RhdGUucmVjb3Jkcy5tZXNzYWdlc1tpXS50eXBlID09PSBMSU5FVFlQRS5BQ1RJVkVfU1RBUlQgJiYgc3RhdGUucmVjb3Jkcy5tZXNzYWdlc1tpXS5mcm9tLmFjdG9yID09PSBwYXJ0KSB7XG4gICAgICBjb3VudCsrO1xuICAgIH1cbiAgICBpZiAoc3RhdGUucmVjb3Jkcy5tZXNzYWdlc1tpXS50eXBlID09PSBMSU5FVFlQRS5BQ1RJVkVfRU5EICYmIHN0YXRlLnJlY29yZHMubWVzc2FnZXNbaV0uZnJvbS5hY3RvciA9PT0gcGFydCkge1xuICAgICAgY291bnQtLTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNvdW50O1xufTtcbmNvbnN0IGFkZE1lc3NhZ2UgPSBmdW5jdGlvbihpZEZyb20sIGlkVG8sIG1lc3NhZ2UsIGFuc3dlcikge1xuICBzdGF0ZS5yZWNvcmRzLm1lc3NhZ2VzLnB1c2goe1xuICAgIGZyb206IGlkRnJvbSxcbiAgICB0bzogaWRUbyxcbiAgICBtZXNzYWdlOiBtZXNzYWdlLnRleHQsXG4gICAgd3JhcDogbWVzc2FnZS53cmFwID09PSB2b2lkIDAgJiYgYXV0b1dyYXAoKSB8fCAhIW1lc3NhZ2Uud3JhcCxcbiAgICBhbnN3ZXJcbiAgfSk7XG59O1xuY29uc3QgYWRkU2lnbmFsID0gZnVuY3Rpb24oaWRGcm9tLCBpZFRvLCBtZXNzYWdlID0geyB0ZXh0OiB2b2lkIDAsIHdyYXA6IHZvaWQgMCB9LCBtZXNzYWdlVHlwZSwgYWN0aXZhdGUgPSBmYWxzZSkge1xuICBpZiAobWVzc2FnZVR5cGUgPT09IExJTkVUWVBFLkFDVElWRV9FTkQpIHtcbiAgICBjb25zdCBjbnQgPSBhY3RpdmF0aW9uQ291bnQoaWRGcm9tLmFjdG9yKTtcbiAgICBpZiAoY250IDwgMSkge1xuICAgICAgbGV0IGVycm9yID0gbmV3IEVycm9yKFwiVHJ5aW5nIHRvIGluYWN0aXZhdGUgYW4gaW5hY3RpdmUgcGFydGljaXBhbnQgKFwiICsgaWRGcm9tLmFjdG9yICsgXCIpXCIpO1xuICAgICAgZXJyb3IuaGFzaCA9IHtcbiAgICAgICAgdGV4dDogXCItPj4tXCIsXG4gICAgICAgIHRva2VuOiBcIi0+Pi1cIixcbiAgICAgICAgbGluZTogXCIxXCIsXG4gICAgICAgIGxvYzogeyBmaXJzdF9saW5lOiAxLCBsYXN0X2xpbmU6IDEsIGZpcnN0X2NvbHVtbjogMSwgbGFzdF9jb2x1bW46IDEgfSxcbiAgICAgICAgZXhwZWN0ZWQ6IFtcIidBQ1RJVkVfUEFSVElDSVBBTlQnXCJdXG4gICAgICB9O1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG4gIHN0YXRlLnJlY29yZHMubWVzc2FnZXMucHVzaCh7XG4gICAgZnJvbTogaWRGcm9tLFxuICAgIHRvOiBpZFRvLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2UudGV4dCxcbiAgICB3cmFwOiBtZXNzYWdlLndyYXAgPT09IHZvaWQgMCAmJiBhdXRvV3JhcCgpIHx8ICEhbWVzc2FnZS53cmFwLFxuICAgIHR5cGU6IG1lc3NhZ2VUeXBlLFxuICAgIGFjdGl2YXRlXG4gIH0pO1xuICByZXR1cm4gdHJ1ZTtcbn07XG5jb25zdCBoYXNBdExlYXN0T25lQm94ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBzdGF0ZS5yZWNvcmRzLmJveGVzLmxlbmd0aCA+IDA7XG59O1xuY29uc3QgaGFzQXRMZWFzdE9uZUJveFdpdGhUaXRsZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gc3RhdGUucmVjb3Jkcy5ib3hlcy5zb21lKChiKSA9PiBiLm5hbWUpO1xufTtcbmNvbnN0IGdldE1lc3NhZ2VzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBzdGF0ZS5yZWNvcmRzLm1lc3NhZ2VzO1xufTtcbmNvbnN0IGdldEJveGVzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBzdGF0ZS5yZWNvcmRzLmJveGVzO1xufTtcbmNvbnN0IGdldEFjdG9ycyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gc3RhdGUucmVjb3Jkcy5hY3RvcnM7XG59O1xuY29uc3QgZ2V0Q3JlYXRlZEFjdG9ycyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gc3RhdGUucmVjb3Jkcy5jcmVhdGVkQWN0b3JzO1xufTtcbmNvbnN0IGdldERlc3Ryb3llZEFjdG9ycyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gc3RhdGUucmVjb3Jkcy5kZXN0cm95ZWRBY3RvcnM7XG59O1xuY29uc3QgZ2V0QWN0b3IgPSBmdW5jdGlvbihpZCkge1xuICByZXR1cm4gc3RhdGUucmVjb3Jkcy5hY3RvcnNbaWRdO1xufTtcbmNvbnN0IGdldEFjdG9yS2V5cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gT2JqZWN0LmtleXMoc3RhdGUucmVjb3Jkcy5hY3RvcnMpO1xufTtcbmNvbnN0IGVuYWJsZVNlcXVlbmNlTnVtYmVycyA9IGZ1bmN0aW9uKCkge1xuICBzdGF0ZS5yZWNvcmRzLnNlcXVlbmNlTnVtYmVyc0VuYWJsZWQgPSB0cnVlO1xufTtcbmNvbnN0IGRpc2FibGVTZXF1ZW5jZU51bWJlcnMgPSBmdW5jdGlvbigpIHtcbiAgc3RhdGUucmVjb3Jkcy5zZXF1ZW5jZU51bWJlcnNFbmFibGVkID0gZmFsc2U7XG59O1xuY29uc3Qgc2hvd1NlcXVlbmNlTnVtYmVycyA9ICgpID0+IHN0YXRlLnJlY29yZHMuc2VxdWVuY2VOdW1iZXJzRW5hYmxlZDtcbmNvbnN0IHNldFdyYXAgPSBmdW5jdGlvbih3cmFwU2V0dGluZykge1xuICBzdGF0ZS5yZWNvcmRzLndyYXBFbmFibGVkID0gd3JhcFNldHRpbmc7XG59O1xuY29uc3QgYXV0b1dyYXAgPSAoKSA9PiB7XG4gIGlmIChzdGF0ZS5yZWNvcmRzLndyYXBFbmFibGVkICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gc3RhdGUucmVjb3Jkcy53cmFwRW5hYmxlZDtcbiAgfVxuICByZXR1cm4gZ2V0Q29uZmlnKCkuc2VxdWVuY2Uud3JhcDtcbn07XG5jb25zdCBjbGVhciA9IGZ1bmN0aW9uKCkge1xuICBzdGF0ZS5yZXNldCgpO1xuICBjbGVhciQxKCk7XG59O1xuY29uc3QgcGFyc2VNZXNzYWdlID0gZnVuY3Rpb24oc3RyKSB7XG4gIGNvbnN0IF9zdHIgPSBzdHIudHJpbSgpO1xuICBjb25zdCBtZXNzYWdlID0ge1xuICAgIHRleHQ6IF9zdHIucmVwbGFjZSgvXjo/KD86bm8pP3dyYXA6LywgXCJcIikudHJpbSgpLFxuICAgIHdyYXA6IF9zdHIubWF0Y2goL146P3dyYXA6LykgIT09IG51bGwgPyB0cnVlIDogX3N0ci5tYXRjaCgvXjo/bm93cmFwOi8pICE9PSBudWxsID8gZmFsc2UgOiB2b2lkIDBcbiAgfTtcbiAgbG9nLmRlYnVnKFwicGFyc2VNZXNzYWdlOlwiLCBtZXNzYWdlKTtcbiAgcmV0dXJuIG1lc3NhZ2U7XG59O1xuY29uc3QgcGFyc2VCb3hEYXRhID0gZnVuY3Rpb24oc3RyKSB7XG4gIGNvbnN0IG1hdGNoID0gc3RyLm1hdGNoKC9eKCg/OnJnYmE/fGhzbGE/KVxccypcXCguKlxcKXxcXHcqKSguKikkLyk7XG4gIGxldCBjb2xvciA9IG1hdGNoICE9IG51bGwgJiYgbWF0Y2hbMV0gPyBtYXRjaFsxXS50cmltKCkgOiBcInRyYW5zcGFyZW50XCI7XG4gIGxldCB0aXRsZSA9IG1hdGNoICE9IG51bGwgJiYgbWF0Y2hbMl0gPyBtYXRjaFsyXS50cmltKCkgOiB2b2lkIDA7XG4gIGlmICh3aW5kb3cgJiYgd2luZG93LkNTUykge1xuICAgIGlmICghd2luZG93LkNTUy5zdXBwb3J0cyhcImNvbG9yXCIsIGNvbG9yKSkge1xuICAgICAgY29sb3IgPSBcInRyYW5zcGFyZW50XCI7XG4gICAgICB0aXRsZSA9IHN0ci50cmltKCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnN0IHN0eWxlID0gbmV3IE9wdGlvbigpLnN0eWxlO1xuICAgIHN0eWxlLmNvbG9yID0gY29sb3I7XG4gICAgaWYgKHN0eWxlLmNvbG9yICE9PSBjb2xvcikge1xuICAgICAgY29sb3IgPSBcInRyYW5zcGFyZW50XCI7XG4gICAgICB0aXRsZSA9IHN0ci50cmltKCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgY29sb3IsXG4gICAgdGV4dDogdGl0bGUgIT09IHZvaWQgMCA/IHNhbml0aXplVGV4dCh0aXRsZS5yZXBsYWNlKC9eOj8oPzpubyk/d3JhcDovLCBcIlwiKSwgZ2V0Q29uZmlnKCkpIDogdm9pZCAwLFxuICAgIHdyYXA6IHRpdGxlICE9PSB2b2lkIDAgPyB0aXRsZS5tYXRjaCgvXjo/d3JhcDovKSAhPT0gbnVsbCA/IHRydWUgOiB0aXRsZS5tYXRjaCgvXjo/bm93cmFwOi8pICE9PSBudWxsID8gZmFsc2UgOiB2b2lkIDAgOiB2b2lkIDBcbiAgfTtcbn07XG5jb25zdCBMSU5FVFlQRSA9IHtcbiAgU09MSUQ6IDAsXG4gIERPVFRFRDogMSxcbiAgTk9URTogMixcbiAgU09MSURfQ1JPU1M6IDMsXG4gIERPVFRFRF9DUk9TUzogNCxcbiAgU09MSURfT1BFTjogNSxcbiAgRE9UVEVEX09QRU46IDYsXG4gIExPT1BfU1RBUlQ6IDEwLFxuICBMT09QX0VORDogMTEsXG4gIEFMVF9TVEFSVDogMTIsXG4gIEFMVF9FTFNFOiAxMyxcbiAgQUxUX0VORDogMTQsXG4gIE9QVF9TVEFSVDogMTUsXG4gIE9QVF9FTkQ6IDE2LFxuICBBQ1RJVkVfU1RBUlQ6IDE3LFxuICBBQ1RJVkVfRU5EOiAxOCxcbiAgUEFSX1NUQVJUOiAxOSxcbiAgUEFSX0FORDogMjAsXG4gIFBBUl9FTkQ6IDIxLFxuICBSRUNUX1NUQVJUOiAyMixcbiAgUkVDVF9FTkQ6IDIzLFxuICBTT0xJRF9QT0lOVDogMjQsXG4gIERPVFRFRF9QT0lOVDogMjUsXG4gIEFVVE9OVU1CRVI6IDI2LFxuICBDUklUSUNBTF9TVEFSVDogMjcsXG4gIENSSVRJQ0FMX09QVElPTjogMjgsXG4gIENSSVRJQ0FMX0VORDogMjksXG4gIEJSRUFLX1NUQVJUOiAzMCxcbiAgQlJFQUtfRU5EOiAzMSxcbiAgUEFSX09WRVJfU1RBUlQ6IDMyXG59O1xuY29uc3QgQVJST1dUWVBFID0ge1xuICBGSUxMRUQ6IDAsXG4gIE9QRU46IDFcbn07XG5jb25zdCBQTEFDRU1FTlQgPSB7XG4gIExFRlRPRjogMCxcbiAgUklHSFRPRjogMSxcbiAgT1ZFUjogMlxufTtcbmNvbnN0IGFkZE5vdGUgPSBmdW5jdGlvbihhY3RvciwgcGxhY2VtZW50LCBtZXNzYWdlKSB7XG4gIGNvbnN0IG5vdGUgPSB7XG4gICAgYWN0b3IsXG4gICAgcGxhY2VtZW50LFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2UudGV4dCxcbiAgICB3cmFwOiBtZXNzYWdlLndyYXAgPT09IHZvaWQgMCAmJiBhdXRvV3JhcCgpIHx8ICEhbWVzc2FnZS53cmFwXG4gIH07XG4gIGNvbnN0IGFjdG9ycyA9IFtdLmNvbmNhdChhY3RvciwgYWN0b3IpO1xuICBzdGF0ZS5yZWNvcmRzLm5vdGVzLnB1c2gobm90ZSk7XG4gIHN0YXRlLnJlY29yZHMubWVzc2FnZXMucHVzaCh7XG4gICAgZnJvbTogYWN0b3JzWzBdLFxuICAgIHRvOiBhY3RvcnNbMV0sXG4gICAgbWVzc2FnZTogbWVzc2FnZS50ZXh0LFxuICAgIHdyYXA6IG1lc3NhZ2Uud3JhcCA9PT0gdm9pZCAwICYmIGF1dG9XcmFwKCkgfHwgISFtZXNzYWdlLndyYXAsXG4gICAgdHlwZTogTElORVRZUEUuTk9URSxcbiAgICBwbGFjZW1lbnRcbiAgfSk7XG59O1xuY29uc3QgYWRkTGlua3MgPSBmdW5jdGlvbihhY3RvcklkLCB0ZXh0KSB7XG4gIGNvbnN0IGFjdG9yID0gZ2V0QWN0b3IoYWN0b3JJZCk7XG4gIHRyeSB7XG4gICAgbGV0IHNhbml0aXplZFRleHQgPSBzYW5pdGl6ZVRleHQodGV4dC50ZXh0LCBnZXRDb25maWcoKSk7XG4gICAgc2FuaXRpemVkVGV4dCA9IHNhbml0aXplZFRleHQucmVwbGFjZSgvJmFtcDsvZywgXCImXCIpO1xuICAgIHNhbml0aXplZFRleHQgPSBzYW5pdGl6ZWRUZXh0LnJlcGxhY2UoLyZlcXVhbHM7L2csIFwiPVwiKTtcbiAgICBjb25zdCBsaW5rcyA9IEpTT04ucGFyc2Uoc2FuaXRpemVkVGV4dCk7XG4gICAgaW5zZXJ0TGlua3MoYWN0b3IsIGxpbmtzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGxvZy5lcnJvcihcImVycm9yIHdoaWxlIHBhcnNpbmcgYWN0b3IgbGluayB0ZXh0XCIsIGUpO1xuICB9XG59O1xuY29uc3QgYWRkQUxpbmsgPSBmdW5jdGlvbihhY3RvcklkLCB0ZXh0KSB7XG4gIGNvbnN0IGFjdG9yID0gZ2V0QWN0b3IoYWN0b3JJZCk7XG4gIHRyeSB7XG4gICAgY29uc3QgbGlua3MgPSB7fTtcbiAgICBsZXQgc2FuaXRpemVkVGV4dCA9IHNhbml0aXplVGV4dCh0ZXh0LnRleHQsIGdldENvbmZpZygpKTtcbiAgICB2YXIgc2VwID0gc2FuaXRpemVkVGV4dC5pbmRleE9mKFwiQFwiKTtcbiAgICBzYW5pdGl6ZWRUZXh0ID0gc2FuaXRpemVkVGV4dC5yZXBsYWNlKC8mYW1wOy9nLCBcIiZcIik7XG4gICAgc2FuaXRpemVkVGV4dCA9IHNhbml0aXplZFRleHQucmVwbGFjZSgvJmVxdWFsczsvZywgXCI9XCIpO1xuICAgIHZhciBsYWJlbCA9IHNhbml0aXplZFRleHQuc2xpY2UoMCwgc2VwIC0gMSkudHJpbSgpO1xuICAgIHZhciBsaW5rID0gc2FuaXRpemVkVGV4dC5zbGljZShzZXAgKyAxKS50cmltKCk7XG4gICAgbGlua3NbbGFiZWxdID0gbGluaztcbiAgICBpbnNlcnRMaW5rcyhhY3RvciwgbGlua3MpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgbG9nLmVycm9yKFwiZXJyb3Igd2hpbGUgcGFyc2luZyBhY3RvciBsaW5rIHRleHRcIiwgZSk7XG4gIH1cbn07XG5mdW5jdGlvbiBpbnNlcnRMaW5rcyhhY3RvciwgbGlua3MpIHtcbiAgaWYgKGFjdG9yLmxpbmtzID09IG51bGwpIHtcbiAgICBhY3Rvci5saW5rcyA9IGxpbmtzO1xuICB9IGVsc2Uge1xuICAgIGZvciAobGV0IGtleSBpbiBsaW5rcykge1xuICAgICAgYWN0b3IubGlua3Nba2V5XSA9IGxpbmtzW2tleV07XG4gICAgfVxuICB9XG59XG5jb25zdCBhZGRQcm9wZXJ0aWVzID0gZnVuY3Rpb24oYWN0b3JJZCwgdGV4dCkge1xuICBjb25zdCBhY3RvciA9IGdldEFjdG9yKGFjdG9ySWQpO1xuICB0cnkge1xuICAgIGxldCBzYW5pdGl6ZWRUZXh0ID0gc2FuaXRpemVUZXh0KHRleHQudGV4dCwgZ2V0Q29uZmlnKCkpO1xuICAgIGNvbnN0IHByb3BlcnRpZXMgPSBKU09OLnBhcnNlKHNhbml0aXplZFRleHQpO1xuICAgIGluc2VydFByb3BlcnRpZXMoYWN0b3IsIHByb3BlcnRpZXMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgbG9nLmVycm9yKFwiZXJyb3Igd2hpbGUgcGFyc2luZyBhY3RvciBwcm9wZXJ0aWVzIHRleHRcIiwgZSk7XG4gIH1cbn07XG5mdW5jdGlvbiBpbnNlcnRQcm9wZXJ0aWVzKGFjdG9yLCBwcm9wZXJ0aWVzKSB7XG4gIGlmIChhY3Rvci5wcm9wZXJ0aWVzID09IG51bGwpIHtcbiAgICBhY3Rvci5wcm9wZXJ0aWVzID0gcHJvcGVydGllcztcbiAgfSBlbHNlIHtcbiAgICBmb3IgKGxldCBrZXkgaW4gcHJvcGVydGllcykge1xuICAgICAgYWN0b3IucHJvcGVydGllc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gYm94RW5kKCkge1xuICBzdGF0ZS5yZWNvcmRzLmN1cnJlbnRCb3ggPSB2b2lkIDA7XG59XG5jb25zdCBhZGREZXRhaWxzID0gZnVuY3Rpb24oYWN0b3JJZCwgdGV4dCkge1xuICBjb25zdCBhY3RvciA9IGdldEFjdG9yKGFjdG9ySWQpO1xuICBjb25zdCBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGV4dC50ZXh0KTtcbiAgdHJ5IHtcbiAgICBjb25zdCB0ZXh0MiA9IGVsZW0uaW5uZXJIVE1MO1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKHRleHQyKTtcbiAgICBpZiAoZGV0YWlsc1tcInByb3BlcnRpZXNcIl0pIHtcbiAgICAgIGluc2VydFByb3BlcnRpZXMoYWN0b3IsIGRldGFpbHNbXCJwcm9wZXJ0aWVzXCJdKTtcbiAgICB9XG4gICAgaWYgKGRldGFpbHNbXCJsaW5rc1wiXSkge1xuICAgICAgaW5zZXJ0TGlua3MoYWN0b3IsIGRldGFpbHNbXCJsaW5rc1wiXSk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgbG9nLmVycm9yKFwiZXJyb3Igd2hpbGUgcGFyc2luZyBhY3RvciBkZXRhaWxzIHRleHRcIiwgZSk7XG4gIH1cbn07XG5jb25zdCBnZXRBY3RvclByb3BlcnR5ID0gZnVuY3Rpb24oYWN0b3IsIGtleSkge1xuICBpZiAoYWN0b3IgIT09IHZvaWQgMCAmJiBhY3Rvci5wcm9wZXJ0aWVzICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gYWN0b3IucHJvcGVydGllc1trZXldO1xuICB9XG4gIHJldHVybiB2b2lkIDA7XG59O1xuY29uc3QgYXBwbHkgPSBmdW5jdGlvbihwYXJhbSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShwYXJhbSkpIHtcbiAgICBwYXJhbS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgIGFwcGx5KGl0ZW0pO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHN3aXRjaCAocGFyYW0udHlwZSkge1xuICAgICAgY2FzZSBcInNlcXVlbmNlSW5kZXhcIjpcbiAgICAgICAgc3RhdGUucmVjb3Jkcy5tZXNzYWdlcy5wdXNoKHtcbiAgICAgICAgICBmcm9tOiB2b2lkIDAsXG4gICAgICAgICAgdG86IHZvaWQgMCxcbiAgICAgICAgICBtZXNzYWdlOiB7XG4gICAgICAgICAgICBzdGFydDogcGFyYW0uc2VxdWVuY2VJbmRleCxcbiAgICAgICAgICAgIHN0ZXA6IHBhcmFtLnNlcXVlbmNlSW5kZXhTdGVwLFxuICAgICAgICAgICAgdmlzaWJsZTogcGFyYW0uc2VxdWVuY2VWaXNpYmxlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB3cmFwOiBmYWxzZSxcbiAgICAgICAgICB0eXBlOiBwYXJhbS5zaWduYWxUeXBlXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhZGRQYXJ0aWNpcGFudFwiOlxuICAgICAgICBhZGRBY3RvcihwYXJhbS5hY3RvciwgcGFyYW0uYWN0b3IsIHBhcmFtLmRlc2NyaXB0aW9uLCBwYXJhbS5kcmF3KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiY3JlYXRlUGFydGljaXBhbnRcIjpcbiAgICAgICAgaWYgKHN0YXRlLnJlY29yZHMuYWN0b3JzW3BhcmFtLmFjdG9yXSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIFwiSXQgaXMgbm90IHBvc3NpYmxlIHRvIGhhdmUgYWN0b3JzIHdpdGggdGhlIHNhbWUgaWQsIGV2ZW4gaWYgb25lIGlzIGRlc3Ryb3llZCBiZWZvcmUgdGhlIG5leHQgaXMgY3JlYXRlZC4gVXNlICdBUycgYWxpYXNlcyB0byBzaW11bGF0ZSB0aGUgYmVoYXZpb3JcIlxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgc3RhdGUucmVjb3Jkcy5sYXN0Q3JlYXRlZCA9IHBhcmFtLmFjdG9yO1xuICAgICAgICBhZGRBY3RvcihwYXJhbS5hY3RvciwgcGFyYW0uYWN0b3IsIHBhcmFtLmRlc2NyaXB0aW9uLCBwYXJhbS5kcmF3KTtcbiAgICAgICAgc3RhdGUucmVjb3Jkcy5jcmVhdGVkQWN0b3JzW3BhcmFtLmFjdG9yXSA9IHN0YXRlLnJlY29yZHMubWVzc2FnZXMubGVuZ3RoO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJkZXN0cm95UGFydGljaXBhbnRcIjpcbiAgICAgICAgc3RhdGUucmVjb3Jkcy5sYXN0RGVzdHJveWVkID0gcGFyYW0uYWN0b3I7XG4gICAgICAgIHN0YXRlLnJlY29yZHMuZGVzdHJveWVkQWN0b3JzW3BhcmFtLmFjdG9yXSA9IHN0YXRlLnJlY29yZHMubWVzc2FnZXMubGVuZ3RoO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhY3RpdmVTdGFydFwiOlxuICAgICAgICBhZGRTaWduYWwocGFyYW0uYWN0b3IsIHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5zaWduYWxUeXBlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiYWN0aXZlRW5kXCI6XG4gICAgICAgIGFkZFNpZ25hbChwYXJhbS5hY3Rvciwgdm9pZCAwLCB2b2lkIDAsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhZGROb3RlXCI6XG4gICAgICAgIGFkZE5vdGUocGFyYW0uYWN0b3IsIHBhcmFtLnBsYWNlbWVudCwgcGFyYW0udGV4dCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImFkZExpbmtzXCI6XG4gICAgICAgIGFkZExpbmtzKHBhcmFtLmFjdG9yLCBwYXJhbS50ZXh0KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiYWRkQUxpbmtcIjpcbiAgICAgICAgYWRkQUxpbmsocGFyYW0uYWN0b3IsIHBhcmFtLnRleHQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhZGRQcm9wZXJ0aWVzXCI6XG4gICAgICAgIGFkZFByb3BlcnRpZXMocGFyYW0uYWN0b3IsIHBhcmFtLnRleHQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhZGREZXRhaWxzXCI6XG4gICAgICAgIGFkZERldGFpbHMocGFyYW0uYWN0b3IsIHBhcmFtLnRleHQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhZGRNZXNzYWdlXCI6XG4gICAgICAgIGlmIChzdGF0ZS5yZWNvcmRzLmxhc3RDcmVhdGVkKSB7XG4gICAgICAgICAgaWYgKHBhcmFtLnRvICE9PSBzdGF0ZS5yZWNvcmRzLmxhc3RDcmVhdGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgIFwiVGhlIGNyZWF0ZWQgcGFydGljaXBhbnQgXCIgKyBzdGF0ZS5yZWNvcmRzLmxhc3RDcmVhdGVkICsgXCIgZG9lcyBub3QgaGF2ZSBhbiBhc3NvY2lhdGVkIGNyZWF0aW5nIG1lc3NhZ2UgYWZ0ZXIgaXRzIGRlY2xhcmF0aW9uLiBQbGVhc2UgY2hlY2sgdGhlIHNlcXVlbmNlIGRpYWdyYW0uXCJcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0YXRlLnJlY29yZHMubGFzdENyZWF0ZWQgPSB2b2lkIDA7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHN0YXRlLnJlY29yZHMubGFzdERlc3Ryb3llZCkge1xuICAgICAgICAgIGlmIChwYXJhbS50byAhPT0gc3RhdGUucmVjb3Jkcy5sYXN0RGVzdHJveWVkICYmIHBhcmFtLmZyb20gIT09IHN0YXRlLnJlY29yZHMubGFzdERlc3Ryb3llZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICBcIlRoZSBkZXN0cm95ZWQgcGFydGljaXBhbnQgXCIgKyBzdGF0ZS5yZWNvcmRzLmxhc3REZXN0cm95ZWQgKyBcIiBkb2VzIG5vdCBoYXZlIGFuIGFzc29jaWF0ZWQgZGVzdHJveWluZyBtZXNzYWdlIGFmdGVyIGl0cyBkZWNsYXJhdGlvbi4gUGxlYXNlIGNoZWNrIHRoZSBzZXF1ZW5jZSBkaWFncmFtLlwiXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdGF0ZS5yZWNvcmRzLmxhc3REZXN0cm95ZWQgPSB2b2lkIDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGFkZFNpZ25hbChwYXJhbS5mcm9tLCBwYXJhbS50bywgcGFyYW0ubXNnLCBwYXJhbS5zaWduYWxUeXBlLCBwYXJhbS5hY3RpdmF0ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImJveFN0YXJ0XCI6XG4gICAgICAgIGFkZEJveChwYXJhbS5ib3hEYXRhKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiYm94RW5kXCI6XG4gICAgICAgIGJveEVuZCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJsb29wU3RhcnRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5sb29wVGV4dCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImxvb3BFbmRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJyZWN0U3RhcnRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5jb2xvciwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInJlY3RFbmRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvcHRTdGFydFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHBhcmFtLm9wdFRleHQsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvcHRFbmRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhbHRTdGFydFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHBhcmFtLmFsdFRleHQsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJlbHNlXCI6XG4gICAgICAgIGFkZFNpZ25hbCh2b2lkIDAsIHZvaWQgMCwgcGFyYW0uYWx0VGV4dCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImFsdEVuZFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInNldEFjY1RpdGxlXCI6XG4gICAgICAgIHNldEFjY1RpdGxlKHBhcmFtLnRleHQpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJwYXJTdGFydFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHBhcmFtLnBhclRleHQsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJhbmRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5wYXJUZXh0LCBwYXJhbS5zaWduYWxUeXBlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwicGFyRW5kXCI6XG4gICAgICAgIGFkZFNpZ25hbCh2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5zaWduYWxUeXBlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiY3JpdGljYWxTdGFydFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHBhcmFtLmNyaXRpY2FsVGV4dCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm9wdGlvblwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHBhcmFtLm9wdGlvblRleHQsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJjcml0aWNhbEVuZFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImJyZWFrU3RhcnRcIjpcbiAgICAgICAgYWRkU2lnbmFsKHZvaWQgMCwgdm9pZCAwLCBwYXJhbS5icmVha1RleHQsIHBhcmFtLnNpZ25hbFR5cGUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJicmVha0VuZFwiOlxuICAgICAgICBhZGRTaWduYWwodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgcGFyYW0uc2lnbmFsVHlwZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufTtcbmNvbnN0IGRiID0ge1xuICBhZGRBY3RvcixcbiAgYWRkTWVzc2FnZSxcbiAgYWRkU2lnbmFsLFxuICBhZGRMaW5rcyxcbiAgYWRkRGV0YWlscyxcbiAgYWRkUHJvcGVydGllcyxcbiAgYXV0b1dyYXAsXG4gIHNldFdyYXAsXG4gIGVuYWJsZVNlcXVlbmNlTnVtYmVycyxcbiAgZGlzYWJsZVNlcXVlbmNlTnVtYmVycyxcbiAgc2hvd1NlcXVlbmNlTnVtYmVycyxcbiAgZ2V0TWVzc2FnZXMsXG4gIGdldEFjdG9ycyxcbiAgZ2V0Q3JlYXRlZEFjdG9ycyxcbiAgZ2V0RGVzdHJveWVkQWN0b3JzLFxuICBnZXRBY3RvcixcbiAgZ2V0QWN0b3JLZXlzLFxuICBnZXRBY3RvclByb3BlcnR5LFxuICBnZXRBY2NUaXRsZSxcbiAgZ2V0Qm94ZXMsXG4gIGdldERpYWdyYW1UaXRsZSxcbiAgc2V0RGlhZ3JhbVRpdGxlLFxuICBnZXRDb25maWc6ICgpID0+IGdldENvbmZpZygpLnNlcXVlbmNlLFxuICBjbGVhcixcbiAgcGFyc2VNZXNzYWdlLFxuICBwYXJzZUJveERhdGEsXG4gIExJTkVUWVBFLFxuICBBUlJPV1RZUEUsXG4gIFBMQUNFTUVOVCxcbiAgYWRkTm90ZSxcbiAgc2V0QWNjVGl0bGUsXG4gIGFwcGx5LFxuICBzZXRBY2NEZXNjcmlwdGlvbixcbiAgZ2V0QWNjRGVzY3JpcHRpb24sXG4gIGhhc0F0TGVhc3RPbmVCb3gsXG4gIGhhc0F0TGVhc3RPbmVCb3hXaXRoVGl0bGVcbn07XG5jb25zdCBnZXRTdHlsZXMgPSAob3B0aW9ucykgPT4gYC5hY3RvciB7XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuYWN0b3JCb3JkZXJ9O1xuICAgIGZpbGw6ICR7b3B0aW9ucy5hY3RvckJrZ307XG4gIH1cblxuICB0ZXh0LmFjdG9yID4gdHNwYW4ge1xuICAgIGZpbGw6ICR7b3B0aW9ucy5hY3RvclRleHRDb2xvcn07XG4gICAgc3Ryb2tlOiBub25lO1xuICB9XG5cbiAgLmFjdG9yLWxpbmUge1xuICAgIHN0cm9rZTogJHtvcHRpb25zLmFjdG9yTGluZUNvbG9yfTtcbiAgfVxuXG4gIC5tZXNzYWdlTGluZTAge1xuICAgIHN0cm9rZS13aWR0aDogMS41O1xuICAgIHN0cm9rZS1kYXNoYXJyYXk6IG5vbmU7XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuc2lnbmFsQ29sb3J9O1xuICB9XG5cbiAgLm1lc3NhZ2VMaW5lMSB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxLjU7XG4gICAgc3Ryb2tlLWRhc2hhcnJheTogMiwgMjtcbiAgICBzdHJva2U6ICR7b3B0aW9ucy5zaWduYWxDb2xvcn07XG4gIH1cblxuICAjYXJyb3doZWFkIHBhdGgge1xuICAgIGZpbGw6ICR7b3B0aW9ucy5zaWduYWxDb2xvcn07XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuc2lnbmFsQ29sb3J9O1xuICB9XG5cbiAgLnNlcXVlbmNlTnVtYmVyIHtcbiAgICBmaWxsOiAke29wdGlvbnMuc2VxdWVuY2VOdW1iZXJDb2xvcn07XG4gIH1cblxuICAjc2VxdWVuY2VudW1iZXIge1xuICAgIGZpbGw6ICR7b3B0aW9ucy5zaWduYWxDb2xvcn07XG4gIH1cblxuICAjY3Jvc3NoZWFkIHBhdGgge1xuICAgIGZpbGw6ICR7b3B0aW9ucy5zaWduYWxDb2xvcn07XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuc2lnbmFsQ29sb3J9O1xuICB9XG5cbiAgLm1lc3NhZ2VUZXh0IHtcbiAgICBmaWxsOiAke29wdGlvbnMuc2lnbmFsVGV4dENvbG9yfTtcbiAgICBzdHJva2U6IG5vbmU7XG4gIH1cblxuICAubGFiZWxCb3gge1xuICAgIHN0cm9rZTogJHtvcHRpb25zLmxhYmVsQm94Qm9yZGVyQ29sb3J9O1xuICAgIGZpbGw6ICR7b3B0aW9ucy5sYWJlbEJveEJrZ0NvbG9yfTtcbiAgfVxuXG4gIC5sYWJlbFRleHQsIC5sYWJlbFRleHQgPiB0c3BhbiB7XG4gICAgZmlsbDogJHtvcHRpb25zLmxhYmVsVGV4dENvbG9yfTtcbiAgICBzdHJva2U6IG5vbmU7XG4gIH1cblxuICAubG9vcFRleHQsIC5sb29wVGV4dCA+IHRzcGFuIHtcbiAgICBmaWxsOiAke29wdGlvbnMubG9vcFRleHRDb2xvcn07XG4gICAgc3Ryb2tlOiBub25lO1xuICB9XG5cbiAgLmxvb3BMaW5lIHtcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcbiAgICBzdHJva2UtZGFzaGFycmF5OiAyLCAyO1xuICAgIHN0cm9rZTogJHtvcHRpb25zLmxhYmVsQm94Qm9yZGVyQ29sb3J9O1xuICAgIGZpbGw6ICR7b3B0aW9ucy5sYWJlbEJveEJvcmRlckNvbG9yfTtcbiAgfVxuXG4gIC5ub3RlIHtcbiAgICAvL3N0cm9rZTogI2RlY2M5MztcbiAgICBzdHJva2U6ICR7b3B0aW9ucy5ub3RlQm9yZGVyQ29sb3J9O1xuICAgIGZpbGw6ICR7b3B0aW9ucy5ub3RlQmtnQ29sb3J9O1xuICB9XG5cbiAgLm5vdGVUZXh0LCAubm90ZVRleHQgPiB0c3BhbiB7XG4gICAgZmlsbDogJHtvcHRpb25zLm5vdGVUZXh0Q29sb3J9O1xuICAgIHN0cm9rZTogbm9uZTtcbiAgfVxuXG4gIC5hY3RpdmF0aW9uMCB7XG4gICAgZmlsbDogJHtvcHRpb25zLmFjdGl2YXRpb25Ca2dDb2xvcn07XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuYWN0aXZhdGlvbkJvcmRlckNvbG9yfTtcbiAgfVxuXG4gIC5hY3RpdmF0aW9uMSB7XG4gICAgZmlsbDogJHtvcHRpb25zLmFjdGl2YXRpb25Ca2dDb2xvcn07XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuYWN0aXZhdGlvbkJvcmRlckNvbG9yfTtcbiAgfVxuXG4gIC5hY3RpdmF0aW9uMiB7XG4gICAgZmlsbDogJHtvcHRpb25zLmFjdGl2YXRpb25Ca2dDb2xvcn07XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuYWN0aXZhdGlvbkJvcmRlckNvbG9yfTtcbiAgfVxuXG4gIC5hY3RvclBvcHVwTWVudSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICB9XG5cbiAgLmFjdG9yUG9wdXBNZW51UGFuZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmaWxsOiAke29wdGlvbnMuYWN0b3JCa2d9O1xuICAgIGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coM3B4IDVweCAycHggcmdiKDAgMCAwIC8gMC40KSk7XG59XG4gIC5hY3Rvci1tYW4gbGluZSB7XG4gICAgc3Ryb2tlOiAke29wdGlvbnMuYWN0b3JCb3JkZXJ9O1xuICAgIGZpbGw6ICR7b3B0aW9ucy5hY3RvckJrZ307XG4gIH1cbiAgLmFjdG9yLW1hbiBjaXJjbGUsIGxpbmUge1xuICAgIHN0cm9rZTogJHtvcHRpb25zLmFjdG9yQm9yZGVyfTtcbiAgICBmaWxsOiAke29wdGlvbnMuYWN0b3JCa2d9O1xuICAgIHN0cm9rZS13aWR0aDogMnB4O1xuICB9XG5gO1xuY29uc3Qgc3R5bGVzID0gZ2V0U3R5bGVzO1xuY29uc3QgQUNUT1JfVFlQRV9XSURUSCA9IDE4ICogMjtcbmNvbnN0IFRPUF9BQ1RPUl9DTEFTUyA9IFwiYWN0b3ItdG9wXCI7XG5jb25zdCBCT1RUT01fQUNUT1JfQ0xBU1MgPSBcImFjdG9yLWJvdHRvbVwiO1xuY29uc3QgZHJhd1JlY3QgPSBmdW5jdGlvbihlbGVtLCByZWN0RGF0YSkge1xuICByZXR1cm4gZHJhd1JlY3QkMShlbGVtLCByZWN0RGF0YSk7XG59O1xuY29uc3QgZHJhd1BvcHVwID0gZnVuY3Rpb24oZWxlbSwgYWN0b3IsIG1pbk1lbnVXaWR0aCwgdGV4dEF0dHJzLCBmb3JjZU1lbnVzKSB7XG4gIGlmIChhY3Rvci5saW5rcyA9PT0gdm9pZCAwIHx8IGFjdG9yLmxpbmtzID09PSBudWxsIHx8IE9iamVjdC5rZXlzKGFjdG9yLmxpbmtzKS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4geyBoZWlnaHQ6IDAsIHdpZHRoOiAwIH07XG4gIH1cbiAgY29uc3QgbGlua3MgPSBhY3Rvci5saW5rcztcbiAgY29uc3QgYWN0b3JDbnQyID0gYWN0b3IuYWN0b3JDbnQ7XG4gIGNvbnN0IHJlY3REYXRhID0gYWN0b3IucmVjdERhdGE7XG4gIHZhciBkaXNwbGF5VmFsdWUgPSBcIm5vbmVcIjtcbiAgaWYgKGZvcmNlTWVudXMpIHtcbiAgICBkaXNwbGF5VmFsdWUgPSBcImJsb2NrICFpbXBvcnRhbnRcIjtcbiAgfVxuICBjb25zdCBnID0gZWxlbS5hcHBlbmQoXCJnXCIpO1xuICBnLmF0dHIoXCJpZFwiLCBcImFjdG9yXCIgKyBhY3RvckNudDIgKyBcIl9wb3B1cFwiKTtcbiAgZy5hdHRyKFwiY2xhc3NcIiwgXCJhY3RvclBvcHVwTWVudVwiKTtcbiAgZy5hdHRyKFwiZGlzcGxheVwiLCBkaXNwbGF5VmFsdWUpO1xuICB2YXIgYWN0b3JDbGFzcyA9IFwiXCI7XG4gIGlmIChyZWN0RGF0YS5jbGFzcyAhPT0gdm9pZCAwKSB7XG4gICAgYWN0b3JDbGFzcyA9IFwiIFwiICsgcmVjdERhdGEuY2xhc3M7XG4gIH1cbiAgbGV0IG1lbnVXaWR0aCA9IHJlY3REYXRhLndpZHRoID4gbWluTWVudVdpZHRoID8gcmVjdERhdGEud2lkdGggOiBtaW5NZW51V2lkdGg7XG4gIGNvbnN0IHJlY3RFbGVtID0gZy5hcHBlbmQoXCJyZWN0XCIpO1xuICByZWN0RWxlbS5hdHRyKFwiY2xhc3NcIiwgXCJhY3RvclBvcHVwTWVudVBhbmVsXCIgKyBhY3RvckNsYXNzKTtcbiAgcmVjdEVsZW0uYXR0cihcInhcIiwgcmVjdERhdGEueCk7XG4gIHJlY3RFbGVtLmF0dHIoXCJ5XCIsIHJlY3REYXRhLmhlaWdodCk7XG4gIHJlY3RFbGVtLmF0dHIoXCJmaWxsXCIsIHJlY3REYXRhLmZpbGwpO1xuICByZWN0RWxlbS5hdHRyKFwic3Ryb2tlXCIsIHJlY3REYXRhLnN0cm9rZSk7XG4gIHJlY3RFbGVtLmF0dHIoXCJ3aWR0aFwiLCBtZW51V2lkdGgpO1xuICByZWN0RWxlbS5hdHRyKFwiaGVpZ2h0XCIsIHJlY3REYXRhLmhlaWdodCk7XG4gIHJlY3RFbGVtLmF0dHIoXCJyeFwiLCByZWN0RGF0YS5yeCk7XG4gIHJlY3RFbGVtLmF0dHIoXCJyeVwiLCByZWN0RGF0YS5yeSk7XG4gIGlmIChsaW5rcyAhPSBudWxsKSB7XG4gICAgdmFyIGxpbmtZID0gMjA7XG4gICAgZm9yIChsZXQga2V5IGluIGxpbmtzKSB7XG4gICAgICB2YXIgbGlua0VsZW0gPSBnLmFwcGVuZChcImFcIik7XG4gICAgICB2YXIgc2FuaXRpemVkTGluayA9IHNhbml0aXplVXJsKGxpbmtzW2tleV0pO1xuICAgICAgbGlua0VsZW0uYXR0cihcInhsaW5rOmhyZWZcIiwgc2FuaXRpemVkTGluayk7XG4gICAgICBsaW5rRWxlbS5hdHRyKFwidGFyZ2V0XCIsIFwiX2JsYW5rXCIpO1xuICAgICAgX2RyYXdNZW51SXRlbVRleHRDYW5kaWRhdGVGdW5jKHRleHRBdHRycykoXG4gICAgICAgIGtleSxcbiAgICAgICAgbGlua0VsZW0sXG4gICAgICAgIHJlY3REYXRhLnggKyAxMCxcbiAgICAgICAgcmVjdERhdGEuaGVpZ2h0ICsgbGlua1ksXG4gICAgICAgIG1lbnVXaWR0aCxcbiAgICAgICAgMjAsXG4gICAgICAgIHsgY2xhc3M6IFwiYWN0b3JcIiB9LFxuICAgICAgICB0ZXh0QXR0cnNcbiAgICAgICk7XG4gICAgICBsaW5rWSArPSAzMDtcbiAgICB9XG4gIH1cbiAgcmVjdEVsZW0uYXR0cihcImhlaWdodFwiLCBsaW5rWSk7XG4gIHJldHVybiB7IGhlaWdodDogcmVjdERhdGEuaGVpZ2h0ICsgbGlua1ksIHdpZHRoOiBtZW51V2lkdGggfTtcbn07XG5jb25zdCBwb3B1cE1lbnVUb2dnbGUgPSBmdW5jdGlvbihwb3BJZCkge1xuICByZXR1cm4gXCJ2YXIgcHUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnXCIgKyBwb3BJZCArIFwiJyk7IGlmIChwdSAhPSBudWxsKSB7IHB1LnN0eWxlLmRpc3BsYXkgPSBwdS5zdHlsZS5kaXNwbGF5ID09ICdibG9jaycgPyAnbm9uZScgOiAnYmxvY2snOyB9XCI7XG59O1xuY29uc3QgZHJhd0thdGV4ID0gYXN5bmMgZnVuY3Rpb24oZWxlbSwgdGV4dERhdGEsIG1zZ01vZGVsID0gbnVsbCkge1xuICBsZXQgdGV4dEVsZW0gPSBlbGVtLmFwcGVuZChcImZvcmVpZ25PYmplY3RcIik7XG4gIGNvbnN0IGxpbmVzU2FuaXRpemVkID0gYXdhaXQgcmVuZGVyS2F0ZXhTYW5pdGl6ZWQodGV4dERhdGEudGV4dCwgZ2V0Q29uZmlnJDEoKSk7XG4gIGNvbnN0IGRpdkVsZW0gPSB0ZXh0RWxlbS5hcHBlbmQoXCJ4aHRtbDpkaXZcIikuYXR0cihcInN0eWxlXCIsIFwid2lkdGg6IGZpdC1jb250ZW50O1wiKS5hdHRyKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIpLmh0bWwobGluZXNTYW5pdGl6ZWQpO1xuICBjb25zdCBkaW0gPSBkaXZFbGVtLm5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgdGV4dEVsZW0uYXR0cihcImhlaWdodFwiLCBNYXRoLnJvdW5kKGRpbS5oZWlnaHQpKS5hdHRyKFwid2lkdGhcIiwgTWF0aC5yb3VuZChkaW0ud2lkdGgpKTtcbiAgaWYgKHRleHREYXRhLmNsYXNzID09PSBcIm5vdGVUZXh0XCIpIHtcbiAgICBjb25zdCByZWN0RWxlbSA9IGVsZW0ubm9kZSgpLmZpcnN0Q2hpbGQ7XG4gICAgcmVjdEVsZW0uc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIGRpbS5oZWlnaHQgKyAyICogdGV4dERhdGEudGV4dE1hcmdpbik7XG4gICAgY29uc3QgcmVjdERpbSA9IHJlY3RFbGVtLmdldEJCb3goKTtcbiAgICB0ZXh0RWxlbS5hdHRyKFwieFwiLCBNYXRoLnJvdW5kKHJlY3REaW0ueCArIHJlY3REaW0ud2lkdGggLyAyIC0gZGltLndpZHRoIC8gMikpLmF0dHIoXCJ5XCIsIE1hdGgucm91bmQocmVjdERpbS55ICsgcmVjdERpbS5oZWlnaHQgLyAyIC0gZGltLmhlaWdodCAvIDIpKTtcbiAgfSBlbHNlIGlmIChtc2dNb2RlbCkge1xuICAgIGxldCB7IHN0YXJ0eCwgc3RvcHgsIHN0YXJ0eSB9ID0gbXNnTW9kZWw7XG4gICAgaWYgKHN0YXJ0eCA+IHN0b3B4KSB7XG4gICAgICBjb25zdCB0ZW1wID0gc3RhcnR4O1xuICAgICAgc3RhcnR4ID0gc3RvcHg7XG4gICAgICBzdG9weCA9IHRlbXA7XG4gICAgfVxuICAgIHRleHRFbGVtLmF0dHIoXCJ4XCIsIE1hdGgucm91bmQoc3RhcnR4ICsgTWF0aC5hYnMoc3RhcnR4IC0gc3RvcHgpIC8gMiAtIGRpbS53aWR0aCAvIDIpKTtcbiAgICBpZiAodGV4dERhdGEuY2xhc3MgPT09IFwibG9vcFRleHRcIikge1xuICAgICAgdGV4dEVsZW0uYXR0cihcInlcIiwgTWF0aC5yb3VuZChzdGFydHkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGV4dEVsZW0uYXR0cihcInlcIiwgTWF0aC5yb3VuZChzdGFydHkgLSBkaW0uaGVpZ2h0KSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBbdGV4dEVsZW1dO1xufTtcbmNvbnN0IGRyYXdUZXh0ID0gZnVuY3Rpb24oZWxlbSwgdGV4dERhdGEpIHtcbiAgbGV0IHByZXZUZXh0SGVpZ2h0ID0gMDtcbiAgbGV0IHRleHRIZWlnaHQgPSAwO1xuICBjb25zdCBsaW5lcyA9IHRleHREYXRhLnRleHQuc3BsaXQoY29tbW9uLmxpbmVCcmVha1JlZ2V4KTtcbiAgY29uc3QgW190ZXh0Rm9udFNpemUsIF90ZXh0Rm9udFNpemVQeF0gPSBwYXJzZUZvbnRTaXplKHRleHREYXRhLmZvbnRTaXplKTtcbiAgbGV0IHRleHRFbGVtcyA9IFtdO1xuICBsZXQgZHkgPSAwO1xuICBsZXQgeWZ1bmMgPSAoKSA9PiB0ZXh0RGF0YS55O1xuICBpZiAodGV4dERhdGEudmFsaWduICE9PSB2b2lkIDAgJiYgdGV4dERhdGEudGV4dE1hcmdpbiAhPT0gdm9pZCAwICYmIHRleHREYXRhLnRleHRNYXJnaW4gPiAwKSB7XG4gICAgc3dpdGNoICh0ZXh0RGF0YS52YWxpZ24pIHtcbiAgICAgIGNhc2UgXCJ0b3BcIjpcbiAgICAgIGNhc2UgXCJzdGFydFwiOlxuICAgICAgICB5ZnVuYyA9ICgpID0+IE1hdGgucm91bmQodGV4dERhdGEueSArIHRleHREYXRhLnRleHRNYXJnaW4pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJtaWRkbGVcIjpcbiAgICAgIGNhc2UgXCJjZW50ZXJcIjpcbiAgICAgICAgeWZ1bmMgPSAoKSA9PiBNYXRoLnJvdW5kKHRleHREYXRhLnkgKyAocHJldlRleHRIZWlnaHQgKyB0ZXh0SGVpZ2h0ICsgdGV4dERhdGEudGV4dE1hcmdpbikgLyAyKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiYm90dG9tXCI6XG4gICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgIHlmdW5jID0gKCkgPT4gTWF0aC5yb3VuZChcbiAgICAgICAgICB0ZXh0RGF0YS55ICsgKHByZXZUZXh0SGVpZ2h0ICsgdGV4dEhlaWdodCArIDIgKiB0ZXh0RGF0YS50ZXh0TWFyZ2luKSAtIHRleHREYXRhLnRleHRNYXJnaW5cbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGlmICh0ZXh0RGF0YS5hbmNob3IgIT09IHZvaWQgMCAmJiB0ZXh0RGF0YS50ZXh0TWFyZ2luICE9PSB2b2lkIDAgJiYgdGV4dERhdGEud2lkdGggIT09IHZvaWQgMCkge1xuICAgIHN3aXRjaCAodGV4dERhdGEuYW5jaG9yKSB7XG4gICAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgY2FzZSBcInN0YXJ0XCI6XG4gICAgICAgIHRleHREYXRhLnggPSBNYXRoLnJvdW5kKHRleHREYXRhLnggKyB0ZXh0RGF0YS50ZXh0TWFyZ2luKTtcbiAgICAgICAgdGV4dERhdGEuYW5jaG9yID0gXCJzdGFydFwiO1xuICAgICAgICB0ZXh0RGF0YS5kb21pbmFudEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcbiAgICAgICAgdGV4dERhdGEuYWxpZ25tZW50QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJtaWRkbGVcIjpcbiAgICAgIGNhc2UgXCJjZW50ZXJcIjpcbiAgICAgICAgdGV4dERhdGEueCA9IE1hdGgucm91bmQodGV4dERhdGEueCArIHRleHREYXRhLndpZHRoIC8gMik7XG4gICAgICAgIHRleHREYXRhLmFuY2hvciA9IFwibWlkZGxlXCI7XG4gICAgICAgIHRleHREYXRhLmRvbWluYW50QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xuICAgICAgICB0ZXh0RGF0YS5hbGlnbm1lbnRCYXNlbGluZSA9IFwibWlkZGxlXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInJpZ2h0XCI6XG4gICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgIHRleHREYXRhLnggPSBNYXRoLnJvdW5kKHRleHREYXRhLnggKyB0ZXh0RGF0YS53aWR0aCAtIHRleHREYXRhLnRleHRNYXJnaW4pO1xuICAgICAgICB0ZXh0RGF0YS5hbmNob3IgPSBcImVuZFwiO1xuICAgICAgICB0ZXh0RGF0YS5kb21pbmFudEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcbiAgICAgICAgdGV4dERhdGEuYWxpZ25tZW50QmFzZWxpbmUgPSBcIm1pZGRsZVwiO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgZm9yIChsZXQgW2ksIGxpbmVdIG9mIGxpbmVzLmVudHJpZXMoKSkge1xuICAgIGlmICh0ZXh0RGF0YS50ZXh0TWFyZ2luICE9PSB2b2lkIDAgJiYgdGV4dERhdGEudGV4dE1hcmdpbiA9PT0gMCAmJiBfdGV4dEZvbnRTaXplICE9PSB2b2lkIDApIHtcbiAgICAgIGR5ID0gaSAqIF90ZXh0Rm9udFNpemU7XG4gICAgfVxuICAgIGNvbnN0IHRleHRFbGVtID0gZWxlbS5hcHBlbmQoXCJ0ZXh0XCIpO1xuICAgIHRleHRFbGVtLmF0dHIoXCJ4XCIsIHRleHREYXRhLngpO1xuICAgIHRleHRFbGVtLmF0dHIoXCJ5XCIsIHlmdW5jKCkpO1xuICAgIGlmICh0ZXh0RGF0YS5hbmNob3IgIT09IHZvaWQgMCkge1xuICAgICAgdGV4dEVsZW0uYXR0cihcInRleHQtYW5jaG9yXCIsIHRleHREYXRhLmFuY2hvcikuYXR0cihcImRvbWluYW50LWJhc2VsaW5lXCIsIHRleHREYXRhLmRvbWluYW50QmFzZWxpbmUpLmF0dHIoXCJhbGlnbm1lbnQtYmFzZWxpbmVcIiwgdGV4dERhdGEuYWxpZ25tZW50QmFzZWxpbmUpO1xuICAgIH1cbiAgICBpZiAodGV4dERhdGEuZm9udEZhbWlseSAhPT0gdm9pZCAwKSB7XG4gICAgICB0ZXh0RWxlbS5zdHlsZShcImZvbnQtZmFtaWx5XCIsIHRleHREYXRhLmZvbnRGYW1pbHkpO1xuICAgIH1cbiAgICBpZiAoX3RleHRGb250U2l6ZVB4ICE9PSB2b2lkIDApIHtcbiAgICAgIHRleHRFbGVtLnN0eWxlKFwiZm9udC1zaXplXCIsIF90ZXh0Rm9udFNpemVQeCk7XG4gICAgfVxuICAgIGlmICh0ZXh0RGF0YS5mb250V2VpZ2h0ICE9PSB2b2lkIDApIHtcbiAgICAgIHRleHRFbGVtLnN0eWxlKFwiZm9udC13ZWlnaHRcIiwgdGV4dERhdGEuZm9udFdlaWdodCk7XG4gICAgfVxuICAgIGlmICh0ZXh0RGF0YS5maWxsICE9PSB2b2lkIDApIHtcbiAgICAgIHRleHRFbGVtLmF0dHIoXCJmaWxsXCIsIHRleHREYXRhLmZpbGwpO1xuICAgIH1cbiAgICBpZiAodGV4dERhdGEuY2xhc3MgIT09IHZvaWQgMCkge1xuICAgICAgdGV4dEVsZW0uYXR0cihcImNsYXNzXCIsIHRleHREYXRhLmNsYXNzKTtcbiAgICB9XG4gICAgaWYgKHRleHREYXRhLmR5ICE9PSB2b2lkIDApIHtcbiAgICAgIHRleHRFbGVtLmF0dHIoXCJkeVwiLCB0ZXh0RGF0YS5keSk7XG4gICAgfSBlbHNlIGlmIChkeSAhPT0gMCkge1xuICAgICAgdGV4dEVsZW0uYXR0cihcImR5XCIsIGR5KTtcbiAgICB9XG4gICAgY29uc3QgdGV4dCA9IGxpbmUgfHwgWkVST19XSURUSF9TUEFDRTtcbiAgICBpZiAodGV4dERhdGEudHNwYW4pIHtcbiAgICAgIGNvbnN0IHNwYW4gPSB0ZXh0RWxlbS5hcHBlbmQoXCJ0c3BhblwiKTtcbiAgICAgIHNwYW4uYXR0cihcInhcIiwgdGV4dERhdGEueCk7XG4gICAgICBpZiAodGV4dERhdGEuZmlsbCAhPT0gdm9pZCAwKSB7XG4gICAgICAgIHNwYW4uYXR0cihcImZpbGxcIiwgdGV4dERhdGEuZmlsbCk7XG4gICAgICB9XG4gICAgICBzcGFuLnRleHQodGV4dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRleHRFbGVtLnRleHQodGV4dCk7XG4gICAgfVxuICAgIGlmICh0ZXh0RGF0YS52YWxpZ24gIT09IHZvaWQgMCAmJiB0ZXh0RGF0YS50ZXh0TWFyZ2luICE9PSB2b2lkIDAgJiYgdGV4dERhdGEudGV4dE1hcmdpbiA+IDApIHtcbiAgICAgIHRleHRIZWlnaHQgKz0gKHRleHRFbGVtLl9ncm91cHMgfHwgdGV4dEVsZW0pWzBdWzBdLmdldEJCb3goKS5oZWlnaHQ7XG4gICAgICBwcmV2VGV4dEhlaWdodCA9IHRleHRIZWlnaHQ7XG4gICAgfVxuICAgIHRleHRFbGVtcy5wdXNoKHRleHRFbGVtKTtcbiAgfVxuICByZXR1cm4gdGV4dEVsZW1zO1xufTtcbmNvbnN0IGRyYXdMYWJlbCA9IGZ1bmN0aW9uKGVsZW0sIHR4dE9iamVjdCkge1xuICBmdW5jdGlvbiBnZW5Qb2ludHMoeCwgeSwgd2lkdGgsIGhlaWdodCwgY3V0KSB7XG4gICAgcmV0dXJuIHggKyBcIixcIiArIHkgKyBcIiBcIiArICh4ICsgd2lkdGgpICsgXCIsXCIgKyB5ICsgXCIgXCIgKyAoeCArIHdpZHRoKSArIFwiLFwiICsgKHkgKyBoZWlnaHQgLSBjdXQpICsgXCIgXCIgKyAoeCArIHdpZHRoIC0gY3V0ICogMS4yKSArIFwiLFwiICsgKHkgKyBoZWlnaHQpICsgXCIgXCIgKyB4ICsgXCIsXCIgKyAoeSArIGhlaWdodCk7XG4gIH1cbiAgY29uc3QgcG9seWdvbiA9IGVsZW0uYXBwZW5kKFwicG9seWdvblwiKTtcbiAgcG9seWdvbi5hdHRyKFwicG9pbnRzXCIsIGdlblBvaW50cyh0eHRPYmplY3QueCwgdHh0T2JqZWN0LnksIHR4dE9iamVjdC53aWR0aCwgdHh0T2JqZWN0LmhlaWdodCwgNykpO1xuICBwb2x5Z29uLmF0dHIoXCJjbGFzc1wiLCBcImxhYmVsQm94XCIpO1xuICB0eHRPYmplY3QueSA9IHR4dE9iamVjdC55ICsgdHh0T2JqZWN0LmhlaWdodCAvIDI7XG4gIGRyYXdUZXh0KGVsZW0sIHR4dE9iamVjdCk7XG4gIHJldHVybiBwb2x5Z29uO1xufTtcbmxldCBhY3RvckNudCA9IC0xO1xuY29uc3QgZml4TGlmZUxpbmVIZWlnaHRzID0gKGRpYWdyYW0yLCBhY3RvcnMsIGFjdG9yS2V5cywgY29uZjIpID0+IHtcbiAgaWYgKCFkaWFncmFtMi5zZWxlY3QpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgYWN0b3JLZXlzLmZvckVhY2goKGFjdG9yS2V5KSA9PiB7XG4gICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbYWN0b3JLZXldO1xuICAgIGNvbnN0IGFjdG9yRE9NID0gZGlhZ3JhbTIuc2VsZWN0KFwiI2FjdG9yXCIgKyBhY3Rvci5hY3RvckNudCk7XG4gICAgaWYgKCFjb25mMi5taXJyb3JBY3RvcnMgJiYgYWN0b3Iuc3RvcHkpIHtcbiAgICAgIGFjdG9yRE9NLmF0dHIoXCJ5MlwiLCBhY3Rvci5zdG9weSArIGFjdG9yLmhlaWdodCAvIDIpO1xuICAgIH0gZWxzZSBpZiAoY29uZjIubWlycm9yQWN0b3JzKSB7XG4gICAgICBhY3RvckRPTS5hdHRyKFwieTJcIiwgYWN0b3Iuc3RvcHkpO1xuICAgIH1cbiAgfSk7XG59O1xuY29uc3QgZHJhd0FjdG9yVHlwZVBhcnRpY2lwYW50ID0gYXN5bmMgZnVuY3Rpb24oZWxlbSwgYWN0b3IsIGNvbmYyLCBpc0Zvb3Rlcikge1xuICBjb25zdCBhY3RvclkgPSBpc0Zvb3RlciA/IGFjdG9yLnN0b3B5IDogYWN0b3Iuc3RhcnR5O1xuICBjb25zdCBjZW50ZXIgPSBhY3Rvci54ICsgYWN0b3Iud2lkdGggLyAyO1xuICBjb25zdCBjZW50ZXJZID0gYWN0b3JZICsgNTtcbiAgY29uc3QgYm94cGx1c0xpbmVHcm91cCA9IGVsZW0uYXBwZW5kKFwiZ1wiKS5sb3dlcigpO1xuICB2YXIgZyA9IGJveHBsdXNMaW5lR3JvdXA7XG4gIGlmICghaXNGb290ZXIpIHtcbiAgICBhY3RvckNudCsrO1xuICAgIGlmIChPYmplY3Qua2V5cyhhY3Rvci5saW5rcyB8fCB7fSkubGVuZ3RoICYmICFjb25mMi5mb3JjZU1lbnVzKSB7XG4gICAgICBnLmF0dHIoXCJvbmNsaWNrXCIsIHBvcHVwTWVudVRvZ2dsZShgYWN0b3Ike2FjdG9yQ250fV9wb3B1cGApKS5hdHRyKFwiY3Vyc29yXCIsIFwicG9pbnRlclwiKTtcbiAgICB9XG4gICAgZy5hcHBlbmQoXCJsaW5lXCIpLmF0dHIoXCJpZFwiLCBcImFjdG9yXCIgKyBhY3RvckNudCkuYXR0cihcIngxXCIsIGNlbnRlcikuYXR0cihcInkxXCIsIGNlbnRlclkpLmF0dHIoXCJ4MlwiLCBjZW50ZXIpLmF0dHIoXCJ5MlwiLCAyZTMpLmF0dHIoXCJjbGFzc1wiLCBcImFjdG9yLWxpbmVcIikuYXR0cihcImNsYXNzXCIsIFwiMjAwXCIpLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgXCIwLjVweFwiKS5hdHRyKFwic3Ryb2tlXCIsIFwiIzk5OVwiKTtcbiAgICBnID0gYm94cGx1c0xpbmVHcm91cC5hcHBlbmQoXCJnXCIpO1xuICAgIGFjdG9yLmFjdG9yQ250ID0gYWN0b3JDbnQ7XG4gICAgaWYgKGFjdG9yLmxpbmtzICE9IG51bGwpIHtcbiAgICAgIGcuYXR0cihcImlkXCIsIFwicm9vdC1cIiArIGFjdG9yQ250KTtcbiAgICB9XG4gIH1cbiAgY29uc3QgcmVjdCA9IGdldE5vdGVSZWN0JDEoKTtcbiAgdmFyIGNzc2NsYXNzID0gXCJhY3RvclwiO1xuICBpZiAoYWN0b3IucHJvcGVydGllcyAhPSBudWxsICYmIGFjdG9yLnByb3BlcnRpZXNbXCJjbGFzc1wiXSkge1xuICAgIGNzc2NsYXNzID0gYWN0b3IucHJvcGVydGllc1tcImNsYXNzXCJdO1xuICB9IGVsc2Uge1xuICAgIHJlY3QuZmlsbCA9IFwiI2VhZWFlYVwiO1xuICB9XG4gIGlmIChpc0Zvb3Rlcikge1xuICAgIGNzc2NsYXNzICs9IGAgJHtCT1RUT01fQUNUT1JfQ0xBU1N9YDtcbiAgfSBlbHNlIHtcbiAgICBjc3NjbGFzcyArPSBgICR7VE9QX0FDVE9SX0NMQVNTfWA7XG4gIH1cbiAgcmVjdC54ID0gYWN0b3IueDtcbiAgcmVjdC55ID0gYWN0b3JZO1xuICByZWN0LndpZHRoID0gYWN0b3Iud2lkdGg7XG4gIHJlY3QuaGVpZ2h0ID0gYWN0b3IuaGVpZ2h0O1xuICByZWN0LmNsYXNzID0gY3NzY2xhc3M7XG4gIHJlY3QucnggPSAzO1xuICByZWN0LnJ5ID0gMztcbiAgcmVjdC5uYW1lID0gYWN0b3IubmFtZTtcbiAgY29uc3QgcmVjdEVsZW0gPSBkcmF3UmVjdChnLCByZWN0KTtcbiAgYWN0b3IucmVjdERhdGEgPSByZWN0O1xuICBpZiAoYWN0b3IucHJvcGVydGllcyAhPSBudWxsICYmIGFjdG9yLnByb3BlcnRpZXNbXCJpY29uXCJdKSB7XG4gICAgY29uc3QgaWNvblNyYyA9IGFjdG9yLnByb3BlcnRpZXNbXCJpY29uXCJdLnRyaW0oKTtcbiAgICBpZiAoaWNvblNyYy5jaGFyQXQoMCkgPT09IFwiQFwiKSB7XG4gICAgICBkcmF3RW1iZWRkZWRJbWFnZShnLCByZWN0LnggKyByZWN0LndpZHRoIC0gMjAsIHJlY3QueSArIDEwLCBpY29uU3JjLnN1YnN0cigxKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRyYXdJbWFnZShnLCByZWN0LnggKyByZWN0LndpZHRoIC0gMjAsIHJlY3QueSArIDEwLCBpY29uU3JjKTtcbiAgICB9XG4gIH1cbiAgYXdhaXQgX2RyYXdUZXh0Q2FuZGlkYXRlRnVuYyhjb25mMiwgaGFzS2F0ZXgoYWN0b3IuZGVzY3JpcHRpb24pKShcbiAgICBhY3Rvci5kZXNjcmlwdGlvbixcbiAgICBnLFxuICAgIHJlY3QueCxcbiAgICByZWN0LnksXG4gICAgcmVjdC53aWR0aCxcbiAgICByZWN0LmhlaWdodCxcbiAgICB7IGNsYXNzOiBcImFjdG9yXCIgfSxcbiAgICBjb25mMlxuICApO1xuICBsZXQgaGVpZ2h0ID0gYWN0b3IuaGVpZ2h0O1xuICBpZiAocmVjdEVsZW0ubm9kZSkge1xuICAgIGNvbnN0IGJvdW5kczIgPSByZWN0RWxlbS5ub2RlKCkuZ2V0QkJveCgpO1xuICAgIGFjdG9yLmhlaWdodCA9IGJvdW5kczIuaGVpZ2h0O1xuICAgIGhlaWdodCA9IGJvdW5kczIuaGVpZ2h0O1xuICB9XG4gIHJldHVybiBoZWlnaHQ7XG59O1xuY29uc3QgZHJhd0FjdG9yVHlwZUFjdG9yID0gYXN5bmMgZnVuY3Rpb24oZWxlbSwgYWN0b3IsIGNvbmYyLCBpc0Zvb3Rlcikge1xuICBjb25zdCBhY3RvclkgPSBpc0Zvb3RlciA/IGFjdG9yLnN0b3B5IDogYWN0b3Iuc3RhcnR5O1xuICBjb25zdCBjZW50ZXIgPSBhY3Rvci54ICsgYWN0b3Iud2lkdGggLyAyO1xuICBjb25zdCBjZW50ZXJZID0gYWN0b3JZICsgODA7XG4gIGVsZW0ubG93ZXIoKTtcbiAgaWYgKCFpc0Zvb3Rlcikge1xuICAgIGFjdG9yQ250Kys7XG4gICAgZWxlbS5hcHBlbmQoXCJsaW5lXCIpLmF0dHIoXCJpZFwiLCBcImFjdG9yXCIgKyBhY3RvckNudCkuYXR0cihcIngxXCIsIGNlbnRlcikuYXR0cihcInkxXCIsIGNlbnRlclkpLmF0dHIoXCJ4MlwiLCBjZW50ZXIpLmF0dHIoXCJ5MlwiLCAyZTMpLmF0dHIoXCJjbGFzc1wiLCBcImFjdG9yLWxpbmVcIikuYXR0cihcImNsYXNzXCIsIFwiMjAwXCIpLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgXCIwLjVweFwiKS5hdHRyKFwic3Ryb2tlXCIsIFwiIzk5OVwiKTtcbiAgICBhY3Rvci5hY3RvckNudCA9IGFjdG9yQ250O1xuICB9XG4gIGNvbnN0IGFjdEVsZW0gPSBlbGVtLmFwcGVuZChcImdcIik7XG4gIGxldCBjc3NDbGFzcyA9IFwiYWN0b3ItbWFuXCI7XG4gIGlmIChpc0Zvb3Rlcikge1xuICAgIGNzc0NsYXNzICs9IGAgJHtCT1RUT01fQUNUT1JfQ0xBU1N9YDtcbiAgfSBlbHNlIHtcbiAgICBjc3NDbGFzcyArPSBgICR7VE9QX0FDVE9SX0NMQVNTfWA7XG4gIH1cbiAgYWN0RWxlbS5hdHRyKFwiY2xhc3NcIiwgY3NzQ2xhc3MpO1xuICBhY3RFbGVtLmF0dHIoXCJuYW1lXCIsIGFjdG9yLm5hbWUpO1xuICBjb25zdCByZWN0ID0gZ2V0Tm90ZVJlY3QkMSgpO1xuICByZWN0LnggPSBhY3Rvci54O1xuICByZWN0LnkgPSBhY3Rvclk7XG4gIHJlY3QuZmlsbCA9IFwiI2VhZWFlYVwiO1xuICByZWN0LndpZHRoID0gYWN0b3Iud2lkdGg7XG4gIHJlY3QuaGVpZ2h0ID0gYWN0b3IuaGVpZ2h0O1xuICByZWN0LmNsYXNzID0gXCJhY3RvclwiO1xuICByZWN0LnJ4ID0gMztcbiAgcmVjdC5yeSA9IDM7XG4gIGFjdEVsZW0uYXBwZW5kKFwibGluZVwiKS5hdHRyKFwiaWRcIiwgXCJhY3Rvci1tYW4tdG9yc29cIiArIGFjdG9yQ250KS5hdHRyKFwieDFcIiwgY2VudGVyKS5hdHRyKFwieTFcIiwgYWN0b3JZICsgMjUpLmF0dHIoXCJ4MlwiLCBjZW50ZXIpLmF0dHIoXCJ5MlwiLCBhY3RvclkgKyA0NSk7XG4gIGFjdEVsZW0uYXBwZW5kKFwibGluZVwiKS5hdHRyKFwiaWRcIiwgXCJhY3Rvci1tYW4tYXJtc1wiICsgYWN0b3JDbnQpLmF0dHIoXCJ4MVwiLCBjZW50ZXIgLSBBQ1RPUl9UWVBFX1dJRFRIIC8gMikuYXR0cihcInkxXCIsIGFjdG9yWSArIDMzKS5hdHRyKFwieDJcIiwgY2VudGVyICsgQUNUT1JfVFlQRV9XSURUSCAvIDIpLmF0dHIoXCJ5MlwiLCBhY3RvclkgKyAzMyk7XG4gIGFjdEVsZW0uYXBwZW5kKFwibGluZVwiKS5hdHRyKFwieDFcIiwgY2VudGVyIC0gQUNUT1JfVFlQRV9XSURUSCAvIDIpLmF0dHIoXCJ5MVwiLCBhY3RvclkgKyA2MCkuYXR0cihcIngyXCIsIGNlbnRlcikuYXR0cihcInkyXCIsIGFjdG9yWSArIDQ1KTtcbiAgYWN0RWxlbS5hcHBlbmQoXCJsaW5lXCIpLmF0dHIoXCJ4MVwiLCBjZW50ZXIpLmF0dHIoXCJ5MVwiLCBhY3RvclkgKyA0NSkuYXR0cihcIngyXCIsIGNlbnRlciArIEFDVE9SX1RZUEVfV0lEVEggLyAyIC0gMikuYXR0cihcInkyXCIsIGFjdG9yWSArIDYwKTtcbiAgY29uc3QgY2lyY2xlID0gYWN0RWxlbS5hcHBlbmQoXCJjaXJjbGVcIik7XG4gIGNpcmNsZS5hdHRyKFwiY3hcIiwgYWN0b3IueCArIGFjdG9yLndpZHRoIC8gMik7XG4gIGNpcmNsZS5hdHRyKFwiY3lcIiwgYWN0b3JZICsgMTApO1xuICBjaXJjbGUuYXR0cihcInJcIiwgMTUpO1xuICBjaXJjbGUuYXR0cihcIndpZHRoXCIsIGFjdG9yLndpZHRoKTtcbiAgY2lyY2xlLmF0dHIoXCJoZWlnaHRcIiwgYWN0b3IuaGVpZ2h0KTtcbiAgY29uc3QgYm91bmRzMiA9IGFjdEVsZW0ubm9kZSgpLmdldEJCb3goKTtcbiAgYWN0b3IuaGVpZ2h0ID0gYm91bmRzMi5oZWlnaHQ7XG4gIGF3YWl0IF9kcmF3VGV4dENhbmRpZGF0ZUZ1bmMoY29uZjIsIGhhc0thdGV4KGFjdG9yLmRlc2NyaXB0aW9uKSkoXG4gICAgYWN0b3IuZGVzY3JpcHRpb24sXG4gICAgYWN0RWxlbSxcbiAgICByZWN0LngsXG4gICAgcmVjdC55ICsgMzUsXG4gICAgcmVjdC53aWR0aCxcbiAgICByZWN0LmhlaWdodCxcbiAgICB7IGNsYXNzOiBcImFjdG9yXCIgfSxcbiAgICBjb25mMlxuICApO1xuICByZXR1cm4gYWN0b3IuaGVpZ2h0O1xufTtcbmNvbnN0IGRyYXdBY3RvciA9IGFzeW5jIGZ1bmN0aW9uKGVsZW0sIGFjdG9yLCBjb25mMiwgaXNGb290ZXIpIHtcbiAgc3dpdGNoIChhY3Rvci50eXBlKSB7XG4gICAgY2FzZSBcImFjdG9yXCI6XG4gICAgICByZXR1cm4gYXdhaXQgZHJhd0FjdG9yVHlwZUFjdG9yKGVsZW0sIGFjdG9yLCBjb25mMiwgaXNGb290ZXIpO1xuICAgIGNhc2UgXCJwYXJ0aWNpcGFudFwiOlxuICAgICAgcmV0dXJuIGF3YWl0IGRyYXdBY3RvclR5cGVQYXJ0aWNpcGFudChlbGVtLCBhY3RvciwgY29uZjIsIGlzRm9vdGVyKTtcbiAgfVxufTtcbmNvbnN0IGRyYXdCb3ggPSBhc3luYyBmdW5jdGlvbihlbGVtLCBib3gsIGNvbmYyKSB7XG4gIGNvbnN0IGJveHBsdXNUZXh0R3JvdXAgPSBlbGVtLmFwcGVuZChcImdcIik7XG4gIGNvbnN0IGcgPSBib3hwbHVzVGV4dEdyb3VwO1xuICBkcmF3QmFja2dyb3VuZFJlY3QoZywgYm94KTtcbiAgaWYgKGJveC5uYW1lKSB7XG4gICAgYXdhaXQgX2RyYXdUZXh0Q2FuZGlkYXRlRnVuYyhjb25mMikoXG4gICAgICBib3gubmFtZSxcbiAgICAgIGcsXG4gICAgICBib3gueCxcbiAgICAgIGJveC55ICsgKGJveC50ZXh0TWF4SGVpZ2h0IHx8IDApIC8gMixcbiAgICAgIGJveC53aWR0aCxcbiAgICAgIDAsXG4gICAgICB7IGNsYXNzOiBcInRleHRcIiB9LFxuICAgICAgY29uZjJcbiAgICApO1xuICB9XG4gIGcubG93ZXIoKTtcbn07XG5jb25zdCBhbmNob3JFbGVtZW50ID0gZnVuY3Rpb24oZWxlbSkge1xuICByZXR1cm4gZWxlbS5hcHBlbmQoXCJnXCIpO1xufTtcbmNvbnN0IGRyYXdBY3RpdmF0aW9uID0gZnVuY3Rpb24oZWxlbSwgYm91bmRzMiwgdmVydGljYWxQb3MsIGNvbmYyLCBhY3RvckFjdGl2YXRpb25zMikge1xuICBjb25zdCByZWN0ID0gZ2V0Tm90ZVJlY3QkMSgpO1xuICBjb25zdCBnID0gYm91bmRzMi5hbmNob3JlZDtcbiAgcmVjdC54ID0gYm91bmRzMi5zdGFydHg7XG4gIHJlY3QueSA9IGJvdW5kczIuc3RhcnR5O1xuICByZWN0LmNsYXNzID0gXCJhY3RpdmF0aW9uXCIgKyBhY3RvckFjdGl2YXRpb25zMiAlIDM7XG4gIHJlY3Qud2lkdGggPSBib3VuZHMyLnN0b3B4IC0gYm91bmRzMi5zdGFydHg7XG4gIHJlY3QuaGVpZ2h0ID0gdmVydGljYWxQb3MgLSBib3VuZHMyLnN0YXJ0eTtcbiAgZHJhd1JlY3QoZywgcmVjdCk7XG59O1xuY29uc3QgZHJhd0xvb3AgPSBhc3luYyBmdW5jdGlvbihlbGVtLCBsb29wTW9kZWwsIGxhYmVsVGV4dCwgY29uZjIpIHtcbiAgY29uc3Qge1xuICAgIGJveE1hcmdpbixcbiAgICBib3hUZXh0TWFyZ2luLFxuICAgIGxhYmVsQm94SGVpZ2h0LFxuICAgIGxhYmVsQm94V2lkdGgsXG4gICAgbWVzc2FnZUZvbnRGYW1pbHk6IGZvbnRGYW1pbHksXG4gICAgbWVzc2FnZUZvbnRTaXplOiBmb250U2l6ZSxcbiAgICBtZXNzYWdlRm9udFdlaWdodDogZm9udFdlaWdodFxuICB9ID0gY29uZjI7XG4gIGNvbnN0IGcgPSBlbGVtLmFwcGVuZChcImdcIik7XG4gIGNvbnN0IGRyYXdMb29wTGluZSA9IGZ1bmN0aW9uKHN0YXJ0eCwgc3RhcnR5LCBzdG9weCwgc3RvcHkpIHtcbiAgICByZXR1cm4gZy5hcHBlbmQoXCJsaW5lXCIpLmF0dHIoXCJ4MVwiLCBzdGFydHgpLmF0dHIoXCJ5MVwiLCBzdGFydHkpLmF0dHIoXCJ4MlwiLCBzdG9weCkuYXR0cihcInkyXCIsIHN0b3B5KS5hdHRyKFwiY2xhc3NcIiwgXCJsb29wTGluZVwiKTtcbiAgfTtcbiAgZHJhd0xvb3BMaW5lKGxvb3BNb2RlbC5zdGFydHgsIGxvb3BNb2RlbC5zdGFydHksIGxvb3BNb2RlbC5zdG9weCwgbG9vcE1vZGVsLnN0YXJ0eSk7XG4gIGRyYXdMb29wTGluZShsb29wTW9kZWwuc3RvcHgsIGxvb3BNb2RlbC5zdGFydHksIGxvb3BNb2RlbC5zdG9weCwgbG9vcE1vZGVsLnN0b3B5KTtcbiAgZHJhd0xvb3BMaW5lKGxvb3BNb2RlbC5zdGFydHgsIGxvb3BNb2RlbC5zdG9weSwgbG9vcE1vZGVsLnN0b3B4LCBsb29wTW9kZWwuc3RvcHkpO1xuICBkcmF3TG9vcExpbmUobG9vcE1vZGVsLnN0YXJ0eCwgbG9vcE1vZGVsLnN0YXJ0eSwgbG9vcE1vZGVsLnN0YXJ0eCwgbG9vcE1vZGVsLnN0b3B5KTtcbiAgaWYgKGxvb3BNb2RlbC5zZWN0aW9ucyAhPT0gdm9pZCAwKSB7XG4gICAgbG9vcE1vZGVsLnNlY3Rpb25zLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgZHJhd0xvb3BMaW5lKGxvb3BNb2RlbC5zdGFydHgsIGl0ZW0ueSwgbG9vcE1vZGVsLnN0b3B4LCBpdGVtLnkpLnN0eWxlKFxuICAgICAgICBcInN0cm9rZS1kYXNoYXJyYXlcIixcbiAgICAgICAgXCIzLCAzXCJcbiAgICAgICk7XG4gICAgfSk7XG4gIH1cbiAgbGV0IHR4dCA9IGdldFRleHRPYmokMSgpO1xuICB0eHQudGV4dCA9IGxhYmVsVGV4dDtcbiAgdHh0LnggPSBsb29wTW9kZWwuc3RhcnR4O1xuICB0eHQueSA9IGxvb3BNb2RlbC5zdGFydHk7XG4gIHR4dC5mb250RmFtaWx5ID0gZm9udEZhbWlseTtcbiAgdHh0LmZvbnRTaXplID0gZm9udFNpemU7XG4gIHR4dC5mb250V2VpZ2h0ID0gZm9udFdlaWdodDtcbiAgdHh0LmFuY2hvciA9IFwibWlkZGxlXCI7XG4gIHR4dC52YWxpZ24gPSBcIm1pZGRsZVwiO1xuICB0eHQudHNwYW4gPSBmYWxzZTtcbiAgdHh0LndpZHRoID0gbGFiZWxCb3hXaWR0aCB8fCA1MDtcbiAgdHh0LmhlaWdodCA9IGxhYmVsQm94SGVpZ2h0IHx8IDIwO1xuICB0eHQudGV4dE1hcmdpbiA9IGJveFRleHRNYXJnaW47XG4gIHR4dC5jbGFzcyA9IFwibGFiZWxUZXh0XCI7XG4gIGRyYXdMYWJlbChnLCB0eHQpO1xuICB0eHQgPSBnZXRUZXh0T2JqKCk7XG4gIHR4dC50ZXh0ID0gbG9vcE1vZGVsLnRpdGxlO1xuICB0eHQueCA9IGxvb3BNb2RlbC5zdGFydHggKyBsYWJlbEJveFdpZHRoIC8gMiArIChsb29wTW9kZWwuc3RvcHggLSBsb29wTW9kZWwuc3RhcnR4KSAvIDI7XG4gIHR4dC55ID0gbG9vcE1vZGVsLnN0YXJ0eSArIGJveE1hcmdpbiArIGJveFRleHRNYXJnaW47XG4gIHR4dC5hbmNob3IgPSBcIm1pZGRsZVwiO1xuICB0eHQudmFsaWduID0gXCJtaWRkbGVcIjtcbiAgdHh0LnRleHRNYXJnaW4gPSBib3hUZXh0TWFyZ2luO1xuICB0eHQuY2xhc3MgPSBcImxvb3BUZXh0XCI7XG4gIHR4dC5mb250RmFtaWx5ID0gZm9udEZhbWlseTtcbiAgdHh0LmZvbnRTaXplID0gZm9udFNpemU7XG4gIHR4dC5mb250V2VpZ2h0ID0gZm9udFdlaWdodDtcbiAgdHh0LndyYXAgPSB0cnVlO1xuICBsZXQgdGV4dEVsZW0gPSBoYXNLYXRleCh0eHQudGV4dCkgPyBhd2FpdCBkcmF3S2F0ZXgoZywgdHh0LCBsb29wTW9kZWwpIDogZHJhd1RleHQoZywgdHh0KTtcbiAgaWYgKGxvb3BNb2RlbC5zZWN0aW9uVGl0bGVzICE9PSB2b2lkIDApIHtcbiAgICBmb3IgKGNvbnN0IFtpZHgsIGl0ZW1dIG9mIE9iamVjdC5lbnRyaWVzKGxvb3BNb2RlbC5zZWN0aW9uVGl0bGVzKSkge1xuICAgICAgaWYgKGl0ZW0ubWVzc2FnZSkge1xuICAgICAgICB0eHQudGV4dCA9IGl0ZW0ubWVzc2FnZTtcbiAgICAgICAgdHh0LnggPSBsb29wTW9kZWwuc3RhcnR4ICsgKGxvb3BNb2RlbC5zdG9weCAtIGxvb3BNb2RlbC5zdGFydHgpIC8gMjtcbiAgICAgICAgdHh0LnkgPSBsb29wTW9kZWwuc2VjdGlvbnNbaWR4XS55ICsgYm94TWFyZ2luICsgYm94VGV4dE1hcmdpbjtcbiAgICAgICAgdHh0LmNsYXNzID0gXCJsb29wVGV4dFwiO1xuICAgICAgICB0eHQuYW5jaG9yID0gXCJtaWRkbGVcIjtcbiAgICAgICAgdHh0LnZhbGlnbiA9IFwibWlkZGxlXCI7XG4gICAgICAgIHR4dC50c3BhbiA9IGZhbHNlO1xuICAgICAgICB0eHQuZm9udEZhbWlseSA9IGZvbnRGYW1pbHk7XG4gICAgICAgIHR4dC5mb250U2l6ZSA9IGZvbnRTaXplO1xuICAgICAgICB0eHQuZm9udFdlaWdodCA9IGZvbnRXZWlnaHQ7XG4gICAgICAgIHR4dC53cmFwID0gbG9vcE1vZGVsLndyYXA7XG4gICAgICAgIGlmIChoYXNLYXRleCh0eHQudGV4dCkpIHtcbiAgICAgICAgICBsb29wTW9kZWwuc3RhcnR5ID0gbG9vcE1vZGVsLnNlY3Rpb25zW2lkeF0ueTtcbiAgICAgICAgICBhd2FpdCBkcmF3S2F0ZXgoZywgdHh0LCBsb29wTW9kZWwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRyYXdUZXh0KGcsIHR4dCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlY3Rpb25IZWlnaHQgPSBNYXRoLnJvdW5kKFxuICAgICAgICAgIHRleHRFbGVtLm1hcCgodGUpID0+ICh0ZS5fZ3JvdXBzIHx8IHRlKVswXVswXS5nZXRCQm94KCkuaGVpZ2h0KS5yZWR1Y2UoKGFjYywgY3VycikgPT4gYWNjICsgY3VycilcbiAgICAgICAgKTtcbiAgICAgICAgbG9vcE1vZGVsLnNlY3Rpb25zW2lkeF0uaGVpZ2h0ICs9IHNlY3Rpb25IZWlnaHQgLSAoYm94TWFyZ2luICsgYm94VGV4dE1hcmdpbik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGxvb3BNb2RlbC5oZWlnaHQgPSBNYXRoLnJvdW5kKGxvb3BNb2RlbC5zdG9weSAtIGxvb3BNb2RlbC5zdGFydHkpO1xuICByZXR1cm4gZztcbn07XG5jb25zdCBkcmF3QmFja2dyb3VuZFJlY3QgPSBmdW5jdGlvbihlbGVtLCBib3VuZHMyKSB7XG4gIGRyYXdCYWNrZ3JvdW5kUmVjdCQxKGVsZW0sIGJvdW5kczIpO1xufTtcbmNvbnN0IGluc2VydERhdGFiYXNlSWNvbiA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcInN5bWJvbFwiKS5hdHRyKFwiaWRcIiwgXCJkYXRhYmFzZVwiKS5hdHRyKFwiZmlsbC1ydWxlXCIsIFwiZXZlbm9kZFwiKS5hdHRyKFwiY2xpcC1ydWxlXCIsIFwiZXZlbm9kZFwiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJzY2FsZSguNSlcIikuYXR0cihcbiAgICBcImRcIixcbiAgICBcIk0xMi4yNTguMDAxbC4yNTYuMDA0LjI1NS4wMDUuMjUzLjAwOC4yNTEuMDEuMjQ5LjAxMi4yNDcuMDE1LjI0Ni4wMTYuMjQyLjAxOS4yNDEuMDIuMjM5LjAyMy4yMzYuMDI0LjIzMy4wMjcuMjMxLjAyOC4yMjkuMDMxLjIyNS4wMzIuMjIzLjAzNC4yMi4wMzYuMjE3LjAzOC4yMTQuMDQuMjExLjA0MS4yMDguMDQzLjIwNS4wNDUuMjAxLjA0Ni4xOTguMDQ4LjE5NC4wNS4xOTEuMDUxLjE4Ny4wNTMuMTgzLjA1NC4xOC4wNTYuMTc1LjA1Ny4xNzIuMDU5LjE2OC4wNi4xNjMuMDYxLjE2LjA2My4xNTUuMDY0LjE1LjA2Ni4wNzQuMDMzLjA3My4wMzMuMDcxLjAzNC4wNy4wMzQuMDY5LjAzNS4wNjguMDM1LjA2Ny4wMzUuMDY2LjAzNS4wNjQuMDM2LjA2NC4wMzYuMDYyLjAzNi4wNi4wMzYuMDYuMDM3LjA1OC4wMzcuMDU4LjAzNy4wNTUuMDM4LjA1NS4wMzguMDUzLjAzOC4wNTIuMDM4LjA1MS4wMzkuMDUuMDM5LjA0OC4wMzkuMDQ3LjAzOS4wNDUuMDQuMDQ0LjA0LjA0My4wNC4wNDEuMDQuMDQuMDQxLjAzOS4wNDEuMDM3LjA0MS4wMzYuMDQxLjAzNC4wNDEuMDMzLjA0Mi4wMzIuMDQyLjAzLjA0Mi4wMjkuMDQyLjAyNy4wNDIuMDI2LjA0My4wMjQuMDQzLjAyMy4wNDMuMDIxLjA0My4wMi4wNDMuMDE4LjA0NC4wMTcuMDQzLjAxNS4wNDQuMDEzLjA0NC4wMTIuMDQ0LjAxMS4wNDUuMDA5LjA0NC4wMDcuMDQ1LjAwNi4wNDUuMDA0LjA0NS4wMDIuMDQ1LjAwMS4wNDV2MTdsLS4wMDEuMDQ1LS4wMDIuMDQ1LS4wMDQuMDQ1LS4wMDYuMDQ1LS4wMDcuMDQ1LS4wMDkuMDQ0LS4wMTEuMDQ1LS4wMTIuMDQ0LS4wMTMuMDQ0LS4wMTUuMDQ0LS4wMTcuMDQzLS4wMTguMDQ0LS4wMi4wNDMtLjAyMS4wNDMtLjAyMy4wNDMtLjAyNC4wNDMtLjAyNi4wNDMtLjAyNy4wNDItLjAyOS4wNDItLjAzLjA0Mi0uMDMyLjA0Mi0uMDMzLjA0Mi0uMDM0LjA0MS0uMDM2LjA0MS0uMDM3LjA0MS0uMDM5LjA0MS0uMDQuMDQxLS4wNDEuMDQtLjA0My4wNC0uMDQ0LjA0LS4wNDUuMDQtLjA0Ny4wMzktLjA0OC4wMzktLjA1LjAzOS0uMDUxLjAzOS0uMDUyLjAzOC0uMDUzLjAzOC0uMDU1LjAzOC0uMDU1LjAzOC0uMDU4LjAzNy0uMDU4LjAzNy0uMDYuMDM3LS4wNi4wMzYtLjA2Mi4wMzYtLjA2NC4wMzYtLjA2NC4wMzYtLjA2Ni4wMzUtLjA2Ny4wMzUtLjA2OC4wMzUtLjA2OS4wMzUtLjA3LjAzNC0uMDcxLjAzNC0uMDczLjAzMy0uMDc0LjAzMy0uMTUuMDY2LS4xNTUuMDY0LS4xNi4wNjMtLjE2My4wNjEtLjE2OC4wNi0uMTcyLjA1OS0uMTc1LjA1Ny0uMTguMDU2LS4xODMuMDU0LS4xODcuMDUzLS4xOTEuMDUxLS4xOTQuMDUtLjE5OC4wNDgtLjIwMS4wNDYtLjIwNS4wNDUtLjIwOC4wNDMtLjIxMS4wNDEtLjIxNC4wNC0uMjE3LjAzOC0uMjIuMDM2LS4yMjMuMDM0LS4yMjUuMDMyLS4yMjkuMDMxLS4yMzEuMDI4LS4yMzMuMDI3LS4yMzYuMDI0LS4yMzkuMDIzLS4yNDEuMDItLjI0Mi4wMTktLjI0Ni4wMTYtLjI0Ny4wMTUtLjI0OS4wMTItLjI1MS4wMS0uMjUzLjAwOC0uMjU1LjAwNS0uMjU2LjAwNC0uMjU4LjAwMS0uMjU4LS4wMDEtLjI1Ni0uMDA0LS4yNTUtLjAwNS0uMjUzLS4wMDgtLjI1MS0uMDEtLjI0OS0uMDEyLS4yNDctLjAxNS0uMjQ1LS4wMTYtLjI0My0uMDE5LS4yNDEtLjAyLS4yMzgtLjAyMy0uMjM2LS4wMjQtLjIzNC0uMDI3LS4yMzEtLjAyOC0uMjI4LS4wMzEtLjIyNi0uMDMyLS4yMjMtLjAzNC0uMjItLjAzNi0uMjE3LS4wMzgtLjIxNC0uMDQtLjIxMS0uMDQxLS4yMDgtLjA0My0uMjA0LS4wNDUtLjIwMS0uMDQ2LS4xOTgtLjA0OC0uMTk1LS4wNS0uMTktLjA1MS0uMTg3LS4wNTMtLjE4NC0uMDU0LS4xNzktLjA1Ni0uMTc2LS4wNTctLjE3Mi0uMDU5LS4xNjctLjA2LS4xNjQtLjA2MS0uMTU5LS4wNjMtLjE1NS0uMDY0LS4xNTEtLjA2Ni0uMDc0LS4wMzMtLjA3Mi0uMDMzLS4wNzItLjAzNC0uMDctLjAzNC0uMDY5LS4wMzUtLjA2OC0uMDM1LS4wNjctLjAzNS0uMDY2LS4wMzUtLjA2NC0uMDM2LS4wNjMtLjAzNi0uMDYyLS4wMzYtLjA2MS0uMDM2LS4wNi0uMDM3LS4wNTgtLjAzNy0uMDU3LS4wMzctLjA1Ni0uMDM4LS4wNTUtLjAzOC0uMDUzLS4wMzgtLjA1Mi0uMDM4LS4wNTEtLjAzOS0uMDQ5LS4wMzktLjA0OS0uMDM5LS4wNDYtLjAzOS0uMDQ2LS4wNC0uMDQ0LS4wNC0uMDQzLS4wNC0uMDQxLS4wNC0uMDQtLjA0MS0uMDM5LS4wNDEtLjAzNy0uMDQxLS4wMzYtLjA0MS0uMDM0LS4wNDEtLjAzMy0uMDQyLS4wMzItLjA0Mi0uMDMtLjA0Mi0uMDI5LS4wNDItLjAyNy0uMDQyLS4wMjYtLjA0My0uMDI0LS4wNDMtLjAyMy0uMDQzLS4wMjEtLjA0My0uMDItLjA0My0uMDE4LS4wNDQtLjAxNy0uMDQzLS4wMTUtLjA0NC0uMDEzLS4wNDQtLjAxMi0uMDQ0LS4wMTEtLjA0NS0uMDA5LS4wNDQtLjAwNy0uMDQ1LS4wMDYtLjA0NS0uMDA0LS4wNDUtLjAwMi0uMDQ1LS4wMDEtLjA0NXYtMTdsLjAwMS0uMDQ1LjAwMi0uMDQ1LjAwNC0uMDQ1LjAwNi0uMDQ1LjAwNy0uMDQ1LjAwOS0uMDQ0LjAxMS0uMDQ1LjAxMi0uMDQ0LjAxMy0uMDQ0LjAxNS0uMDQ0LjAxNy0uMDQzLjAxOC0uMDQ0LjAyLS4wNDMuMDIxLS4wNDMuMDIzLS4wNDMuMDI0LS4wNDMuMDI2LS4wNDMuMDI3LS4wNDIuMDI5LS4wNDIuMDMtLjA0Mi4wMzItLjA0Mi4wMzMtLjA0Mi4wMzQtLjA0MS4wMzYtLjA0MS4wMzctLjA0MS4wMzktLjA0MS4wNC0uMDQxLjA0MS0uMDQuMDQzLS4wNC4wNDQtLjA0LjA0Ni0uMDQuMDQ2LS4wMzkuMDQ5LS4wMzkuMDQ5LS4wMzkuMDUxLS4wMzkuMDUyLS4wMzguMDUzLS4wMzguMDU1LS4wMzguMDU2LS4wMzguMDU3LS4wMzcuMDU4LS4wMzcuMDYtLjAzNy4wNjEtLjAzNi4wNjItLjAzNi4wNjMtLjAzNi4wNjQtLjAzNi4wNjYtLjAzNS4wNjctLjAzNS4wNjgtLjAzNS4wNjktLjAzNS4wNy0uMDM0LjA3Mi0uMDM0LjA3Mi0uMDMzLjA3NC0uMDMzLjE1MS0uMDY2LjE1NS0uMDY0LjE1OS0uMDYzLjE2NC0uMDYxLjE2Ny0uMDYuMTcyLS4wNTkuMTc2LS4wNTcuMTc5LS4wNTYuMTg0LS4wNTQuMTg3LS4wNTMuMTktLjA1MS4xOTUtLjA1LjE5OC0uMDQ4LjIwMS0uMDQ2LjIwNC0uMDQ1LjIwOC0uMDQzLjIxMS0uMDQxLjIxNC0uMDQuMjE3LS4wMzguMjItLjAzNi4yMjMtLjAzNC4yMjYtLjAzMi4yMjgtLjAzMS4yMzEtLjAyOC4yMzQtLjAyNy4yMzYtLjAyNC4yMzgtLjAyMy4yNDEtLjAyLjI0My0uMDE5LjI0NS0uMDE2LjI0Ny0uMDE1LjI0OS0uMDEyLjI1MS0uMDEuMjUzLS4wMDguMjU1LS4wMDUuMjU2LS4wMDQuMjU4LS4wMDEuMjU4LjAwMXptLTkuMjU4IDIwLjQ5OXYuMDFsLjAwMS4wMjEuMDAzLjAyMS4wMDQuMDIyLjAwNS4wMjEuMDA2LjAyMi4wMDcuMDIyLjAwOS4wMjMuMDEuMDIyLjAxMS4wMjMuMDEyLjAyMy4wMTMuMDIzLjAxNS4wMjMuMDE2LjAyNC4wMTcuMDIzLjAxOC4wMjQuMDE5LjAyNC4wMjEuMDI0LjAyMi4wMjUuMDIzLjAyNC4wMjQuMDI1LjA1Mi4wNDkuMDU2LjA1LjA2MS4wNTEuMDY2LjA1MS4wNy4wNTEuMDc1LjA1MS4wNzkuMDUyLjA4NC4wNTIuMDg4LjA1Mi4wOTIuMDUyLjA5Ny4wNTIuMTAyLjA1MS4xMDUuMDUyLjExLjA1Mi4xMTQuMDUxLjExOS4wNTEuMTIzLjA1MS4xMjcuMDUuMTMxLjA1LjEzNS4wNS4xMzkuMDQ4LjE0NC4wNDkuMTQ3LjA0Ny4xNTIuMDQ3LjE1NS4wNDcuMTYuMDQ1LjE2My4wNDUuMTY3LjA0My4xNzEuMDQzLjE3Ni4wNDEuMTc4LjA0MS4xODMuMDM5LjE4Ny4wMzkuMTkuMDM3LjE5NC4wMzUuMTk3LjAzNS4yMDIuMDMzLjIwNC4wMzEuMjA5LjAzLjIxMi4wMjkuMjE2LjAyNy4yMTkuMDI1LjIyMi4wMjQuMjI2LjAyMS4yMy4wMi4yMzMuMDE4LjIzNi4wMTYuMjQuMDE1LjI0My4wMTIuMjQ2LjAxLjI0OS4wMDguMjUzLjAwNS4yNTYuMDA0LjI1OS4wMDEuMjYtLjAwMS4yNTctLjAwNC4yNTQtLjAwNS4yNS0uMDA4LjI0Ny0uMDExLjI0NC0uMDEyLjI0MS0uMDE0LjIzNy0uMDE2LjIzMy0uMDE4LjIzMS0uMDIxLjIyNi0uMDIxLjIyNC0uMDI0LjIyLS4wMjYuMjE2LS4wMjcuMjEyLS4wMjguMjEtLjAzMS4yMDUtLjAzMS4yMDItLjAzNC4xOTgtLjAzNC4xOTQtLjAzNi4xOTEtLjAzNy4xODctLjAzOS4xODMtLjA0LjE3OS0uMDQuMTc1LS4wNDIuMTcyLS4wNDMuMTY4LS4wNDQuMTYzLS4wNDUuMTYtLjA0Ni4xNTUtLjA0Ni4xNTItLjA0Ny4xNDgtLjA0OC4xNDMtLjA0OS4xMzktLjA0OS4xMzYtLjA1LjEzMS0uMDUuMTI2LS4wNS4xMjMtLjA1MS4xMTgtLjA1Mi4xMTQtLjA1MS4xMS0uMDUyLjEwNi0uMDUyLjEwMS0uMDUyLjA5Ni0uMDUyLjA5Mi0uMDUyLjA4OC0uMDUzLjA4My0uMDUxLjA3OS0uMDUyLjA3NC0uMDUyLjA3LS4wNTEuMDY1LS4wNTEuMDYtLjA1MS4wNTYtLjA1LjA1MS0uMDUuMDIzLS4wMjQuMDIzLS4wMjUuMDIxLS4wMjQuMDItLjAyNC4wMTktLjAyNC4wMTgtLjAyNC4wMTctLjAyNC4wMTUtLjAyMy4wMTQtLjAyNC4wMTMtLjAyMy4wMTItLjAyMy4wMS0uMDIzLjAxLS4wMjIuMDA4LS4wMjIuMDA2LS4wMjIuMDA2LS4wMjIuMDA0LS4wMjIuMDA0LS4wMjEuMDAxLS4wMjEuMDAxLS4wMjF2LTQuMTI3bC0uMDc3LjA1NS0uMDguMDUzLS4wODMuMDU0LS4wODUuMDUzLS4wODcuMDUyLS4wOS4wNTItLjA5My4wNTEtLjA5NS4wNS0uMDk3LjA1LS4xLjA0OS0uMTAyLjA0OS0uMTA1LjA0OC0uMTA2LjA0Ny0uMTA5LjA0Ny0uMTExLjA0Ni0uMTE0LjA0NS0uMTE1LjA0NS0uMTE4LjA0NC0uMTIuMDQzLS4xMjIuMDQyLS4xMjQuMDQyLS4xMjYuMDQxLS4xMjguMDQtLjEzLjA0LS4xMzIuMDM4LS4xMzQuMDM4LS4xMzUuMDM3LS4xMzguMDM3LS4xMzkuMDM1LS4xNDIuMDM1LS4xNDMuMDM0LS4xNDQuMDMzLS4xNDcuMDMyLS4xNDguMDMxLS4xNS4wMy0uMTUxLjAzLS4xNTMuMDI5LS4xNTQuMDI3LS4xNTYuMDI3LS4xNTguMDI2LS4xNTkuMDI1LS4xNjEuMDI0LS4xNjIuMDIzLS4xNjMuMDIyLS4xNjUuMDIxLS4xNjYuMDItLjE2Ny4wMTktLjE2OS4wMTgtLjE2OS4wMTctLjE3MS4wMTYtLjE3My4wMTUtLjE3My4wMTQtLjE3NS4wMTMtLjE3NS4wMTItLjE3Ny4wMTEtLjE3OC4wMS0uMTc5LjAwOC0uMTc5LjAwOC0uMTgxLjAwNi0uMTgyLjAwNS0uMTgyLjAwNC0uMTg0LjAwMy0uMTg0LjAwMmgtLjM3bC0uMTg0LS4wMDItLjE4NC0uMDAzLS4xODItLjAwNC0uMTgyLS4wMDUtLjE4MS0uMDA2LS4xNzktLjAwOC0uMTc5LS4wMDgtLjE3OC0uMDEtLjE3Ni0uMDExLS4xNzYtLjAxMi0uMTc1LS4wMTMtLjE3My0uMDE0LS4xNzItLjAxNS0uMTcxLS4wMTYtLjE3LS4wMTctLjE2OS0uMDE4LS4xNjctLjAxOS0uMTY2LS4wMi0uMTY1LS4wMjEtLjE2My0uMDIyLS4xNjItLjAyMy0uMTYxLS4wMjQtLjE1OS0uMDI1LS4xNTctLjAyNi0uMTU2LS4wMjctLjE1NS0uMDI3LS4xNTMtLjAyOS0uMTUxLS4wMy0uMTUtLjAzLS4xNDgtLjAzMS0uMTQ2LS4wMzItLjE0NS0uMDMzLS4xNDMtLjAzNC0uMTQxLS4wMzUtLjE0LS4wMzUtLjEzNy0uMDM3LS4xMzYtLjAzNy0uMTM0LS4wMzgtLjEzMi0uMDM4LS4xMy0uMDQtLjEyOC0uMDQtLjEyNi0uMDQxLS4xMjQtLjA0Mi0uMTIyLS4wNDItLjEyLS4wNDQtLjExNy0uMDQzLS4xMTYtLjA0NS0uMTEzLS4wNDUtLjExMi0uMDQ2LS4xMDktLjA0Ny0uMTA2LS4wNDctLjEwNS0uMDQ4LS4xMDItLjA0OS0uMS0uMDQ5LS4wOTctLjA1LS4wOTUtLjA1LS4wOTMtLjA1Mi0uMDktLjA1MS0uMDg3LS4wNTItLjA4NS0uMDUzLS4wODMtLjA1NC0uMDgtLjA1NC0uMDc3LS4wNTR2NC4xMjd6bTAtNS42NTR2LjAxMWwuMDAxLjAyMS4wMDMuMDIxLjAwNC4wMjEuMDA1LjAyMi4wMDYuMDIyLjAwNy4wMjIuMDA5LjAyMi4wMS4wMjIuMDExLjAyMy4wMTIuMDIzLjAxMy4wMjMuMDE1LjAyNC4wMTYuMDIzLjAxNy4wMjQuMDE4LjAyNC4wMTkuMDI0LjAyMS4wMjQuMDIyLjAyNC4wMjMuMDI1LjAyNC4wMjQuMDUyLjA1LjA1Ni4wNS4wNjEuMDUuMDY2LjA1MS4wNy4wNTEuMDc1LjA1Mi4wNzkuMDUxLjA4NC4wNTIuMDg4LjA1Mi4wOTIuMDUyLjA5Ny4wNTIuMTAyLjA1Mi4xMDUuMDUyLjExLjA1MS4xMTQuMDUxLjExOS4wNTIuMTIzLjA1LjEyNy4wNTEuMTMxLjA1LjEzNS4wNDkuMTM5LjA0OS4xNDQuMDQ4LjE0Ny4wNDguMTUyLjA0Ny4xNTUuMDQ2LjE2LjA0NS4xNjMuMDQ1LjE2Ny4wNDQuMTcxLjA0Mi4xNzYuMDQyLjE3OC4wNC4xODMuMDQuMTg3LjAzOC4xOS4wMzcuMTk0LjAzNi4xOTcuMDM0LjIwMi4wMzMuMjA0LjAzMi4yMDkuMDMuMjEyLjAyOC4yMTYuMDI3LjIxOS4wMjUuMjIyLjAyNC4yMjYuMDIyLjIzLjAyLjIzMy4wMTguMjM2LjAxNi4yNC4wMTQuMjQzLjAxMi4yNDYuMDEuMjQ5LjAwOC4yNTMuMDA2LjI1Ni4wMDMuMjU5LjAwMS4yNi0uMDAxLjI1Ny0uMDAzLjI1NC0uMDA2LjI1LS4wMDguMjQ3LS4wMS4yNDQtLjAxMi4yNDEtLjAxNS4yMzctLjAxNi4yMzMtLjAxOC4yMzEtLjAyLjIyNi0uMDIyLjIyNC0uMDI0LjIyLS4wMjUuMjE2LS4wMjcuMjEyLS4wMjkuMjEtLjAzLjIwNS0uMDMyLjIwMi0uMDMzLjE5OC0uMDM1LjE5NC0uMDM2LjE5MS0uMDM3LjE4Ny0uMDM5LjE4My0uMDM5LjE3OS0uMDQxLjE3NS0uMDQyLjE3Mi0uMDQzLjE2OC0uMDQ0LjE2My0uMDQ1LjE2LS4wNDUuMTU1LS4wNDcuMTUyLS4wNDcuMTQ4LS4wNDguMTQzLS4wNDguMTM5LS4wNS4xMzYtLjA0OS4xMzEtLjA1LjEyNi0uMDUxLjEyMy0uMDUxLjExOC0uMDUxLjExNC0uMDUyLjExLS4wNTIuMTA2LS4wNTIuMTAxLS4wNTIuMDk2LS4wNTIuMDkyLS4wNTIuMDg4LS4wNTIuMDgzLS4wNTIuMDc5LS4wNTIuMDc0LS4wNTEuMDctLjA1Mi4wNjUtLjA1MS4wNi0uMDUuMDU2LS4wNTEuMDUxLS4wNDkuMDIzLS4wMjUuMDIzLS4wMjQuMDIxLS4wMjUuMDItLjAyNC4wMTktLjAyNC4wMTgtLjAyNC4wMTctLjAyNC4wMTUtLjAyMy4wMTQtLjAyMy4wMTMtLjAyNC4wMTItLjAyMi4wMS0uMDIzLjAxLS4wMjMuMDA4LS4wMjIuMDA2LS4wMjIuMDA2LS4wMjIuMDA0LS4wMjEuMDA0LS4wMjIuMDAxLS4wMjEuMDAxLS4wMjF2LTQuMTM5bC0uMDc3LjA1NC0uMDguMDU0LS4wODMuMDU0LS4wODUuMDUyLS4wODcuMDUzLS4wOS4wNTEtLjA5My4wNTEtLjA5NS4wNTEtLjA5Ny4wNS0uMS4wNDktLjEwMi4wNDktLjEwNS4wNDgtLjEwNi4wNDctLjEwOS4wNDctLjExMS4wNDYtLjExNC4wNDUtLjExNS4wNDQtLjExOC4wNDQtLjEyLjA0NC0uMTIyLjA0Mi0uMTI0LjA0Mi0uMTI2LjA0MS0uMTI4LjA0LS4xMy4wMzktLjEzMi4wMzktLjEzNC4wMzgtLjEzNS4wMzctLjEzOC4wMzYtLjEzOS4wMzYtLjE0Mi4wMzUtLjE0My4wMzMtLjE0NC4wMzMtLjE0Ny4wMzMtLjE0OC4wMzEtLjE1LjAzLS4xNTEuMDMtLjE1My4wMjgtLjE1NC4wMjgtLjE1Ni4wMjctLjE1OC4wMjYtLjE1OS4wMjUtLjE2MS4wMjQtLjE2Mi4wMjMtLjE2My4wMjItLjE2NS4wMjEtLjE2Ni4wMi0uMTY3LjAxOS0uMTY5LjAxOC0uMTY5LjAxNy0uMTcxLjAxNi0uMTczLjAxNS0uMTczLjAxNC0uMTc1LjAxMy0uMTc1LjAxMi0uMTc3LjAxMS0uMTc4LjAwOS0uMTc5LjAwOS0uMTc5LjAwNy0uMTgxLjAwNy0uMTgyLjAwNS0uMTgyLjAwNC0uMTg0LjAwMy0uMTg0LjAwMmgtLjM3bC0uMTg0LS4wMDItLjE4NC0uMDAzLS4xODItLjAwNC0uMTgyLS4wMDUtLjE4MS0uMDA3LS4xNzktLjAwNy0uMTc5LS4wMDktLjE3OC0uMDA5LS4xNzYtLjAxMS0uMTc2LS4wMTItLjE3NS0uMDEzLS4xNzMtLjAxNC0uMTcyLS4wMTUtLjE3MS0uMDE2LS4xNy0uMDE3LS4xNjktLjAxOC0uMTY3LS4wMTktLjE2Ni0uMDItLjE2NS0uMDIxLS4xNjMtLjAyMi0uMTYyLS4wMjMtLjE2MS0uMDI0LS4xNTktLjAyNS0uMTU3LS4wMjYtLjE1Ni0uMDI3LS4xNTUtLjAyOC0uMTUzLS4wMjgtLjE1MS0uMDMtLjE1LS4wMy0uMTQ4LS4wMzEtLjE0Ni0uMDMzLS4xNDUtLjAzMy0uMTQzLS4wMzMtLjE0MS0uMDM1LS4xNC0uMDM2LS4xMzctLjAzNi0uMTM2LS4wMzctLjEzNC0uMDM4LS4xMzItLjAzOS0uMTMtLjAzOS0uMTI4LS4wNC0uMTI2LS4wNDEtLjEyNC0uMDQyLS4xMjItLjA0My0uMTItLjA0My0uMTE3LS4wNDQtLjExNi0uMDQ0LS4xMTMtLjA0Ni0uMTEyLS4wNDYtLjEwOS0uMDQ2LS4xMDYtLjA0Ny0uMTA1LS4wNDgtLjEwMi0uMDQ5LS4xLS4wNDktLjA5Ny0uMDUtLjA5NS0uMDUxLS4wOTMtLjA1MS0uMDktLjA1MS0uMDg3LS4wNTMtLjA4NS0uMDUyLS4wODMtLjA1NC0uMDgtLjA1NC0uMDc3LS4wNTR2NC4xMzl6bTAtNS42NjZ2LjAxMWwuMDAxLjAyLjAwMy4wMjIuMDA0LjAyMS4wMDUuMDIyLjAwNi4wMjEuMDA3LjAyMi4wMDkuMDIzLjAxLjAyMi4wMTEuMDIzLjAxMi4wMjMuMDEzLjAyMy4wMTUuMDIzLjAxNi4wMjQuMDE3LjAyNC4wMTguMDIzLjAxOS4wMjQuMDIxLjAyNS4wMjIuMDI0LjAyMy4wMjQuMDI0LjAyNS4wNTIuMDUuMDU2LjA1LjA2MS4wNS4wNjYuMDUxLjA3LjA1MS4wNzUuMDUyLjA3OS4wNTEuMDg0LjA1Mi4wODguMDUyLjA5Mi4wNTIuMDk3LjA1Mi4xMDIuMDUyLjEwNS4wNTEuMTEuMDUyLjExNC4wNTEuMTE5LjA1MS4xMjMuMDUxLjEyNy4wNS4xMzEuMDUuMTM1LjA1LjEzOS4wNDkuMTQ0LjA0OC4xNDcuMDQ4LjE1Mi4wNDcuMTU1LjA0Ni4xNi4wNDUuMTYzLjA0NS4xNjcuMDQzLjE3MS4wNDMuMTc2LjA0Mi4xNzguMDQuMTgzLjA0LjE4Ny4wMzguMTkuMDM3LjE5NC4wMzYuMTk3LjAzNC4yMDIuMDMzLjIwNC4wMzIuMjA5LjAzLjIxMi4wMjguMjE2LjAyNy4yMTkuMDI1LjIyMi4wMjQuMjI2LjAyMS4yMy4wMi4yMzMuMDE4LjIzNi4wMTcuMjQuMDE0LjI0My4wMTIuMjQ2LjAxLjI0OS4wMDguMjUzLjAwNi4yNTYuMDAzLjI1OS4wMDEuMjYtLjAwMS4yNTctLjAwMy4yNTQtLjAwNi4yNS0uMDA4LjI0Ny0uMDEuMjQ0LS4wMTMuMjQxLS4wMTQuMjM3LS4wMTYuMjMzLS4wMTguMjMxLS4wMi4yMjYtLjAyMi4yMjQtLjAyNC4yMi0uMDI1LjIxNi0uMDI3LjIxMi0uMDI5LjIxLS4wMy4yMDUtLjAzMi4yMDItLjAzMy4xOTgtLjAzNS4xOTQtLjAzNi4xOTEtLjAzNy4xODctLjAzOS4xODMtLjAzOS4xNzktLjA0MS4xNzUtLjA0Mi4xNzItLjA0My4xNjgtLjA0NC4xNjMtLjA0NS4xNi0uMDQ1LjE1NS0uMDQ3LjE1Mi0uMDQ3LjE0OC0uMDQ4LjE0My0uMDQ5LjEzOS0uMDQ5LjEzNi0uMDQ5LjEzMS0uMDUxLjEyNi0uMDUuMTIzLS4wNTEuMTE4LS4wNTIuMTE0LS4wNTEuMTEtLjA1Mi4xMDYtLjA1Mi4xMDEtLjA1Mi4wOTYtLjA1Mi4wOTItLjA1Mi4wODgtLjA1Mi4wODMtLjA1Mi4wNzktLjA1Mi4wNzQtLjA1Mi4wNy0uMDUxLjA2NS0uMDUxLjA2LS4wNTEuMDU2LS4wNS4wNTEtLjA0OS4wMjMtLjAyNS4wMjMtLjAyNS4wMjEtLjAyNC4wMi0uMDI0LjAxOS0uMDI0LjAxOC0uMDI0LjAxNy0uMDI0LjAxNS0uMDIzLjAxNC0uMDI0LjAxMy0uMDIzLjAxMi0uMDIzLjAxLS4wMjIuMDEtLjAyMy4wMDgtLjAyMi4wMDYtLjAyMi4wMDYtLjAyMi4wMDQtLjAyMi4wMDQtLjAyMS4wMDEtLjAyMS4wMDEtLjAyMXYtNC4xNTNsLS4wNzcuMDU0LS4wOC4wNTQtLjA4My4wNTMtLjA4NS4wNTMtLjA4Ny4wNTMtLjA5LjA1MS0uMDkzLjA1MS0uMDk1LjA1MS0uMDk3LjA1LS4xLjA0OS0uMTAyLjA0OC0uMTA1LjA0OC0uMTA2LjA0OC0uMTA5LjA0Ni0uMTExLjA0Ni0uMTE0LjA0Ni0uMTE1LjA0NC0uMTE4LjA0NC0uMTIuMDQzLS4xMjIuMDQzLS4xMjQuMDQyLS4xMjYuMDQxLS4xMjguMDQtLjEzLjAzOS0uMTMyLjAzOS0uMTM0LjAzOC0uMTM1LjAzNy0uMTM4LjAzNi0uMTM5LjAzNi0uMTQyLjAzNC0uMTQzLjAzNC0uMTQ0LjAzMy0uMTQ3LjAzMi0uMTQ4LjAzMi0uMTUuMDMtLjE1MS4wMy0uMTUzLjAyOC0uMTU0LjAyOC0uMTU2LjAyNy0uMTU4LjAyNi0uMTU5LjAyNC0uMTYxLjAyNC0uMTYyLjAyMy0uMTYzLjAyMy0uMTY1LjAyMS0uMTY2LjAyLS4xNjcuMDE5LS4xNjkuMDE4LS4xNjkuMDE3LS4xNzEuMDE2LS4xNzMuMDE1LS4xNzMuMDE0LS4xNzUuMDEzLS4xNzUuMDEyLS4xNzcuMDEtLjE3OC4wMS0uMTc5LjAwOS0uMTc5LjAwNy0uMTgxLjAwNi0uMTgyLjAwNi0uMTgyLjAwNC0uMTg0LjAwMy0uMTg0LjAwMS0uMTg1LjAwMS0uMTg1LS4wMDEtLjE4NC0uMDAxLS4xODQtLjAwMy0uMTgyLS4wMDQtLjE4Mi0uMDA2LS4xODEtLjAwNi0uMTc5LS4wMDctLjE3OS0uMDA5LS4xNzgtLjAxLS4xNzYtLjAxLS4xNzYtLjAxMi0uMTc1LS4wMTMtLjE3My0uMDE0LS4xNzItLjAxNS0uMTcxLS4wMTYtLjE3LS4wMTctLjE2OS0uMDE4LS4xNjctLjAxOS0uMTY2LS4wMi0uMTY1LS4wMjEtLjE2My0uMDIzLS4xNjItLjAyMy0uMTYxLS4wMjQtLjE1OS0uMDI0LS4xNTctLjAyNi0uMTU2LS4wMjctLjE1NS0uMDI4LS4xNTMtLjAyOC0uMTUxLS4wMy0uMTUtLjAzLS4xNDgtLjAzMi0uMTQ2LS4wMzItLjE0NS0uMDMzLS4xNDMtLjAzNC0uMTQxLS4wMzQtLjE0LS4wMzYtLjEzNy0uMDM2LS4xMzYtLjAzNy0uMTM0LS4wMzgtLjEzMi0uMDM5LS4xMy0uMDM5LS4xMjgtLjA0MS0uMTI2LS4wNDEtLjEyNC0uMDQxLS4xMjItLjA0My0uMTItLjA0My0uMTE3LS4wNDQtLjExNi0uMDQ0LS4xMTMtLjA0Ni0uMTEyLS4wNDYtLjEwOS0uMDQ2LS4xMDYtLjA0OC0uMTA1LS4wNDgtLjEwMi0uMDQ4LS4xLS4wNS0uMDk3LS4wNDktLjA5NS0uMDUxLS4wOTMtLjA1MS0uMDktLjA1Mi0uMDg3LS4wNTItLjA4NS0uMDUzLS4wODMtLjA1My0uMDgtLjA1NC0uMDc3LS4wNTR2NC4xNTN6bTguNzQtOC4xNzlsLS4yNTcuMDA0LS4yNTQuMDA1LS4yNS4wMDgtLjI0Ny4wMTEtLjI0NC4wMTItLjI0MS4wMTQtLjIzNy4wMTYtLjIzMy4wMTgtLjIzMS4wMjEtLjIyNi4wMjItLjIyNC4wMjMtLjIyLjAyNi0uMjE2LjAyNy0uMjEyLjAyOC0uMjEuMDMxLS4yMDUuMDMyLS4yMDIuMDMzLS4xOTguMDM0LS4xOTQuMDM2LS4xOTEuMDM4LS4xODcuMDM4LS4xODMuMDQtLjE3OS4wNDEtLjE3NS4wNDItLjE3Mi4wNDMtLjE2OC4wNDMtLjE2My4wNDUtLjE2LjA0Ni0uMTU1LjA0Ni0uMTUyLjA0OC0uMTQ4LjA0OC0uMTQzLjA0OC0uMTM5LjA0OS0uMTM2LjA1LS4xMzEuMDUtLjEyNi4wNTEtLjEyMy4wNTEtLjExOC4wNTEtLjExNC4wNTItLjExLjA1Mi0uMTA2LjA1Mi0uMTAxLjA1Mi0uMDk2LjA1Mi0uMDkyLjA1Mi0uMDg4LjA1Mi0uMDgzLjA1Mi0uMDc5LjA1Mi0uMDc0LjA1MS0uMDcuMDUyLS4wNjUuMDUxLS4wNi4wNS0uMDU2LjA1LS4wNTEuMDUtLjAyMy4wMjUtLjAyMy4wMjQtLjAyMS4wMjQtLjAyLjAyNS0uMDE5LjAyNC0uMDE4LjAyNC0uMDE3LjAyMy0uMDE1LjAyNC0uMDE0LjAyMy0uMDEzLjAyMy0uMDEyLjAyMy0uMDEuMDIzLS4wMS4wMjItLjAwOC4wMjItLjAwNi4wMjMtLjAwNi4wMjEtLjAwNC4wMjItLjAwNC4wMjEtLjAwMS4wMjEtLjAwMS4wMjEuMDAxLjAyMS4wMDEuMDIxLjAwNC4wMjEuMDA0LjAyMi4wMDYuMDIxLjAwNi4wMjMuMDA4LjAyMi4wMS4wMjIuMDEuMDIzLjAxMi4wMjMuMDEzLjAyMy4wMTQuMDIzLjAxNS4wMjQuMDE3LjAyMy4wMTguMDI0LjAxOS4wMjQuMDIuMDI1LjAyMS4wMjQuMDIzLjAyNC4wMjMuMDI1LjA1MS4wNS4wNTYuMDUuMDYuMDUuMDY1LjA1MS4wNy4wNTIuMDc0LjA1MS4wNzkuMDUyLjA4My4wNTIuMDg4LjA1Mi4wOTIuMDUyLjA5Ni4wNTIuMTAxLjA1Mi4xMDYuMDUyLjExLjA1Mi4xMTQuMDUyLjExOC4wNTEuMTIzLjA1MS4xMjYuMDUxLjEzMS4wNS4xMzYuMDUuMTM5LjA0OS4xNDMuMDQ4LjE0OC4wNDguMTUyLjA0OC4xNTUuMDQ2LjE2LjA0Ni4xNjMuMDQ1LjE2OC4wNDMuMTcyLjA0My4xNzUuMDQyLjE3OS4wNDEuMTgzLjA0LjE4Ny4wMzguMTkxLjAzOC4xOTQuMDM2LjE5OC4wMzQuMjAyLjAzMy4yMDUuMDMyLjIxLjAzMS4yMTIuMDI4LjIxNi4wMjcuMjIuMDI2LjIyNC4wMjMuMjI2LjAyMi4yMzEuMDIxLjIzMy4wMTguMjM3LjAxNi4yNDEuMDE0LjI0NC4wMTIuMjQ3LjAxMS4yNS4wMDguMjU0LjAwNS4yNTcuMDA0LjI2LjAwMS4yNi0uMDAxLjI1Ny0uMDA0LjI1NC0uMDA1LjI1LS4wMDguMjQ3LS4wMTEuMjQ0LS4wMTIuMjQxLS4wMTQuMjM3LS4wMTYuMjMzLS4wMTguMjMxLS4wMjEuMjI2LS4wMjIuMjI0LS4wMjMuMjItLjAyNi4yMTYtLjAyNy4yMTItLjAyOC4yMS0uMDMxLjIwNS0uMDMyLjIwMi0uMDMzLjE5OC0uMDM0LjE5NC0uMDM2LjE5MS0uMDM4LjE4Ny0uMDM4LjE4My0uMDQuMTc5LS4wNDEuMTc1LS4wNDIuMTcyLS4wNDMuMTY4LS4wNDMuMTYzLS4wNDUuMTYtLjA0Ni4xNTUtLjA0Ni4xNTItLjA0OC4xNDgtLjA0OC4xNDMtLjA0OC4xMzktLjA0OS4xMzYtLjA1LjEzMS0uMDUuMTI2LS4wNTEuMTIzLS4wNTEuMTE4LS4wNTEuMTE0LS4wNTIuMTEtLjA1Mi4xMDYtLjA1Mi4xMDEtLjA1Mi4wOTYtLjA1Mi4wOTItLjA1Mi4wODgtLjA1Mi4wODMtLjA1Mi4wNzktLjA1Mi4wNzQtLjA1MS4wNy0uMDUyLjA2NS0uMDUxLjA2LS4wNS4wNTYtLjA1LjA1MS0uMDUuMDIzLS4wMjUuMDIzLS4wMjQuMDIxLS4wMjQuMDItLjAyNS4wMTktLjAyNC4wMTgtLjAyNC4wMTctLjAyMy4wMTUtLjAyNC4wMTQtLjAyMy4wMTMtLjAyMy4wMTItLjAyMy4wMS0uMDIzLjAxLS4wMjIuMDA4LS4wMjIuMDA2LS4wMjMuMDA2LS4wMjEuMDA0LS4wMjIuMDA0LS4wMjEuMDAxLS4wMjEuMDAxLS4wMjEtLjAwMS0uMDIxLS4wMDEtLjAyMS0uMDA0LS4wMjEtLjAwNC0uMDIyLS4wMDYtLjAyMS0uMDA2LS4wMjMtLjAwOC0uMDIyLS4wMS0uMDIyLS4wMS0uMDIzLS4wMTItLjAyMy0uMDEzLS4wMjMtLjAxNC0uMDIzLS4wMTUtLjAyNC0uMDE3LS4wMjMtLjAxOC0uMDI0LS4wMTktLjAyNC0uMDItLjAyNS0uMDIxLS4wMjQtLjAyMy0uMDI0LS4wMjMtLjAyNS0uMDUxLS4wNS0uMDU2LS4wNS0uMDYtLjA1LS4wNjUtLjA1MS0uMDctLjA1Mi0uMDc0LS4wNTEtLjA3OS0uMDUyLS4wODMtLjA1Mi0uMDg4LS4wNTItLjA5Mi0uMDUyLS4wOTYtLjA1Mi0uMTAxLS4wNTItLjEwNi0uMDUyLS4xMS0uMDUyLS4xMTQtLjA1Mi0uMTE4LS4wNTEtLjEyMy0uMDUxLS4xMjYtLjA1MS0uMTMxLS4wNS0uMTM2LS4wNS0uMTM5LS4wNDktLjE0My0uMDQ4LS4xNDgtLjA0OC0uMTUyLS4wNDgtLjE1NS0uMDQ2LS4xNi0uMDQ2LS4xNjMtLjA0NS0uMTY4LS4wNDMtLjE3Mi0uMDQzLS4xNzUtLjA0Mi0uMTc5LS4wNDEtLjE4My0uMDQtLjE4Ny0uMDM4LS4xOTEtLjAzOC0uMTk0LS4wMzYtLjE5OC0uMDM0LS4yMDItLjAzMy0uMjA1LS4wMzItLjIxLS4wMzEtLjIxMi0uMDI4LS4yMTYtLjAyNy0uMjItLjAyNi0uMjI0LS4wMjMtLjIyNi0uMDIyLS4yMzEtLjAyMS0uMjMzLS4wMTgtLjIzNy0uMDE2LS4yNDEtLjAxNC0uMjQ0LS4wMTItLjI0Ny0uMDExLS4yNS0uMDA4LS4yNTQtLjAwNS0uMjU3LS4wMDQtLjI2LS4wMDEtLjI2LjAwMXpcIlxuICApO1xufTtcbmNvbnN0IGluc2VydENvbXB1dGVySWNvbiA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcInN5bWJvbFwiKS5hdHRyKFwiaWRcIiwgXCJjb21wdXRlclwiKS5hdHRyKFwid2lkdGhcIiwgXCIyNFwiKS5hdHRyKFwiaGVpZ2h0XCIsIFwiMjRcIikuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFwidHJhbnNmb3JtXCIsIFwic2NhbGUoLjUpXCIpLmF0dHIoXG4gICAgXCJkXCIsXG4gICAgXCJNMiAydjEzaDIwdi0xM2gtMjB6bTE4IDExaC0xNnYtOWgxNnY5em0tMTAuMjI4IDZsLjQ2Ni0xaDMuNTI0bC40NjcgMWgtNC40NTd6bTE0LjIyOCAzaC0yNGwyLTZoMi4xMDRsLTEuMzMgNGgxOC40NWwtMS4yOTctNGgyLjA3M2wyIDZ6bS01LTEwaC0xNHYtN2gxNHY3elwiXG4gICk7XG59O1xuY29uc3QgaW5zZXJ0Q2xvY2tJY29uID0gZnVuY3Rpb24oZWxlbSkge1xuICBlbGVtLmFwcGVuZChcImRlZnNcIikuYXBwZW5kKFwic3ltYm9sXCIpLmF0dHIoXCJpZFwiLCBcImNsb2NrXCIpLmF0dHIoXCJ3aWR0aFwiLCBcIjI0XCIpLmF0dHIoXCJoZWlnaHRcIiwgXCIyNFwiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJzY2FsZSguNSlcIikuYXR0cihcbiAgICBcImRcIixcbiAgICBcIk0xMiAyYzUuNTE0IDAgMTAgNC40ODYgMTAgMTBzLTQuNDg2IDEwLTEwIDEwLTEwLTQuNDg2LTEwLTEwIDQuNDg2LTEwIDEwLTEwem0wLTJjLTYuNjI3IDAtMTIgNS4zNzMtMTIgMTJzNS4zNzMgMTIgMTIgMTIgMTItNS4zNzMgMTItMTItNS4zNzMtMTItMTItMTJ6bTUuODQ4IDEyLjQ1OWMuMjAyLjAzOC4yMDIuMzMzLjAwMS4zNzItMS45MDcuMzYxLTYuMDQ1IDEuMTExLTYuNTQ3IDEuMTExLS43MTkgMC0xLjMwMS0uNTgyLTEuMzAxLTEuMzAxIDAtLjUxMi43Ny01LjQ0NyAxLjEyNS03LjQ0NS4wMzQtLjE5Mi4zMTItLjE4MS4zNDMuMDE0bC45ODUgNi4yMzggNS4zOTQgMS4wMTF6XCJcbiAgKTtcbn07XG5jb25zdCBpbnNlcnRBcnJvd0hlYWQgPSBmdW5jdGlvbihlbGVtKSB7XG4gIGVsZW0uYXBwZW5kKFwiZGVmc1wiKS5hcHBlbmQoXCJtYXJrZXJcIikuYXR0cihcImlkXCIsIFwiYXJyb3doZWFkXCIpLmF0dHIoXCJyZWZYXCIsIDcuOSkuYXR0cihcInJlZllcIiwgNSkuYXR0cihcIm1hcmtlclVuaXRzXCIsIFwidXNlclNwYWNlT25Vc2VcIikuYXR0cihcIm1hcmtlcldpZHRoXCIsIDEyKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDEyKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJkXCIsIFwiTSAwIDAgTCAxMCA1IEwgMCAxMCB6XCIpO1xufTtcbmNvbnN0IGluc2VydEFycm93RmlsbGVkSGVhZCA9IGZ1bmN0aW9uKGVsZW0pIHtcbiAgZWxlbS5hcHBlbmQoXCJkZWZzXCIpLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgXCJmaWxsZWQtaGVhZFwiKS5hdHRyKFwicmVmWFwiLCAxNS41KS5hdHRyKFwicmVmWVwiLCA3KS5hdHRyKFwibWFya2VyV2lkdGhcIiwgMjApLmF0dHIoXCJtYXJrZXJIZWlnaHRcIiwgMjgpLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImRcIiwgXCJNIDE4LDcgTDksMTMgTDE0LDcgTDksMSBaXCIpO1xufTtcbmNvbnN0IGluc2VydFNlcXVlbmNlTnVtYmVyID0gZnVuY3Rpb24oZWxlbSkge1xuICBlbGVtLmFwcGVuZChcImRlZnNcIikuYXBwZW5kKFwibWFya2VyXCIpLmF0dHIoXCJpZFwiLCBcInNlcXVlbmNlbnVtYmVyXCIpLmF0dHIoXCJyZWZYXCIsIDE1KS5hdHRyKFwicmVmWVwiLCAxNSkuYXR0cihcIm1hcmtlcldpZHRoXCIsIDYwKS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDQwKS5hdHRyKFwib3JpZW50XCIsIFwiYXV0b1wiKS5hcHBlbmQoXCJjaXJjbGVcIikuYXR0cihcImN4XCIsIDE1KS5hdHRyKFwiY3lcIiwgMTUpLmF0dHIoXCJyXCIsIDYpO1xufTtcbmNvbnN0IGluc2VydEFycm93Q3Jvc3NIZWFkID0gZnVuY3Rpb24oZWxlbSkge1xuICBjb25zdCBkZWZzID0gZWxlbS5hcHBlbmQoXCJkZWZzXCIpO1xuICBjb25zdCBtYXJrZXIgPSBkZWZzLmFwcGVuZChcIm1hcmtlclwiKS5hdHRyKFwiaWRcIiwgXCJjcm9zc2hlYWRcIikuYXR0cihcIm1hcmtlcldpZHRoXCIsIDE1KS5hdHRyKFwibWFya2VySGVpZ2h0XCIsIDgpLmF0dHIoXCJvcmllbnRcIiwgXCJhdXRvXCIpLmF0dHIoXCJyZWZYXCIsIDQpLmF0dHIoXCJyZWZZXCIsIDQuNSk7XG4gIG1hcmtlci5hcHBlbmQoXCJwYXRoXCIpLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKS5hdHRyKFwic3Ryb2tlXCIsIFwiIzAwMDAwMFwiKS5zdHlsZShcInN0cm9rZS1kYXNoYXJyYXlcIiwgXCIwLCAwXCIpLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgXCIxcHRcIikuYXR0cihcImRcIiwgXCJNIDEsMiBMIDYsNyBNIDYsMiBMIDEsN1wiKTtcbn07XG5jb25zdCBnZXRUZXh0T2JqID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIGZpbGw6IHZvaWQgMCxcbiAgICBhbmNob3I6IHZvaWQgMCxcbiAgICBzdHlsZTogXCIjNjY2XCIsXG4gICAgd2lkdGg6IHZvaWQgMCxcbiAgICBoZWlnaHQ6IHZvaWQgMCxcbiAgICB0ZXh0TWFyZ2luOiAwLFxuICAgIHJ4OiAwLFxuICAgIHJ5OiAwLFxuICAgIHRzcGFuOiB0cnVlLFxuICAgIHZhbGlnbjogdm9pZCAwXG4gIH07XG59O1xuY29uc3QgZ2V0Tm90ZVJlY3QgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgZmlsbDogXCIjRURGMkFFXCIsXG4gICAgc3Ryb2tlOiBcIiM2NjZcIixcbiAgICB3aWR0aDogMTAwLFxuICAgIGFuY2hvcjogXCJzdGFydFwiLFxuICAgIGhlaWdodDogMTAwLFxuICAgIHJ4OiAwLFxuICAgIHJ5OiAwXG4gIH07XG59O1xuY29uc3QgX2RyYXdUZXh0Q2FuZGlkYXRlRnVuYyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBieVRleHQoY29udGVudCwgZywgeCwgeSwgd2lkdGgsIGhlaWdodCwgdGV4dEF0dHJzKSB7XG4gICAgY29uc3QgdGV4dCA9IGcuYXBwZW5kKFwidGV4dFwiKS5hdHRyKFwieFwiLCB4ICsgd2lkdGggLyAyKS5hdHRyKFwieVwiLCB5ICsgaGVpZ2h0IC8gMiArIDUpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIikudGV4dChjb250ZW50KTtcbiAgICBfc2V0VGV4dEF0dHJzKHRleHQsIHRleHRBdHRycyk7XG4gIH1cbiAgZnVuY3Rpb24gYnlUc3Bhbihjb250ZW50LCBnLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCB0ZXh0QXR0cnMsIGNvbmYyKSB7XG4gICAgY29uc3QgeyBhY3RvckZvbnRTaXplLCBhY3RvckZvbnRGYW1pbHksIGFjdG9yRm9udFdlaWdodCB9ID0gY29uZjI7XG4gICAgY29uc3QgW19hY3RvckZvbnRTaXplLCBfYWN0b3JGb250U2l6ZVB4XSA9IHBhcnNlRm9udFNpemUoYWN0b3JGb250U2l6ZSk7XG4gICAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KGNvbW1vbi5saW5lQnJlYWtSZWdleCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgZHkgPSBpICogX2FjdG9yRm9udFNpemUgLSBfYWN0b3JGb250U2l6ZSAqIChsaW5lcy5sZW5ndGggLSAxKSAvIDI7XG4gICAgICBjb25zdCB0ZXh0ID0gZy5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJ4XCIsIHggKyB3aWR0aCAvIDIpLmF0dHIoXCJ5XCIsIHkpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIikuc3R5bGUoXCJmb250LXNpemVcIiwgX2FjdG9yRm9udFNpemVQeCkuc3R5bGUoXCJmb250LXdlaWdodFwiLCBhY3RvckZvbnRXZWlnaHQpLnN0eWxlKFwiZm9udC1mYW1pbHlcIiwgYWN0b3JGb250RmFtaWx5KTtcbiAgICAgIHRleHQuYXBwZW5kKFwidHNwYW5cIikuYXR0cihcInhcIiwgeCArIHdpZHRoIC8gMikuYXR0cihcImR5XCIsIGR5KS50ZXh0KGxpbmVzW2ldKTtcbiAgICAgIHRleHQuYXR0cihcInlcIiwgeSArIGhlaWdodCAvIDIpLmF0dHIoXCJkb21pbmFudC1iYXNlbGluZVwiLCBcImNlbnRyYWxcIikuYXR0cihcImFsaWdubWVudC1iYXNlbGluZVwiLCBcImNlbnRyYWxcIik7XG4gICAgICBfc2V0VGV4dEF0dHJzKHRleHQsIHRleHRBdHRycyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGJ5Rm8oY29udGVudCwgZywgeCwgeSwgd2lkdGgsIGhlaWdodCwgdGV4dEF0dHJzLCBjb25mMikge1xuICAgIGNvbnN0IHMgPSBnLmFwcGVuZChcInN3aXRjaFwiKTtcbiAgICBjb25zdCBmID0gcy5hcHBlbmQoXCJmb3JlaWduT2JqZWN0XCIpLmF0dHIoXCJ4XCIsIHgpLmF0dHIoXCJ5XCIsIHkpLmF0dHIoXCJ3aWR0aFwiLCB3aWR0aCkuYXR0cihcImhlaWdodFwiLCBoZWlnaHQpO1xuICAgIGNvbnN0IHRleHQgPSBmLmFwcGVuZChcInhodG1sOmRpdlwiKS5zdHlsZShcImRpc3BsYXlcIiwgXCJ0YWJsZVwiKS5zdHlsZShcImhlaWdodFwiLCBcIjEwMCVcIikuc3R5bGUoXCJ3aWR0aFwiLCBcIjEwMCVcIik7XG4gICAgdGV4dC5hcHBlbmQoXCJkaXZcIikuc3R5bGUoXCJkaXNwbGF5XCIsIFwidGFibGUtY2VsbFwiKS5zdHlsZShcInRleHQtYWxpZ25cIiwgXCJjZW50ZXJcIikuc3R5bGUoXCJ2ZXJ0aWNhbC1hbGlnblwiLCBcIm1pZGRsZVwiKS50ZXh0KGNvbnRlbnQpO1xuICAgIGJ5VHNwYW4oY29udGVudCwgcywgeCwgeSwgd2lkdGgsIGhlaWdodCwgdGV4dEF0dHJzLCBjb25mMik7XG4gICAgX3NldFRleHRBdHRycyh0ZXh0LCB0ZXh0QXR0cnMpO1xuICB9XG4gIGFzeW5jIGZ1bmN0aW9uIGJ5S2F0ZXgoY29udGVudCwgZywgeCwgeSwgd2lkdGgsIGhlaWdodCwgdGV4dEF0dHJzLCBjb25mMikge1xuICAgIGNvbnN0IGRpbSA9IGF3YWl0IGNhbGN1bGF0ZU1hdGhNTERpbWVuc2lvbnMoY29udGVudCwgZ2V0Q29uZmlnJDEoKSk7XG4gICAgY29uc3QgcyA9IGcuYXBwZW5kKFwic3dpdGNoXCIpO1xuICAgIGNvbnN0IGYgPSBzLmFwcGVuZChcImZvcmVpZ25PYmplY3RcIikuYXR0cihcInhcIiwgeCArIHdpZHRoIC8gMiAtIGRpbS53aWR0aCAvIDIpLmF0dHIoXCJ5XCIsIHkgKyBoZWlnaHQgLyAyIC0gZGltLmhlaWdodCAvIDIpLmF0dHIoXCJ3aWR0aFwiLCBkaW0ud2lkdGgpLmF0dHIoXCJoZWlnaHRcIiwgZGltLmhlaWdodCk7XG4gICAgY29uc3QgdGV4dCA9IGYuYXBwZW5kKFwieGh0bWw6ZGl2XCIpLnN0eWxlKFwiaGVpZ2h0XCIsIFwiMTAwJVwiKS5zdHlsZShcIndpZHRoXCIsIFwiMTAwJVwiKTtcbiAgICB0ZXh0LmFwcGVuZChcImRpdlwiKS5zdHlsZShcInRleHQtYWxpZ25cIiwgXCJjZW50ZXJcIikuc3R5bGUoXCJ2ZXJ0aWNhbC1hbGlnblwiLCBcIm1pZGRsZVwiKS5odG1sKGF3YWl0IHJlbmRlckthdGV4U2FuaXRpemVkKGNvbnRlbnQsIGdldENvbmZpZyQxKCkpKTtcbiAgICBieVRzcGFuKGNvbnRlbnQsIHMsIHgsIHksIHdpZHRoLCBoZWlnaHQsIHRleHRBdHRycywgY29uZjIpO1xuICAgIF9zZXRUZXh0QXR0cnModGV4dCwgdGV4dEF0dHJzKTtcbiAgfVxuICBmdW5jdGlvbiBfc2V0VGV4dEF0dHJzKHRvVGV4dCwgZnJvbVRleHRBdHRyc0RpY3QpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBmcm9tVGV4dEF0dHJzRGljdCkge1xuICAgICAgaWYgKGZyb21UZXh0QXR0cnNEaWN0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgdG9UZXh0LmF0dHIoa2V5LCBmcm9tVGV4dEF0dHJzRGljdFtrZXldKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKGNvbmYyLCBoYXNLYXRleDIgPSBmYWxzZSkge1xuICAgIGlmIChoYXNLYXRleDIpIHtcbiAgICAgIHJldHVybiBieUthdGV4O1xuICAgIH1cbiAgICByZXR1cm4gY29uZjIudGV4dFBsYWNlbWVudCA9PT0gXCJmb1wiID8gYnlGbyA6IGNvbmYyLnRleHRQbGFjZW1lbnQgPT09IFwib2xkXCIgPyBieVRleHQgOiBieVRzcGFuO1xuICB9O1xufSgpO1xuY29uc3QgX2RyYXdNZW51SXRlbVRleHRDYW5kaWRhdGVGdW5jID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIGJ5VGV4dChjb250ZW50LCBnLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCB0ZXh0QXR0cnMpIHtcbiAgICBjb25zdCB0ZXh0ID0gZy5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJ4XCIsIHgpLmF0dHIoXCJ5XCIsIHkpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJzdGFydFwiKS50ZXh0KGNvbnRlbnQpO1xuICAgIF9zZXRUZXh0QXR0cnModGV4dCwgdGV4dEF0dHJzKTtcbiAgfVxuICBmdW5jdGlvbiBieVRzcGFuKGNvbnRlbnQsIGcsIHgsIHksIHdpZHRoLCBoZWlnaHQsIHRleHRBdHRycywgY29uZjIpIHtcbiAgICBjb25zdCB7IGFjdG9yRm9udFNpemUsIGFjdG9yRm9udEZhbWlseSwgYWN0b3JGb250V2VpZ2h0IH0gPSBjb25mMjtcbiAgICBjb25zdCBsaW5lcyA9IGNvbnRlbnQuc3BsaXQoY29tbW9uLmxpbmVCcmVha1JlZ2V4KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBkeSA9IGkgKiBhY3RvckZvbnRTaXplIC0gYWN0b3JGb250U2l6ZSAqIChsaW5lcy5sZW5ndGggLSAxKSAvIDI7XG4gICAgICBjb25zdCB0ZXh0ID0gZy5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJ4XCIsIHgpLmF0dHIoXCJ5XCIsIHkpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJzdGFydFwiKS5zdHlsZShcImZvbnQtc2l6ZVwiLCBhY3RvckZvbnRTaXplKS5zdHlsZShcImZvbnQtd2VpZ2h0XCIsIGFjdG9yRm9udFdlaWdodCkuc3R5bGUoXCJmb250LWZhbWlseVwiLCBhY3RvckZvbnRGYW1pbHkpO1xuICAgICAgdGV4dC5hcHBlbmQoXCJ0c3BhblwiKS5hdHRyKFwieFwiLCB4KS5hdHRyKFwiZHlcIiwgZHkpLnRleHQobGluZXNbaV0pO1xuICAgICAgdGV4dC5hdHRyKFwieVwiLCB5ICsgaGVpZ2h0IC8gMikuYXR0cihcImRvbWluYW50LWJhc2VsaW5lXCIsIFwiY2VudHJhbFwiKS5hdHRyKFwiYWxpZ25tZW50LWJhc2VsaW5lXCIsIFwiY2VudHJhbFwiKTtcbiAgICAgIF9zZXRUZXh0QXR0cnModGV4dCwgdGV4dEF0dHJzKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gYnlGbyhjb250ZW50LCBnLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCB0ZXh0QXR0cnMsIGNvbmYyKSB7XG4gICAgY29uc3QgcyA9IGcuYXBwZW5kKFwic3dpdGNoXCIpO1xuICAgIGNvbnN0IGYgPSBzLmFwcGVuZChcImZvcmVpZ25PYmplY3RcIikuYXR0cihcInhcIiwgeCkuYXR0cihcInlcIiwgeSkuYXR0cihcIndpZHRoXCIsIHdpZHRoKS5hdHRyKFwiaGVpZ2h0XCIsIGhlaWdodCk7XG4gICAgY29uc3QgdGV4dCA9IGYuYXBwZW5kKFwieGh0bWw6ZGl2XCIpLnN0eWxlKFwiZGlzcGxheVwiLCBcInRhYmxlXCIpLnN0eWxlKFwiaGVpZ2h0XCIsIFwiMTAwJVwiKS5zdHlsZShcIndpZHRoXCIsIFwiMTAwJVwiKTtcbiAgICB0ZXh0LmFwcGVuZChcImRpdlwiKS5zdHlsZShcImRpc3BsYXlcIiwgXCJ0YWJsZS1jZWxsXCIpLnN0eWxlKFwidGV4dC1hbGlnblwiLCBcImNlbnRlclwiKS5zdHlsZShcInZlcnRpY2FsLWFsaWduXCIsIFwibWlkZGxlXCIpLnRleHQoY29udGVudCk7XG4gICAgYnlUc3Bhbihjb250ZW50LCBzLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCB0ZXh0QXR0cnMsIGNvbmYyKTtcbiAgICBfc2V0VGV4dEF0dHJzKHRleHQsIHRleHRBdHRycyk7XG4gIH1cbiAgZnVuY3Rpb24gX3NldFRleHRBdHRycyh0b1RleHQsIGZyb21UZXh0QXR0cnNEaWN0KSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gZnJvbVRleHRBdHRyc0RpY3QpIHtcbiAgICAgIGlmIChmcm9tVGV4dEF0dHJzRGljdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHRvVGV4dC5hdHRyKGtleSwgZnJvbVRleHRBdHRyc0RpY3Rba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBmdW5jdGlvbihjb25mMikge1xuICAgIHJldHVybiBjb25mMi50ZXh0UGxhY2VtZW50ID09PSBcImZvXCIgPyBieUZvIDogY29uZjIudGV4dFBsYWNlbWVudCA9PT0gXCJvbGRcIiA/IGJ5VGV4dCA6IGJ5VHNwYW47XG4gIH07XG59KCk7XG5jb25zdCBzdmdEcmF3ID0ge1xuICBkcmF3UmVjdCxcbiAgZHJhd1RleHQsXG4gIGRyYXdMYWJlbCxcbiAgZHJhd0FjdG9yLFxuICBkcmF3Qm94LFxuICBkcmF3UG9wdXAsXG4gIGFuY2hvckVsZW1lbnQsXG4gIGRyYXdBY3RpdmF0aW9uLFxuICBkcmF3TG9vcCxcbiAgZHJhd0JhY2tncm91bmRSZWN0LFxuICBpbnNlcnRBcnJvd0hlYWQsXG4gIGluc2VydEFycm93RmlsbGVkSGVhZCxcbiAgaW5zZXJ0U2VxdWVuY2VOdW1iZXIsXG4gIGluc2VydEFycm93Q3Jvc3NIZWFkLFxuICBpbnNlcnREYXRhYmFzZUljb24sXG4gIGluc2VydENvbXB1dGVySWNvbixcbiAgaW5zZXJ0Q2xvY2tJY29uLFxuICBnZXRUZXh0T2JqLFxuICBnZXROb3RlUmVjdCxcbiAgZml4TGlmZUxpbmVIZWlnaHRzLFxuICBzYW5pdGl6ZVVybFxufTtcbmxldCBjb25mID0ge307XG5jb25zdCBib3VuZHMgPSB7XG4gIGRhdGE6IHtcbiAgICBzdGFydHg6IHZvaWQgMCxcbiAgICBzdG9weDogdm9pZCAwLFxuICAgIHN0YXJ0eTogdm9pZCAwLFxuICAgIHN0b3B5OiB2b2lkIDBcbiAgfSxcbiAgdmVydGljYWxQb3M6IDAsXG4gIHNlcXVlbmNlSXRlbXM6IFtdLFxuICBhY3RpdmF0aW9uczogW10sXG4gIG1vZGVsczoge1xuICAgIGdldEhlaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXguYXBwbHkoXG4gICAgICAgIG51bGwsXG4gICAgICAgIHRoaXMuYWN0b3JzLmxlbmd0aCA9PT0gMCA/IFswXSA6IHRoaXMuYWN0b3JzLm1hcCgoYWN0b3IpID0+IGFjdG9yLmhlaWdodCB8fCAwKVxuICAgICAgKSArICh0aGlzLmxvb3BzLmxlbmd0aCA9PT0gMCA/IDAgOiB0aGlzLmxvb3BzLm1hcCgoaXQpID0+IGl0LmhlaWdodCB8fCAwKS5yZWR1Y2UoKGFjYywgaCkgPT4gYWNjICsgaCkpICsgKHRoaXMubWVzc2FnZXMubGVuZ3RoID09PSAwID8gMCA6IHRoaXMubWVzc2FnZXMubWFwKChpdCkgPT4gaXQuaGVpZ2h0IHx8IDApLnJlZHVjZSgoYWNjLCBoKSA9PiBhY2MgKyBoKSkgKyAodGhpcy5ub3Rlcy5sZW5ndGggPT09IDAgPyAwIDogdGhpcy5ub3Rlcy5tYXAoKGl0KSA9PiBpdC5oZWlnaHQgfHwgMCkucmVkdWNlKChhY2MsIGgpID0+IGFjYyArIGgpKTtcbiAgICB9LFxuICAgIGNsZWFyOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuYWN0b3JzID0gW107XG4gICAgICB0aGlzLmJveGVzID0gW107XG4gICAgICB0aGlzLmxvb3BzID0gW107XG4gICAgICB0aGlzLm1lc3NhZ2VzID0gW107XG4gICAgICB0aGlzLm5vdGVzID0gW107XG4gICAgfSxcbiAgICBhZGRCb3g6IGZ1bmN0aW9uKGJveE1vZGVsKSB7XG4gICAgICB0aGlzLmJveGVzLnB1c2goYm94TW9kZWwpO1xuICAgIH0sXG4gICAgYWRkQWN0b3I6IGZ1bmN0aW9uKGFjdG9yTW9kZWwpIHtcbiAgICAgIHRoaXMuYWN0b3JzLnB1c2goYWN0b3JNb2RlbCk7XG4gICAgfSxcbiAgICBhZGRMb29wOiBmdW5jdGlvbihsb29wTW9kZWwpIHtcbiAgICAgIHRoaXMubG9vcHMucHVzaChsb29wTW9kZWwpO1xuICAgIH0sXG4gICAgYWRkTWVzc2FnZTogZnVuY3Rpb24obXNnTW9kZWwpIHtcbiAgICAgIHRoaXMubWVzc2FnZXMucHVzaChtc2dNb2RlbCk7XG4gICAgfSxcbiAgICBhZGROb3RlOiBmdW5jdGlvbihub3RlTW9kZWwpIHtcbiAgICAgIHRoaXMubm90ZXMucHVzaChub3RlTW9kZWwpO1xuICAgIH0sXG4gICAgbGFzdEFjdG9yOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmFjdG9yc1t0aGlzLmFjdG9ycy5sZW5ndGggLSAxXTtcbiAgICB9LFxuICAgIGxhc3RMb29wOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmxvb3BzW3RoaXMubG9vcHMubGVuZ3RoIC0gMV07XG4gICAgfSxcbiAgICBsYXN0TWVzc2FnZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5tZXNzYWdlc1t0aGlzLm1lc3NhZ2VzLmxlbmd0aCAtIDFdO1xuICAgIH0sXG4gICAgbGFzdE5vdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMubm90ZXNbdGhpcy5ub3Rlcy5sZW5ndGggLSAxXTtcbiAgICB9LFxuICAgIGFjdG9yczogW10sXG4gICAgYm94ZXM6IFtdLFxuICAgIGxvb3BzOiBbXSxcbiAgICBtZXNzYWdlczogW10sXG4gICAgbm90ZXM6IFtdXG4gIH0sXG4gIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc2VxdWVuY2VJdGVtcyA9IFtdO1xuICAgIHRoaXMuYWN0aXZhdGlvbnMgPSBbXTtcbiAgICB0aGlzLm1vZGVscy5jbGVhcigpO1xuICAgIHRoaXMuZGF0YSA9IHtcbiAgICAgIHN0YXJ0eDogdm9pZCAwLFxuICAgICAgc3RvcHg6IHZvaWQgMCxcbiAgICAgIHN0YXJ0eTogdm9pZCAwLFxuICAgICAgc3RvcHk6IHZvaWQgMFxuICAgIH07XG4gICAgdGhpcy52ZXJ0aWNhbFBvcyA9IDA7XG4gICAgc2V0Q29uZihnZXRDb25maWcoKSk7XG4gIH0sXG4gIHVwZGF0ZVZhbDogZnVuY3Rpb24ob2JqLCBrZXksIHZhbCwgZnVuKSB7XG4gICAgaWYgKG9ialtrZXldID09PSB2b2lkIDApIHtcbiAgICAgIG9ialtrZXldID0gdmFsO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpba2V5XSA9IGZ1bih2YWwsIG9ialtrZXldKTtcbiAgICB9XG4gIH0sXG4gIHVwZGF0ZUJvdW5kczogZnVuY3Rpb24oc3RhcnR4LCBzdGFydHksIHN0b3B4LCBzdG9weSkge1xuICAgIGNvbnN0IF9zZWxmID0gdGhpcztcbiAgICBsZXQgY250ID0gMDtcbiAgICBmdW5jdGlvbiB1cGRhdGVGbih0eXBlKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlSXRlbUJvdW5kcyhpdGVtKSB7XG4gICAgICAgIGNudCsrO1xuICAgICAgICBjb25zdCBuID0gX3NlbGYuc2VxdWVuY2VJdGVtcy5sZW5ndGggLSBjbnQgKyAxO1xuICAgICAgICBfc2VsZi51cGRhdGVWYWwoaXRlbSwgXCJzdGFydHlcIiwgc3RhcnR5IC0gbiAqIGNvbmYuYm94TWFyZ2luLCBNYXRoLm1pbik7XG4gICAgICAgIF9zZWxmLnVwZGF0ZVZhbChpdGVtLCBcInN0b3B5XCIsIHN0b3B5ICsgbiAqIGNvbmYuYm94TWFyZ2luLCBNYXRoLm1heCk7XG4gICAgICAgIF9zZWxmLnVwZGF0ZVZhbChib3VuZHMuZGF0YSwgXCJzdGFydHhcIiwgc3RhcnR4IC0gbiAqIGNvbmYuYm94TWFyZ2luLCBNYXRoLm1pbik7XG4gICAgICAgIF9zZWxmLnVwZGF0ZVZhbChib3VuZHMuZGF0YSwgXCJzdG9weFwiLCBzdG9weCArIG4gKiBjb25mLmJveE1hcmdpbiwgTWF0aC5tYXgpO1xuICAgICAgICBpZiAoISh0eXBlID09PSBcImFjdGl2YXRpb25cIikpIHtcbiAgICAgICAgICBfc2VsZi51cGRhdGVWYWwoaXRlbSwgXCJzdGFydHhcIiwgc3RhcnR4IC0gbiAqIGNvbmYuYm94TWFyZ2luLCBNYXRoLm1pbik7XG4gICAgICAgICAgX3NlbGYudXBkYXRlVmFsKGl0ZW0sIFwic3RvcHhcIiwgc3RvcHggKyBuICogY29uZi5ib3hNYXJnaW4sIE1hdGgubWF4KTtcbiAgICAgICAgICBfc2VsZi51cGRhdGVWYWwoYm91bmRzLmRhdGEsIFwic3RhcnR5XCIsIHN0YXJ0eSAtIG4gKiBjb25mLmJveE1hcmdpbiwgTWF0aC5taW4pO1xuICAgICAgICAgIF9zZWxmLnVwZGF0ZVZhbChib3VuZHMuZGF0YSwgXCJzdG9weVwiLCBzdG9weSArIG4gKiBjb25mLmJveE1hcmdpbiwgTWF0aC5tYXgpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICB0aGlzLnNlcXVlbmNlSXRlbXMuZm9yRWFjaCh1cGRhdGVGbigpKTtcbiAgICB0aGlzLmFjdGl2YXRpb25zLmZvckVhY2godXBkYXRlRm4oXCJhY3RpdmF0aW9uXCIpKTtcbiAgfSxcbiAgaW5zZXJ0OiBmdW5jdGlvbihzdGFydHgsIHN0YXJ0eSwgc3RvcHgsIHN0b3B5KSB7XG4gICAgY29uc3QgX3N0YXJ0eCA9IGNvbW1vbi5nZXRNaW4oc3RhcnR4LCBzdG9weCk7XG4gICAgY29uc3QgX3N0b3B4ID0gY29tbW9uLmdldE1heChzdGFydHgsIHN0b3B4KTtcbiAgICBjb25zdCBfc3RhcnR5ID0gY29tbW9uLmdldE1pbihzdGFydHksIHN0b3B5KTtcbiAgICBjb25zdCBfc3RvcHkgPSBjb21tb24uZ2V0TWF4KHN0YXJ0eSwgc3RvcHkpO1xuICAgIHRoaXMudXBkYXRlVmFsKGJvdW5kcy5kYXRhLCBcInN0YXJ0eFwiLCBfc3RhcnR4LCBNYXRoLm1pbik7XG4gICAgdGhpcy51cGRhdGVWYWwoYm91bmRzLmRhdGEsIFwic3RhcnR5XCIsIF9zdGFydHksIE1hdGgubWluKTtcbiAgICB0aGlzLnVwZGF0ZVZhbChib3VuZHMuZGF0YSwgXCJzdG9weFwiLCBfc3RvcHgsIE1hdGgubWF4KTtcbiAgICB0aGlzLnVwZGF0ZVZhbChib3VuZHMuZGF0YSwgXCJzdG9weVwiLCBfc3RvcHksIE1hdGgubWF4KTtcbiAgICB0aGlzLnVwZGF0ZUJvdW5kcyhfc3RhcnR4LCBfc3RhcnR5LCBfc3RvcHgsIF9zdG9weSk7XG4gIH0sXG4gIG5ld0FjdGl2YXRpb246IGZ1bmN0aW9uKG1lc3NhZ2UsIGRpYWdyYW0yLCBhY3RvcnMpIHtcbiAgICBjb25zdCBhY3RvclJlY3QgPSBhY3RvcnNbbWVzc2FnZS5mcm9tLmFjdG9yXTtcbiAgICBjb25zdCBzdGFja2VkU2l6ZSA9IGFjdG9yQWN0aXZhdGlvbnMobWVzc2FnZS5mcm9tLmFjdG9yKS5sZW5ndGggfHwgMDtcbiAgICBjb25zdCB4ID0gYWN0b3JSZWN0LnggKyBhY3RvclJlY3Qud2lkdGggLyAyICsgKHN0YWNrZWRTaXplIC0gMSkgKiBjb25mLmFjdGl2YXRpb25XaWR0aCAvIDI7XG4gICAgdGhpcy5hY3RpdmF0aW9ucy5wdXNoKHtcbiAgICAgIHN0YXJ0eDogeCxcbiAgICAgIHN0YXJ0eTogdGhpcy52ZXJ0aWNhbFBvcyArIDIsXG4gICAgICBzdG9weDogeCArIGNvbmYuYWN0aXZhdGlvbldpZHRoLFxuICAgICAgc3RvcHk6IHZvaWQgMCxcbiAgICAgIGFjdG9yOiBtZXNzYWdlLmZyb20uYWN0b3IsXG4gICAgICBhbmNob3JlZDogc3ZnRHJhdy5hbmNob3JFbGVtZW50KGRpYWdyYW0yKVxuICAgIH0pO1xuICB9LFxuICBlbmRBY3RpdmF0aW9uOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgY29uc3QgbGFzdEFjdG9yQWN0aXZhdGlvbklkeCA9IHRoaXMuYWN0aXZhdGlvbnMubWFwKGZ1bmN0aW9uKGFjdGl2YXRpb24pIHtcbiAgICAgIHJldHVybiBhY3RpdmF0aW9uLmFjdG9yO1xuICAgIH0pLmxhc3RJbmRleE9mKG1lc3NhZ2UuZnJvbS5hY3Rvcik7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZhdGlvbnMuc3BsaWNlKGxhc3RBY3RvckFjdGl2YXRpb25JZHgsIDEpWzBdO1xuICB9LFxuICBjcmVhdGVMb29wOiBmdW5jdGlvbih0aXRsZSA9IHsgbWVzc2FnZTogdm9pZCAwLCB3cmFwOiBmYWxzZSwgd2lkdGg6IHZvaWQgMCB9LCBmaWxsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXJ0eDogdm9pZCAwLFxuICAgICAgc3RhcnR5OiB0aGlzLnZlcnRpY2FsUG9zLFxuICAgICAgc3RvcHg6IHZvaWQgMCxcbiAgICAgIHN0b3B5OiB2b2lkIDAsXG4gICAgICB0aXRsZTogdGl0bGUubWVzc2FnZSxcbiAgICAgIHdyYXA6IHRpdGxlLndyYXAsXG4gICAgICB3aWR0aDogdGl0bGUud2lkdGgsXG4gICAgICBoZWlnaHQ6IDAsXG4gICAgICBmaWxsXG4gICAgfTtcbiAgfSxcbiAgbmV3TG9vcDogZnVuY3Rpb24odGl0bGUgPSB7IG1lc3NhZ2U6IHZvaWQgMCwgd3JhcDogZmFsc2UsIHdpZHRoOiB2b2lkIDAgfSwgZmlsbCkge1xuICAgIHRoaXMuc2VxdWVuY2VJdGVtcy5wdXNoKHRoaXMuY3JlYXRlTG9vcCh0aXRsZSwgZmlsbCkpO1xuICB9LFxuICBlbmRMb29wOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5zZXF1ZW5jZUl0ZW1zLnBvcCgpO1xuICB9LFxuICBpc0xvb3BPdmVybGFwOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5zZXF1ZW5jZUl0ZW1zLmxlbmd0aCA/IHRoaXMuc2VxdWVuY2VJdGVtc1t0aGlzLnNlcXVlbmNlSXRlbXMubGVuZ3RoIC0gMV0ub3ZlcmxhcCA6IGZhbHNlO1xuICB9LFxuICBhZGRTZWN0aW9uVG9Mb29wOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgY29uc3QgbG9vcCA9IHRoaXMuc2VxdWVuY2VJdGVtcy5wb3AoKTtcbiAgICBsb29wLnNlY3Rpb25zID0gbG9vcC5zZWN0aW9ucyB8fCBbXTtcbiAgICBsb29wLnNlY3Rpb25UaXRsZXMgPSBsb29wLnNlY3Rpb25UaXRsZXMgfHwgW107XG4gICAgbG9vcC5zZWN0aW9ucy5wdXNoKHsgeTogYm91bmRzLmdldFZlcnRpY2FsUG9zKCksIGhlaWdodDogMCB9KTtcbiAgICBsb29wLnNlY3Rpb25UaXRsZXMucHVzaChtZXNzYWdlKTtcbiAgICB0aGlzLnNlcXVlbmNlSXRlbXMucHVzaChsb29wKTtcbiAgfSxcbiAgc2F2ZVZlcnRpY2FsUG9zOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5pc0xvb3BPdmVybGFwKCkpIHtcbiAgICAgIHRoaXMuc2F2ZWRWZXJ0aWNhbFBvcyA9IHRoaXMudmVydGljYWxQb3M7XG4gICAgfVxuICB9LFxuICByZXNldFZlcnRpY2FsUG9zOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5pc0xvb3BPdmVybGFwKCkpIHtcbiAgICAgIHRoaXMudmVydGljYWxQb3MgPSB0aGlzLnNhdmVkVmVydGljYWxQb3M7XG4gICAgfVxuICB9LFxuICBidW1wVmVydGljYWxQb3M6IGZ1bmN0aW9uKGJ1bXApIHtcbiAgICB0aGlzLnZlcnRpY2FsUG9zID0gdGhpcy52ZXJ0aWNhbFBvcyArIGJ1bXA7XG4gICAgdGhpcy5kYXRhLnN0b3B5ID0gY29tbW9uLmdldE1heCh0aGlzLmRhdGEuc3RvcHksIHRoaXMudmVydGljYWxQb3MpO1xuICB9LFxuICBnZXRWZXJ0aWNhbFBvczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMudmVydGljYWxQb3M7XG4gIH0sXG4gIGdldEJvdW5kczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHsgYm91bmRzOiB0aGlzLmRhdGEsIG1vZGVsczogdGhpcy5tb2RlbHMgfTtcbiAgfVxufTtcbmNvbnN0IGRyYXdOb3RlID0gYXN5bmMgZnVuY3Rpb24oZWxlbSwgbm90ZU1vZGVsKSB7XG4gIGJvdW5kcy5idW1wVmVydGljYWxQb3MoY29uZi5ib3hNYXJnaW4pO1xuICBub3RlTW9kZWwuaGVpZ2h0ID0gY29uZi5ib3hNYXJnaW47XG4gIG5vdGVNb2RlbC5zdGFydHkgPSBib3VuZHMuZ2V0VmVydGljYWxQb3MoKTtcbiAgY29uc3QgcmVjdCA9IGdldE5vdGVSZWN0JDEoKTtcbiAgcmVjdC54ID0gbm90ZU1vZGVsLnN0YXJ0eDtcbiAgcmVjdC55ID0gbm90ZU1vZGVsLnN0YXJ0eTtcbiAgcmVjdC53aWR0aCA9IG5vdGVNb2RlbC53aWR0aCB8fCBjb25mLndpZHRoO1xuICByZWN0LmNsYXNzID0gXCJub3RlXCI7XG4gIGNvbnN0IGcgPSBlbGVtLmFwcGVuZChcImdcIik7XG4gIGNvbnN0IHJlY3RFbGVtID0gc3ZnRHJhdy5kcmF3UmVjdChnLCByZWN0KTtcbiAgY29uc3QgdGV4dE9iaiA9IGdldFRleHRPYmokMSgpO1xuICB0ZXh0T2JqLnggPSBub3RlTW9kZWwuc3RhcnR4O1xuICB0ZXh0T2JqLnkgPSBub3RlTW9kZWwuc3RhcnR5O1xuICB0ZXh0T2JqLndpZHRoID0gcmVjdC53aWR0aDtcbiAgdGV4dE9iai5keSA9IFwiMWVtXCI7XG4gIHRleHRPYmoudGV4dCA9IG5vdGVNb2RlbC5tZXNzYWdlO1xuICB0ZXh0T2JqLmNsYXNzID0gXCJub3RlVGV4dFwiO1xuICB0ZXh0T2JqLmZvbnRGYW1pbHkgPSBjb25mLm5vdGVGb250RmFtaWx5O1xuICB0ZXh0T2JqLmZvbnRTaXplID0gY29uZi5ub3RlRm9udFNpemU7XG4gIHRleHRPYmouZm9udFdlaWdodCA9IGNvbmYubm90ZUZvbnRXZWlnaHQ7XG4gIHRleHRPYmouYW5jaG9yID0gY29uZi5ub3RlQWxpZ247XG4gIHRleHRPYmoudGV4dE1hcmdpbiA9IGNvbmYubm90ZU1hcmdpbjtcbiAgdGV4dE9iai52YWxpZ24gPSBcImNlbnRlclwiO1xuICBjb25zdCB0ZXh0RWxlbSA9IGhhc0thdGV4KHRleHRPYmoudGV4dCkgPyBhd2FpdCBkcmF3S2F0ZXgoZywgdGV4dE9iaikgOiBkcmF3VGV4dChnLCB0ZXh0T2JqKTtcbiAgY29uc3QgdGV4dEhlaWdodCA9IE1hdGgucm91bmQoXG4gICAgdGV4dEVsZW0ubWFwKCh0ZSkgPT4gKHRlLl9ncm91cHMgfHwgdGUpWzBdWzBdLmdldEJCb3goKS5oZWlnaHQpLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBjdXJyKVxuICApO1xuICByZWN0RWxlbS5hdHRyKFwiaGVpZ2h0XCIsIHRleHRIZWlnaHQgKyAyICogY29uZi5ub3RlTWFyZ2luKTtcbiAgbm90ZU1vZGVsLmhlaWdodCArPSB0ZXh0SGVpZ2h0ICsgMiAqIGNvbmYubm90ZU1hcmdpbjtcbiAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyh0ZXh0SGVpZ2h0ICsgMiAqIGNvbmYubm90ZU1hcmdpbik7XG4gIG5vdGVNb2RlbC5zdG9weSA9IG5vdGVNb2RlbC5zdGFydHkgKyB0ZXh0SGVpZ2h0ICsgMiAqIGNvbmYubm90ZU1hcmdpbjtcbiAgbm90ZU1vZGVsLnN0b3B4ID0gbm90ZU1vZGVsLnN0YXJ0eCArIHJlY3Qud2lkdGg7XG4gIGJvdW5kcy5pbnNlcnQobm90ZU1vZGVsLnN0YXJ0eCwgbm90ZU1vZGVsLnN0YXJ0eSwgbm90ZU1vZGVsLnN0b3B4LCBub3RlTW9kZWwuc3RvcHkpO1xuICBib3VuZHMubW9kZWxzLmFkZE5vdGUobm90ZU1vZGVsKTtcbn07XG5jb25zdCBtZXNzYWdlRm9udCA9IChjbmYpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBmb250RmFtaWx5OiBjbmYubWVzc2FnZUZvbnRGYW1pbHksXG4gICAgZm9udFNpemU6IGNuZi5tZXNzYWdlRm9udFNpemUsXG4gICAgZm9udFdlaWdodDogY25mLm1lc3NhZ2VGb250V2VpZ2h0XG4gIH07XG59O1xuY29uc3Qgbm90ZUZvbnQgPSAoY25mKSA9PiB7XG4gIHJldHVybiB7XG4gICAgZm9udEZhbWlseTogY25mLm5vdGVGb250RmFtaWx5LFxuICAgIGZvbnRTaXplOiBjbmYubm90ZUZvbnRTaXplLFxuICAgIGZvbnRXZWlnaHQ6IGNuZi5ub3RlRm9udFdlaWdodFxuICB9O1xufTtcbmNvbnN0IGFjdG9yRm9udCA9IChjbmYpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBmb250RmFtaWx5OiBjbmYuYWN0b3JGb250RmFtaWx5LFxuICAgIGZvbnRTaXplOiBjbmYuYWN0b3JGb250U2l6ZSxcbiAgICBmb250V2VpZ2h0OiBjbmYuYWN0b3JGb250V2VpZ2h0XG4gIH07XG59O1xuYXN5bmMgZnVuY3Rpb24gYm91bmRNZXNzYWdlKF9kaWFncmFtLCBtc2dNb2RlbCkge1xuICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKDEwKTtcbiAgY29uc3QgeyBzdGFydHgsIHN0b3B4LCBtZXNzYWdlIH0gPSBtc2dNb2RlbDtcbiAgY29uc3QgbGluZXMgPSBjb21tb24uc3BsaXRCcmVha3MobWVzc2FnZSkubGVuZ3RoO1xuICBjb25zdCBpc0thdGV4TXNnID0gaGFzS2F0ZXgobWVzc2FnZSk7XG4gIGNvbnN0IHRleHREaW1zID0gaXNLYXRleE1zZyA/IGF3YWl0IGNhbGN1bGF0ZU1hdGhNTERpbWVuc2lvbnMobWVzc2FnZSwgZ2V0Q29uZmlnKCkpIDogdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMobWVzc2FnZSwgbWVzc2FnZUZvbnQoY29uZikpO1xuICBpZiAoIWlzS2F0ZXhNc2cpIHtcbiAgICBjb25zdCBsaW5lSGVpZ2h0ID0gdGV4dERpbXMuaGVpZ2h0IC8gbGluZXM7XG4gICAgbXNnTW9kZWwuaGVpZ2h0ICs9IGxpbmVIZWlnaHQ7XG4gICAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyhsaW5lSGVpZ2h0KTtcbiAgfVxuICBsZXQgbGluZVN0YXJ0WTtcbiAgbGV0IHRvdGFsT2Zmc2V0ID0gdGV4dERpbXMuaGVpZ2h0IC0gMTA7XG4gIGNvbnN0IHRleHRXaWR0aCA9IHRleHREaW1zLndpZHRoO1xuICBpZiAoc3RhcnR4ID09PSBzdG9weCkge1xuICAgIGxpbmVTdGFydFkgPSBib3VuZHMuZ2V0VmVydGljYWxQb3MoKSArIHRvdGFsT2Zmc2V0O1xuICAgIGlmICghY29uZi5yaWdodEFuZ2xlcykge1xuICAgICAgdG90YWxPZmZzZXQgKz0gY29uZi5ib3hNYXJnaW47XG4gICAgICBsaW5lU3RhcnRZID0gYm91bmRzLmdldFZlcnRpY2FsUG9zKCkgKyB0b3RhbE9mZnNldDtcbiAgICB9XG4gICAgdG90YWxPZmZzZXQgKz0gMzA7XG4gICAgY29uc3QgZHggPSBjb21tb24uZ2V0TWF4KHRleHRXaWR0aCAvIDIsIGNvbmYud2lkdGggLyAyKTtcbiAgICBib3VuZHMuaW5zZXJ0KFxuICAgICAgc3RhcnR4IC0gZHgsXG4gICAgICBib3VuZHMuZ2V0VmVydGljYWxQb3MoKSAtIDEwICsgdG90YWxPZmZzZXQsXG4gICAgICBzdG9weCArIGR4LFxuICAgICAgYm91bmRzLmdldFZlcnRpY2FsUG9zKCkgKyAzMCArIHRvdGFsT2Zmc2V0XG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICB0b3RhbE9mZnNldCArPSBjb25mLmJveE1hcmdpbjtcbiAgICBsaW5lU3RhcnRZID0gYm91bmRzLmdldFZlcnRpY2FsUG9zKCkgKyB0b3RhbE9mZnNldDtcbiAgICBib3VuZHMuaW5zZXJ0KHN0YXJ0eCwgbGluZVN0YXJ0WSAtIDEwLCBzdG9weCwgbGluZVN0YXJ0WSk7XG4gIH1cbiAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyh0b3RhbE9mZnNldCk7XG4gIG1zZ01vZGVsLmhlaWdodCArPSB0b3RhbE9mZnNldDtcbiAgbXNnTW9kZWwuc3RvcHkgPSBtc2dNb2RlbC5zdGFydHkgKyBtc2dNb2RlbC5oZWlnaHQ7XG4gIGJvdW5kcy5pbnNlcnQobXNnTW9kZWwuZnJvbUJvdW5kcywgbXNnTW9kZWwuc3RhcnR5LCBtc2dNb2RlbC50b0JvdW5kcywgbXNnTW9kZWwuc3RvcHkpO1xuICByZXR1cm4gbGluZVN0YXJ0WTtcbn1cbmNvbnN0IGRyYXdNZXNzYWdlID0gYXN5bmMgZnVuY3Rpb24oZGlhZ3JhbTIsIG1zZ01vZGVsLCBsaW5lU3RhcnRZLCBkaWFnT2JqKSB7XG4gIGNvbnN0IHsgc3RhcnR4LCBzdG9weCwgc3RhcnR5LCBtZXNzYWdlLCB0eXBlLCBzZXF1ZW5jZUluZGV4LCBzZXF1ZW5jZVZpc2libGUgfSA9IG1zZ01vZGVsO1xuICBjb25zdCB0ZXh0RGltcyA9IHV0aWxzLmNhbGN1bGF0ZVRleHREaW1lbnNpb25zKG1lc3NhZ2UsIG1lc3NhZ2VGb250KGNvbmYpKTtcbiAgY29uc3QgdGV4dE9iaiA9IGdldFRleHRPYmokMSgpO1xuICB0ZXh0T2JqLnggPSBzdGFydHg7XG4gIHRleHRPYmoueSA9IHN0YXJ0eSArIDEwO1xuICB0ZXh0T2JqLndpZHRoID0gc3RvcHggLSBzdGFydHg7XG4gIHRleHRPYmouY2xhc3MgPSBcIm1lc3NhZ2VUZXh0XCI7XG4gIHRleHRPYmouZHkgPSBcIjFlbVwiO1xuICB0ZXh0T2JqLnRleHQgPSBtZXNzYWdlO1xuICB0ZXh0T2JqLmZvbnRGYW1pbHkgPSBjb25mLm1lc3NhZ2VGb250RmFtaWx5O1xuICB0ZXh0T2JqLmZvbnRTaXplID0gY29uZi5tZXNzYWdlRm9udFNpemU7XG4gIHRleHRPYmouZm9udFdlaWdodCA9IGNvbmYubWVzc2FnZUZvbnRXZWlnaHQ7XG4gIHRleHRPYmouYW5jaG9yID0gY29uZi5tZXNzYWdlQWxpZ247XG4gIHRleHRPYmoudmFsaWduID0gXCJjZW50ZXJcIjtcbiAgdGV4dE9iai50ZXh0TWFyZ2luID0gY29uZi53cmFwUGFkZGluZztcbiAgdGV4dE9iai50c3BhbiA9IGZhbHNlO1xuICBoYXNLYXRleCh0ZXh0T2JqLnRleHQpID8gYXdhaXQgZHJhd0thdGV4KGRpYWdyYW0yLCB0ZXh0T2JqLCB7IHN0YXJ0eCwgc3RvcHgsIHN0YXJ0eTogbGluZVN0YXJ0WSB9KSA6IGRyYXdUZXh0KGRpYWdyYW0yLCB0ZXh0T2JqKTtcbiAgY29uc3QgdGV4dFdpZHRoID0gdGV4dERpbXMud2lkdGg7XG4gIGxldCBsaW5lO1xuICBpZiAoc3RhcnR4ID09PSBzdG9weCkge1xuICAgIGlmIChjb25mLnJpZ2h0QW5nbGVzKSB7XG4gICAgICBsaW5lID0gZGlhZ3JhbTIuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFxuICAgICAgICBcImRcIixcbiAgICAgICAgYE0gICR7c3RhcnR4fSwke2xpbmVTdGFydFl9IEggJHtzdGFydHggKyBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGggLyAyLCB0ZXh0V2lkdGggLyAyKX0gViAke2xpbmVTdGFydFkgKyAyNX0gSCAke3N0YXJ0eH1gXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBsaW5lID0gZGlhZ3JhbTIuYXBwZW5kKFwicGF0aFwiKS5hdHRyKFxuICAgICAgICBcImRcIixcbiAgICAgICAgXCJNIFwiICsgc3RhcnR4ICsgXCIsXCIgKyBsaW5lU3RhcnRZICsgXCIgQyBcIiArIChzdGFydHggKyA2MCkgKyBcIixcIiArIChsaW5lU3RhcnRZIC0gMTApICsgXCIgXCIgKyAoc3RhcnR4ICsgNjApICsgXCIsXCIgKyAobGluZVN0YXJ0WSArIDMwKSArIFwiIFwiICsgc3RhcnR4ICsgXCIsXCIgKyAobGluZVN0YXJ0WSArIDIwKVxuICAgICAgKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGluZSA9IGRpYWdyYW0yLmFwcGVuZChcImxpbmVcIik7XG4gICAgbGluZS5hdHRyKFwieDFcIiwgc3RhcnR4KTtcbiAgICBsaW5lLmF0dHIoXCJ5MVwiLCBsaW5lU3RhcnRZKTtcbiAgICBsaW5lLmF0dHIoXCJ4MlwiLCBzdG9weCk7XG4gICAgbGluZS5hdHRyKFwieTJcIiwgbGluZVN0YXJ0WSk7XG4gIH1cbiAgaWYgKHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVEIHx8IHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVEX0NST1NTIHx8IHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVEX1BPSU5UIHx8IHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVEX09QRU4pIHtcbiAgICBsaW5lLnN0eWxlKFwic3Ryb2tlLWRhc2hhcnJheVwiLCBcIjMsIDNcIik7XG4gICAgbGluZS5hdHRyKFwiY2xhc3NcIiwgXCJtZXNzYWdlTGluZTFcIik7XG4gIH0gZWxzZSB7XG4gICAgbGluZS5hdHRyKFwiY2xhc3NcIiwgXCJtZXNzYWdlTGluZTBcIik7XG4gIH1cbiAgbGV0IHVybCA9IFwiXCI7XG4gIGlmIChjb25mLmFycm93TWFya2VyQWJzb2x1dGUpIHtcbiAgICB1cmwgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyB3aW5kb3cubG9jYXRpb24uaG9zdCArIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSArIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2g7XG4gICAgdXJsID0gdXJsLnJlcGxhY2UoL1xcKC9nLCBcIlxcXFwoXCIpO1xuICAgIHVybCA9IHVybC5yZXBsYWNlKC9cXCkvZywgXCJcXFxcKVwiKTtcbiAgfVxuICBsaW5lLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgMik7XG4gIGxpbmUuYXR0cihcInN0cm9rZVwiLCBcIm5vbmVcIik7XG4gIGxpbmUuc3R5bGUoXCJmaWxsXCIsIFwibm9uZVwiKTtcbiAgaWYgKHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuU09MSUQgfHwgdHlwZSA9PT0gZGlhZ09iai5kYi5MSU5FVFlQRS5ET1RURUQpIHtcbiAgICBsaW5lLmF0dHIoXCJtYXJrZXItZW5kXCIsIFwidXJsKFwiICsgdXJsICsgXCIjYXJyb3doZWFkKVwiKTtcbiAgfVxuICBpZiAodHlwZSA9PT0gZGlhZ09iai5kYi5MSU5FVFlQRS5TT0xJRF9QT0lOVCB8fCB0eXBlID09PSBkaWFnT2JqLmRiLkxJTkVUWVBFLkRPVFRFRF9QT0lOVCkge1xuICAgIGxpbmUuYXR0cihcIm1hcmtlci1lbmRcIiwgXCJ1cmwoXCIgKyB1cmwgKyBcIiNmaWxsZWQtaGVhZClcIik7XG4gIH1cbiAgaWYgKHR5cGUgPT09IGRpYWdPYmouZGIuTElORVRZUEUuU09MSURfQ1JPU1MgfHwgdHlwZSA9PT0gZGlhZ09iai5kYi5MSU5FVFlQRS5ET1RURURfQ1JPU1MpIHtcbiAgICBsaW5lLmF0dHIoXCJtYXJrZXItZW5kXCIsIFwidXJsKFwiICsgdXJsICsgXCIjY3Jvc3NoZWFkKVwiKTtcbiAgfVxuICBpZiAoc2VxdWVuY2VWaXNpYmxlIHx8IGNvbmYuc2hvd1NlcXVlbmNlTnVtYmVycykge1xuICAgIGxpbmUuYXR0cihcIm1hcmtlci1zdGFydFwiLCBcInVybChcIiArIHVybCArIFwiI3NlcXVlbmNlbnVtYmVyKVwiKTtcbiAgICBkaWFncmFtMi5hcHBlbmQoXCJ0ZXh0XCIpLmF0dHIoXCJ4XCIsIHN0YXJ0eCkuYXR0cihcInlcIiwgbGluZVN0YXJ0WSArIDQpLmF0dHIoXCJmb250LWZhbWlseVwiLCBcInNhbnMtc2VyaWZcIikuYXR0cihcImZvbnQtc2l6ZVwiLCBcIjEycHhcIikuYXR0cihcInRleHQtYW5jaG9yXCIsIFwibWlkZGxlXCIpLmF0dHIoXCJjbGFzc1wiLCBcInNlcXVlbmNlTnVtYmVyXCIpLnRleHQoc2VxdWVuY2VJbmRleCk7XG4gIH1cbn07XG5jb25zdCBhZGRBY3RvclJlbmRlcmluZ0RhdGEgPSBhc3luYyBmdW5jdGlvbihkaWFncmFtMiwgYWN0b3JzLCBjcmVhdGVkQWN0b3JzLCBhY3RvcktleXMsIHZlcnRpY2FsUG9zLCBtZXNzYWdlcywgaXNGb290ZXIpIHtcbiAgbGV0IHByZXZXaWR0aCA9IDA7XG4gIGxldCBwcmV2TWFyZ2luID0gMDtcbiAgbGV0IHByZXZCb3ggPSB2b2lkIDA7XG4gIGxldCBtYXhIZWlnaHQgPSAwO1xuICBmb3IgKGNvbnN0IGFjdG9yS2V5IG9mIGFjdG9yS2V5cykge1xuICAgIGNvbnN0IGFjdG9yID0gYWN0b3JzW2FjdG9yS2V5XTtcbiAgICBjb25zdCBib3ggPSBhY3Rvci5ib3g7XG4gICAgaWYgKHByZXZCb3ggJiYgcHJldkJveCAhPSBib3gpIHtcbiAgICAgIGlmICghaXNGb290ZXIpIHtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRCb3gocHJldkJveCk7XG4gICAgICB9XG4gICAgICBwcmV2TWFyZ2luICs9IGNvbmYuYm94TWFyZ2luICsgcHJldkJveC5tYXJnaW47XG4gICAgfVxuICAgIGlmIChib3ggJiYgYm94ICE9IHByZXZCb3gpIHtcbiAgICAgIGlmICghaXNGb290ZXIpIHtcbiAgICAgICAgYm94LnggPSBwcmV2V2lkdGggKyBwcmV2TWFyZ2luO1xuICAgICAgICBib3gueSA9IHZlcnRpY2FsUG9zO1xuICAgICAgfVxuICAgICAgcHJldk1hcmdpbiArPSBib3gubWFyZ2luO1xuICAgIH1cbiAgICBhY3Rvci53aWR0aCA9IGFjdG9yLndpZHRoIHx8IGNvbmYud2lkdGg7XG4gICAgYWN0b3IuaGVpZ2h0ID0gY29tbW9uLmdldE1heChhY3Rvci5oZWlnaHQgfHwgY29uZi5oZWlnaHQsIGNvbmYuaGVpZ2h0KTtcbiAgICBhY3Rvci5tYXJnaW4gPSBhY3Rvci5tYXJnaW4gfHwgY29uZi5hY3Rvck1hcmdpbjtcbiAgICBtYXhIZWlnaHQgPSBjb21tb24uZ2V0TWF4KG1heEhlaWdodCwgYWN0b3IuaGVpZ2h0KTtcbiAgICBpZiAoY3JlYXRlZEFjdG9yc1thY3Rvci5uYW1lXSkge1xuICAgICAgcHJldk1hcmdpbiArPSBhY3Rvci53aWR0aCAvIDI7XG4gICAgfVxuICAgIGFjdG9yLnggPSBwcmV2V2lkdGggKyBwcmV2TWFyZ2luO1xuICAgIGFjdG9yLnN0YXJ0eSA9IGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpO1xuICAgIGJvdW5kcy5pbnNlcnQoYWN0b3IueCwgdmVydGljYWxQb3MsIGFjdG9yLnggKyBhY3Rvci53aWR0aCwgYWN0b3IuaGVpZ2h0KTtcbiAgICBwcmV2V2lkdGggKz0gYWN0b3Iud2lkdGggKyBwcmV2TWFyZ2luO1xuICAgIGlmIChhY3Rvci5ib3gpIHtcbiAgICAgIGFjdG9yLmJveC53aWR0aCA9IHByZXZXaWR0aCArIGJveC5tYXJnaW4gLSBhY3Rvci5ib3gueDtcbiAgICB9XG4gICAgcHJldk1hcmdpbiA9IGFjdG9yLm1hcmdpbjtcbiAgICBwcmV2Qm94ID0gYWN0b3IuYm94O1xuICAgIGJvdW5kcy5tb2RlbHMuYWRkQWN0b3IoYWN0b3IpO1xuICB9XG4gIGlmIChwcmV2Qm94ICYmICFpc0Zvb3Rlcikge1xuICAgIGJvdW5kcy5tb2RlbHMuYWRkQm94KHByZXZCb3gpO1xuICB9XG4gIGJvdW5kcy5idW1wVmVydGljYWxQb3MobWF4SGVpZ2h0KTtcbn07XG5jb25zdCBkcmF3QWN0b3JzID0gYXN5bmMgZnVuY3Rpb24oZGlhZ3JhbTIsIGFjdG9ycywgYWN0b3JLZXlzLCBpc0Zvb3Rlcikge1xuICBpZiAoIWlzRm9vdGVyKSB7XG4gICAgZm9yIChjb25zdCBhY3RvcktleSBvZiBhY3RvcktleXMpIHtcbiAgICAgIGNvbnN0IGFjdG9yID0gYWN0b3JzW2FjdG9yS2V5XTtcbiAgICAgIGF3YWl0IHN2Z0RyYXcuZHJhd0FjdG9yKGRpYWdyYW0yLCBhY3RvciwgY29uZiwgZmFsc2UpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsZXQgbWF4SGVpZ2h0ID0gMDtcbiAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGNvbmYuYm94TWFyZ2luICogMik7XG4gICAgZm9yIChjb25zdCBhY3RvcktleSBvZiBhY3RvcktleXMpIHtcbiAgICAgIGNvbnN0IGFjdG9yID0gYWN0b3JzW2FjdG9yS2V5XTtcbiAgICAgIGlmICghYWN0b3Iuc3RvcHkpIHtcbiAgICAgICAgYWN0b3Iuc3RvcHkgPSBib3VuZHMuZ2V0VmVydGljYWxQb3MoKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGhlaWdodCA9IGF3YWl0IHN2Z0RyYXcuZHJhd0FjdG9yKGRpYWdyYW0yLCBhY3RvciwgY29uZiwgdHJ1ZSk7XG4gICAgICBtYXhIZWlnaHQgPSBjb21tb24uZ2V0TWF4KG1heEhlaWdodCwgaGVpZ2h0KTtcbiAgICB9XG4gICAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyhtYXhIZWlnaHQgKyBjb25mLmJveE1hcmdpbik7XG4gIH1cbn07XG5jb25zdCBkcmF3QWN0b3JzUG9wdXAgPSBmdW5jdGlvbihkaWFncmFtMiwgYWN0b3JzLCBhY3RvcktleXMsIGRvYykge1xuICBsZXQgbWF4SGVpZ2h0ID0gMDtcbiAgbGV0IG1heFdpZHRoID0gMDtcbiAgZm9yIChjb25zdCBhY3RvcktleSBvZiBhY3RvcktleXMpIHtcbiAgICBjb25zdCBhY3RvciA9IGFjdG9yc1thY3RvcktleV07XG4gICAgY29uc3QgbWluTWVudVdpZHRoID0gZ2V0UmVxdWlyZWRQb3B1cFdpZHRoKGFjdG9yKTtcbiAgICBjb25zdCBtZW51RGltZW5zaW9ucyA9IHN2Z0RyYXcuZHJhd1BvcHVwKFxuICAgICAgZGlhZ3JhbTIsXG4gICAgICBhY3RvcixcbiAgICAgIG1pbk1lbnVXaWR0aCxcbiAgICAgIGNvbmYsXG4gICAgICBjb25mLmZvcmNlTWVudXMsXG4gICAgICBkb2NcbiAgICApO1xuICAgIGlmIChtZW51RGltZW5zaW9ucy5oZWlnaHQgPiBtYXhIZWlnaHQpIHtcbiAgICAgIG1heEhlaWdodCA9IG1lbnVEaW1lbnNpb25zLmhlaWdodDtcbiAgICB9XG4gICAgaWYgKG1lbnVEaW1lbnNpb25zLndpZHRoICsgYWN0b3IueCA+IG1heFdpZHRoKSB7XG4gICAgICBtYXhXaWR0aCA9IG1lbnVEaW1lbnNpb25zLndpZHRoICsgYWN0b3IueDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHsgbWF4SGVpZ2h0LCBtYXhXaWR0aCB9O1xufTtcbmNvbnN0IHNldENvbmYgPSBmdW5jdGlvbihjbmYpIHtcbiAgYXNzaWduV2l0aERlcHRoKGNvbmYsIGNuZik7XG4gIGlmIChjbmYuZm9udEZhbWlseSkge1xuICAgIGNvbmYuYWN0b3JGb250RmFtaWx5ID0gY29uZi5ub3RlRm9udEZhbWlseSA9IGNvbmYubWVzc2FnZUZvbnRGYW1pbHkgPSBjbmYuZm9udEZhbWlseTtcbiAgfVxuICBpZiAoY25mLmZvbnRTaXplKSB7XG4gICAgY29uZi5hY3RvckZvbnRTaXplID0gY29uZi5ub3RlRm9udFNpemUgPSBjb25mLm1lc3NhZ2VGb250U2l6ZSA9IGNuZi5mb250U2l6ZTtcbiAgfVxuICBpZiAoY25mLmZvbnRXZWlnaHQpIHtcbiAgICBjb25mLmFjdG9yRm9udFdlaWdodCA9IGNvbmYubm90ZUZvbnRXZWlnaHQgPSBjb25mLm1lc3NhZ2VGb250V2VpZ2h0ID0gY25mLmZvbnRXZWlnaHQ7XG4gIH1cbn07XG5jb25zdCBhY3RvckFjdGl2YXRpb25zID0gZnVuY3Rpb24oYWN0b3IpIHtcbiAgcmV0dXJuIGJvdW5kcy5hY3RpdmF0aW9ucy5maWx0ZXIoZnVuY3Rpb24oYWN0aXZhdGlvbikge1xuICAgIHJldHVybiBhY3RpdmF0aW9uLmFjdG9yID09PSBhY3RvcjtcbiAgfSk7XG59O1xuY29uc3QgYWN0aXZhdGlvbkJvdW5kcyA9IGZ1bmN0aW9uKGFjdG9yLCBhY3RvcnMpIHtcbiAgY29uc3QgYWN0b3JPYmogPSBhY3RvcnNbYWN0b3JdO1xuICBjb25zdCBhY3RpdmF0aW9ucyA9IGFjdG9yQWN0aXZhdGlvbnMoYWN0b3IpO1xuICBjb25zdCBsZWZ0ID0gYWN0aXZhdGlvbnMucmVkdWNlKGZ1bmN0aW9uKGFjYywgYWN0aXZhdGlvbikge1xuICAgIHJldHVybiBjb21tb24uZ2V0TWluKGFjYywgYWN0aXZhdGlvbi5zdGFydHgpO1xuICB9LCBhY3Rvck9iai54ICsgYWN0b3JPYmoud2lkdGggLyAyIC0gMSk7XG4gIGNvbnN0IHJpZ2h0ID0gYWN0aXZhdGlvbnMucmVkdWNlKGZ1bmN0aW9uKGFjYywgYWN0aXZhdGlvbikge1xuICAgIHJldHVybiBjb21tb24uZ2V0TWF4KGFjYywgYWN0aXZhdGlvbi5zdG9weCk7XG4gIH0sIGFjdG9yT2JqLnggKyBhY3Rvck9iai53aWR0aCAvIDIgKyAxKTtcbiAgcmV0dXJuIFtsZWZ0LCByaWdodF07XG59O1xuZnVuY3Rpb24gYWRqdXN0TG9vcEhlaWdodEZvcldyYXAobG9vcFdpZHRocywgbXNnLCBwcmVNYXJnaW4sIHBvc3RNYXJnaW4sIGFkZExvb3BGbikge1xuICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKHByZU1hcmdpbik7XG4gIGxldCBoZWlnaHRBZGp1c3QgPSBwb3N0TWFyZ2luO1xuICBpZiAobXNnLmlkICYmIG1zZy5tZXNzYWdlICYmIGxvb3BXaWR0aHNbbXNnLmlkXSkge1xuICAgIGNvbnN0IGxvb3BXaWR0aCA9IGxvb3BXaWR0aHNbbXNnLmlkXS53aWR0aDtcbiAgICBjb25zdCB0ZXh0Q29uZiA9IG1lc3NhZ2VGb250KGNvbmYpO1xuICAgIG1zZy5tZXNzYWdlID0gdXRpbHMud3JhcExhYmVsKGBbJHttc2cubWVzc2FnZX1dYCwgbG9vcFdpZHRoIC0gMiAqIGNvbmYud3JhcFBhZGRpbmcsIHRleHRDb25mKTtcbiAgICBtc2cud2lkdGggPSBsb29wV2lkdGg7XG4gICAgbXNnLndyYXAgPSB0cnVlO1xuICAgIGNvbnN0IHRleHREaW1zID0gdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMobXNnLm1lc3NhZ2UsIHRleHRDb25mKTtcbiAgICBjb25zdCB0b3RhbE9mZnNldCA9IGNvbW1vbi5nZXRNYXgodGV4dERpbXMuaGVpZ2h0LCBjb25mLmxhYmVsQm94SGVpZ2h0KTtcbiAgICBoZWlnaHRBZGp1c3QgPSBwb3N0TWFyZ2luICsgdG90YWxPZmZzZXQ7XG4gICAgbG9nLmRlYnVnKGAke3RvdGFsT2Zmc2V0fSAtICR7bXNnLm1lc3NhZ2V9YCk7XG4gIH1cbiAgYWRkTG9vcEZuKG1zZyk7XG4gIGJvdW5kcy5idW1wVmVydGljYWxQb3MoaGVpZ2h0QWRqdXN0KTtcbn1cbmZ1bmN0aW9uIGFkanVzdENyZWF0ZWREZXN0cm95ZWREYXRhKG1zZywgbXNnTW9kZWwsIGxpbmVTdGFydFksIGluZGV4LCBhY3RvcnMsIGNyZWF0ZWRBY3RvcnMsIGRlc3Ryb3llZEFjdG9ycykge1xuICBmdW5jdGlvbiByZWNlaXZlckFkanVzdG1lbnQoYWN0b3IsIGFkanVzdG1lbnQpIHtcbiAgICBpZiAoYWN0b3IueCA8IGFjdG9yc1ttc2cuZnJvbV0ueCkge1xuICAgICAgYm91bmRzLmluc2VydChcbiAgICAgICAgbXNnTW9kZWwuc3RvcHggLSBhZGp1c3RtZW50LFxuICAgICAgICBtc2dNb2RlbC5zdGFydHksXG4gICAgICAgIG1zZ01vZGVsLnN0YXJ0eCxcbiAgICAgICAgbXNnTW9kZWwuc3RvcHkgKyBhY3Rvci5oZWlnaHQgLyAyICsgY29uZi5ub3RlTWFyZ2luXG4gICAgICApO1xuICAgICAgbXNnTW9kZWwuc3RvcHggPSBtc2dNb2RlbC5zdG9weCArIGFkanVzdG1lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJvdW5kcy5pbnNlcnQoXG4gICAgICAgIG1zZ01vZGVsLnN0YXJ0eCxcbiAgICAgICAgbXNnTW9kZWwuc3RhcnR5LFxuICAgICAgICBtc2dNb2RlbC5zdG9weCArIGFkanVzdG1lbnQsXG4gICAgICAgIG1zZ01vZGVsLnN0b3B5ICsgYWN0b3IuaGVpZ2h0IC8gMiArIGNvbmYubm90ZU1hcmdpblxuICAgICAgKTtcbiAgICAgIG1zZ01vZGVsLnN0b3B4ID0gbXNnTW9kZWwuc3RvcHggLSBhZGp1c3RtZW50O1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBzZW5kZXJBZGp1c3RtZW50KGFjdG9yLCBhZGp1c3RtZW50KSB7XG4gICAgaWYgKGFjdG9yLnggPCBhY3RvcnNbbXNnLnRvXS54KSB7XG4gICAgICBib3VuZHMuaW5zZXJ0KFxuICAgICAgICBtc2dNb2RlbC5zdGFydHggLSBhZGp1c3RtZW50LFxuICAgICAgICBtc2dNb2RlbC5zdGFydHksXG4gICAgICAgIG1zZ01vZGVsLnN0b3B4LFxuICAgICAgICBtc2dNb2RlbC5zdG9weSArIGFjdG9yLmhlaWdodCAvIDIgKyBjb25mLm5vdGVNYXJnaW5cbiAgICAgICk7XG4gICAgICBtc2dNb2RlbC5zdGFydHggPSBtc2dNb2RlbC5zdGFydHggKyBhZGp1c3RtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICBib3VuZHMuaW5zZXJ0KFxuICAgICAgICBtc2dNb2RlbC5zdG9weCxcbiAgICAgICAgbXNnTW9kZWwuc3RhcnR5LFxuICAgICAgICBtc2dNb2RlbC5zdGFydHggKyBhZGp1c3RtZW50LFxuICAgICAgICBtc2dNb2RlbC5zdG9weSArIGFjdG9yLmhlaWdodCAvIDIgKyBjb25mLm5vdGVNYXJnaW5cbiAgICAgICk7XG4gICAgICBtc2dNb2RlbC5zdGFydHggPSBtc2dNb2RlbC5zdGFydHggLSBhZGp1c3RtZW50O1xuICAgIH1cbiAgfVxuICBpZiAoY3JlYXRlZEFjdG9yc1ttc2cudG9dID09IGluZGV4KSB7XG4gICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbbXNnLnRvXTtcbiAgICBjb25zdCBhZGp1c3RtZW50ID0gYWN0b3IudHlwZSA9PSBcImFjdG9yXCIgPyBBQ1RPUl9UWVBFX1dJRFRIIC8gMiArIDMgOiBhY3Rvci53aWR0aCAvIDIgKyAzO1xuICAgIHJlY2VpdmVyQWRqdXN0bWVudChhY3RvciwgYWRqdXN0bWVudCk7XG4gICAgYWN0b3Iuc3RhcnR5ID0gbGluZVN0YXJ0WSAtIGFjdG9yLmhlaWdodCAvIDI7XG4gICAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyhhY3Rvci5oZWlnaHQgLyAyKTtcbiAgfSBlbHNlIGlmIChkZXN0cm95ZWRBY3RvcnNbbXNnLmZyb21dID09IGluZGV4KSB7XG4gICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbbXNnLmZyb21dO1xuICAgIGlmIChjb25mLm1pcnJvckFjdG9ycykge1xuICAgICAgY29uc3QgYWRqdXN0bWVudCA9IGFjdG9yLnR5cGUgPT0gXCJhY3RvclwiID8gQUNUT1JfVFlQRV9XSURUSCAvIDIgOiBhY3Rvci53aWR0aCAvIDI7XG4gICAgICBzZW5kZXJBZGp1c3RtZW50KGFjdG9yLCBhZGp1c3RtZW50KTtcbiAgICB9XG4gICAgYWN0b3Iuc3RvcHkgPSBsaW5lU3RhcnRZIC0gYWN0b3IuaGVpZ2h0IC8gMjtcbiAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGFjdG9yLmhlaWdodCAvIDIpO1xuICB9IGVsc2UgaWYgKGRlc3Ryb3llZEFjdG9yc1ttc2cudG9dID09IGluZGV4KSB7XG4gICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbbXNnLnRvXTtcbiAgICBpZiAoY29uZi5taXJyb3JBY3RvcnMpIHtcbiAgICAgIGNvbnN0IGFkanVzdG1lbnQgPSBhY3Rvci50eXBlID09IFwiYWN0b3JcIiA/IEFDVE9SX1RZUEVfV0lEVEggLyAyICsgMyA6IGFjdG9yLndpZHRoIC8gMiArIDM7XG4gICAgICByZWNlaXZlckFkanVzdG1lbnQoYWN0b3IsIGFkanVzdG1lbnQpO1xuICAgIH1cbiAgICBhY3Rvci5zdG9weSA9IGxpbmVTdGFydFkgLSBhY3Rvci5oZWlnaHQgLyAyO1xuICAgIGJvdW5kcy5idW1wVmVydGljYWxQb3MoYWN0b3IuaGVpZ2h0IC8gMik7XG4gIH1cbn1cbmNvbnN0IGRyYXcgPSBhc3luYyBmdW5jdGlvbihfdGV4dCwgaWQsIF92ZXJzaW9uLCBkaWFnT2JqKSB7XG4gIGNvbnN0IHsgc2VjdXJpdHlMZXZlbCwgc2VxdWVuY2UgfSA9IGdldENvbmZpZygpO1xuICBjb25mID0gc2VxdWVuY2U7XG4gIGxldCBzYW5kYm94RWxlbWVudDtcbiAgaWYgKHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiKSB7XG4gICAgc2FuZGJveEVsZW1lbnQgPSBzZWxlY3QoXCIjaVwiICsgaWQpO1xuICB9XG4gIGNvbnN0IHJvb3QgPSBzZWN1cml0eUxldmVsID09PSBcInNhbmRib3hcIiA/IHNlbGVjdChzYW5kYm94RWxlbWVudC5ub2RlcygpWzBdLmNvbnRlbnREb2N1bWVudC5ib2R5KSA6IHNlbGVjdChcImJvZHlcIik7XG4gIGNvbnN0IGRvYyA9IHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiID8gc2FuZGJveEVsZW1lbnQubm9kZXMoKVswXS5jb250ZW50RG9jdW1lbnQgOiBkb2N1bWVudDtcbiAgYm91bmRzLmluaXQoKTtcbiAgbG9nLmRlYnVnKGRpYWdPYmouZGIpO1xuICBjb25zdCBkaWFncmFtMiA9IHNlY3VyaXR5TGV2ZWwgPT09IFwic2FuZGJveFwiID8gcm9vdC5zZWxlY3QoYFtpZD1cIiR7aWR9XCJdYCkgOiBzZWxlY3QoYFtpZD1cIiR7aWR9XCJdYCk7XG4gIGNvbnN0IGFjdG9ycyA9IGRpYWdPYmouZGIuZ2V0QWN0b3JzKCk7XG4gIGNvbnN0IGNyZWF0ZWRBY3RvcnMgPSBkaWFnT2JqLmRiLmdldENyZWF0ZWRBY3RvcnMoKTtcbiAgY29uc3QgZGVzdHJveWVkQWN0b3JzID0gZGlhZ09iai5kYi5nZXREZXN0cm95ZWRBY3RvcnMoKTtcbiAgY29uc3QgYm94ZXMgPSBkaWFnT2JqLmRiLmdldEJveGVzKCk7XG4gIGxldCBhY3RvcktleXMgPSBkaWFnT2JqLmRiLmdldEFjdG9yS2V5cygpO1xuICBjb25zdCBtZXNzYWdlcyA9IGRpYWdPYmouZGIuZ2V0TWVzc2FnZXMoKTtcbiAgY29uc3QgdGl0bGUgPSBkaWFnT2JqLmRiLmdldERpYWdyYW1UaXRsZSgpO1xuICBjb25zdCBoYXNCb3hlcyA9IGRpYWdPYmouZGIuaGFzQXRMZWFzdE9uZUJveCgpO1xuICBjb25zdCBoYXNCb3hUaXRsZXMgPSBkaWFnT2JqLmRiLmhhc0F0TGVhc3RPbmVCb3hXaXRoVGl0bGUoKTtcbiAgY29uc3QgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3IgPSBhd2FpdCBnZXRNYXhNZXNzYWdlV2lkdGhQZXJBY3RvcihhY3RvcnMsIG1lc3NhZ2VzLCBkaWFnT2JqKTtcbiAgY29uZi5oZWlnaHQgPSBhd2FpdCBjYWxjdWxhdGVBY3Rvck1hcmdpbnMoYWN0b3JzLCBtYXhNZXNzYWdlV2lkdGhQZXJBY3RvciwgYm94ZXMpO1xuICBzdmdEcmF3Lmluc2VydENvbXB1dGVySWNvbihkaWFncmFtMik7XG4gIHN2Z0RyYXcuaW5zZXJ0RGF0YWJhc2VJY29uKGRpYWdyYW0yKTtcbiAgc3ZnRHJhdy5pbnNlcnRDbG9ja0ljb24oZGlhZ3JhbTIpO1xuICBpZiAoaGFzQm94ZXMpIHtcbiAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGNvbmYuYm94TWFyZ2luKTtcbiAgICBpZiAoaGFzQm94VGl0bGVzKSB7XG4gICAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGJveGVzWzBdLnRleHRNYXhIZWlnaHQpO1xuICAgIH1cbiAgfVxuICBpZiAoY29uZi5oaWRlVW51c2VkUGFydGljaXBhbnRzID09PSB0cnVlKSB7XG4gICAgY29uc3QgbmV3QWN0b3JzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgICBtZXNzYWdlcy5mb3JFYWNoKChtZXNzYWdlKSA9PiB7XG4gICAgICBuZXdBY3RvcnMuYWRkKG1lc3NhZ2UuZnJvbSk7XG4gICAgICBuZXdBY3RvcnMuYWRkKG1lc3NhZ2UudG8pO1xuICAgIH0pO1xuICAgIGFjdG9yS2V5cyA9IGFjdG9yS2V5cy5maWx0ZXIoKGFjdG9yS2V5KSA9PiBuZXdBY3RvcnMuaGFzKGFjdG9yS2V5KSk7XG4gIH1cbiAgYXdhaXQgYWRkQWN0b3JSZW5kZXJpbmdEYXRhKGRpYWdyYW0yLCBhY3RvcnMsIGNyZWF0ZWRBY3RvcnMsIGFjdG9yS2V5cywgMCwgbWVzc2FnZXMsIGZhbHNlKTtcbiAgY29uc3QgbG9vcFdpZHRocyA9IGF3YWl0IGNhbGN1bGF0ZUxvb3BCb3VuZHMobWVzc2FnZXMsIGFjdG9ycywgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3IsIGRpYWdPYmopO1xuICBzdmdEcmF3Lmluc2VydEFycm93SGVhZChkaWFncmFtMik7XG4gIHN2Z0RyYXcuaW5zZXJ0QXJyb3dDcm9zc0hlYWQoZGlhZ3JhbTIpO1xuICBzdmdEcmF3Lmluc2VydEFycm93RmlsbGVkSGVhZChkaWFncmFtMik7XG4gIHN2Z0RyYXcuaW5zZXJ0U2VxdWVuY2VOdW1iZXIoZGlhZ3JhbTIpO1xuICBmdW5jdGlvbiBhY3RpdmVFbmQobXNnLCB2ZXJ0aWNhbFBvcykge1xuICAgIGNvbnN0IGFjdGl2YXRpb25EYXRhID0gYm91bmRzLmVuZEFjdGl2YXRpb24obXNnKTtcbiAgICBpZiAoYWN0aXZhdGlvbkRhdGEuc3RhcnR5ICsgMTggPiB2ZXJ0aWNhbFBvcykge1xuICAgICAgYWN0aXZhdGlvbkRhdGEuc3RhcnR5ID0gdmVydGljYWxQb3MgLSA2O1xuICAgICAgdmVydGljYWxQb3MgKz0gMTI7XG4gICAgfVxuICAgIHN2Z0RyYXcuZHJhd0FjdGl2YXRpb24oXG4gICAgICBkaWFncmFtMixcbiAgICAgIGFjdGl2YXRpb25EYXRhLFxuICAgICAgdmVydGljYWxQb3MsXG4gICAgICBjb25mLFxuICAgICAgYWN0b3JBY3RpdmF0aW9ucyhtc2cuZnJvbS5hY3RvcikubGVuZ3RoXG4gICAgKTtcbiAgICBib3VuZHMuaW5zZXJ0KGFjdGl2YXRpb25EYXRhLnN0YXJ0eCwgdmVydGljYWxQb3MgLSAxMCwgYWN0aXZhdGlvbkRhdGEuc3RvcHgsIHZlcnRpY2FsUG9zKTtcbiAgfVxuICBsZXQgc2VxdWVuY2VJbmRleCA9IDE7XG4gIGxldCBzZXF1ZW5jZUluZGV4U3RlcCA9IDE7XG4gIGNvbnN0IG1lc3NhZ2VzVG9EcmF3ID0gW107XG4gIGNvbnN0IGJhY2tncm91bmRzID0gW107XG4gIGxldCBpbmRleCA9IDA7XG4gIGZvciAoY29uc3QgbXNnIG9mIG1lc3NhZ2VzKSB7XG4gICAgbGV0IGxvb3BNb2RlbCwgbm90ZU1vZGVsLCBtc2dNb2RlbDtcbiAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuTk9URTpcbiAgICAgICAgYm91bmRzLnJlc2V0VmVydGljYWxQb3MoKTtcbiAgICAgICAgbm90ZU1vZGVsID0gbXNnLm5vdGVNb2RlbDtcbiAgICAgICAgYXdhaXQgZHJhd05vdGUoZGlhZ3JhbTIsIG5vdGVNb2RlbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFDVElWRV9TVEFSVDpcbiAgICAgICAgYm91bmRzLm5ld0FjdGl2YXRpb24obXNnLCBkaWFncmFtMiwgYWN0b3JzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuQUNUSVZFX0VORDpcbiAgICAgICAgYWN0aXZlRW5kKG1zZywgYm91bmRzLmdldFZlcnRpY2FsUG9zKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5MT09QX1NUQVJUOlxuICAgICAgICBhZGp1c3RMb29wSGVpZ2h0Rm9yV3JhcChcbiAgICAgICAgICBsb29wV2lkdGhzLFxuICAgICAgICAgIG1zZyxcbiAgICAgICAgICBjb25mLmJveE1hcmdpbixcbiAgICAgICAgICBjb25mLmJveE1hcmdpbiArIGNvbmYuYm94VGV4dE1hcmdpbixcbiAgICAgICAgICAobWVzc2FnZSkgPT4gYm91bmRzLm5ld0xvb3AobWVzc2FnZSlcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuTE9PUF9FTkQ6XG4gICAgICAgIGxvb3BNb2RlbCA9IGJvdW5kcy5lbmRMb29wKCk7XG4gICAgICAgIGF3YWl0IHN2Z0RyYXcuZHJhd0xvb3AoZGlhZ3JhbTIsIGxvb3BNb2RlbCwgXCJsb29wXCIsIGNvbmYpO1xuICAgICAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGxvb3BNb2RlbC5zdG9weSAtIGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpKTtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRMb29wKGxvb3BNb2RlbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLlJFQ1RfU1RBUlQ6XG4gICAgICAgIGFkanVzdExvb3BIZWlnaHRGb3JXcmFwKFxuICAgICAgICAgIGxvb3BXaWR0aHMsXG4gICAgICAgICAgbXNnLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luLFxuICAgICAgICAgIChtZXNzYWdlKSA9PiBib3VuZHMubmV3TG9vcCh2b2lkIDAsIG1lc3NhZ2UubWVzc2FnZSlcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuUkVDVF9FTkQ6XG4gICAgICAgIGxvb3BNb2RlbCA9IGJvdW5kcy5lbmRMb29wKCk7XG4gICAgICAgIGJhY2tncm91bmRzLnB1c2gobG9vcE1vZGVsKTtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRMb29wKGxvb3BNb2RlbCk7XG4gICAgICAgIGJvdW5kcy5idW1wVmVydGljYWxQb3MobG9vcE1vZGVsLnN0b3B5IC0gYm91bmRzLmdldFZlcnRpY2FsUG9zKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5PUFRfU1RBUlQ6XG4gICAgICAgIGFkanVzdExvb3BIZWlnaHRGb3JXcmFwKFxuICAgICAgICAgIGxvb3BXaWR0aHMsXG4gICAgICAgICAgbXNnLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luICsgY29uZi5ib3hUZXh0TWFyZ2luLFxuICAgICAgICAgIChtZXNzYWdlKSA9PiBib3VuZHMubmV3TG9vcChtZXNzYWdlKVxuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5PUFRfRU5EOlxuICAgICAgICBsb29wTW9kZWwgPSBib3VuZHMuZW5kTG9vcCgpO1xuICAgICAgICBhd2FpdCBzdmdEcmF3LmRyYXdMb29wKGRpYWdyYW0yLCBsb29wTW9kZWwsIFwib3B0XCIsIGNvbmYpO1xuICAgICAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGxvb3BNb2RlbC5zdG9weSAtIGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpKTtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRMb29wKGxvb3BNb2RlbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFMVF9TVEFSVDpcbiAgICAgICAgYWRqdXN0TG9vcEhlaWdodEZvcldyYXAoXG4gICAgICAgICAgbG9vcFdpZHRocyxcbiAgICAgICAgICBtc2csXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4sXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4gKyBjb25mLmJveFRleHRNYXJnaW4sXG4gICAgICAgICAgKG1lc3NhZ2UpID0+IGJvdW5kcy5uZXdMb29wKG1lc3NhZ2UpXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFMVF9FTFNFOlxuICAgICAgICBhZGp1c3RMb29wSGVpZ2h0Rm9yV3JhcChcbiAgICAgICAgICBsb29wV2lkdGhzLFxuICAgICAgICAgIG1zZyxcbiAgICAgICAgICBjb25mLmJveE1hcmdpbiArIGNvbmYuYm94VGV4dE1hcmdpbixcbiAgICAgICAgICBjb25mLmJveE1hcmdpbixcbiAgICAgICAgICAobWVzc2FnZSkgPT4gYm91bmRzLmFkZFNlY3Rpb25Ub0xvb3AobWVzc2FnZSlcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuQUxUX0VORDpcbiAgICAgICAgbG9vcE1vZGVsID0gYm91bmRzLmVuZExvb3AoKTtcbiAgICAgICAgYXdhaXQgc3ZnRHJhdy5kcmF3TG9vcChkaWFncmFtMiwgbG9vcE1vZGVsLCBcImFsdFwiLCBjb25mKTtcbiAgICAgICAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyhsb29wTW9kZWwuc3RvcHkgLSBib3VuZHMuZ2V0VmVydGljYWxQb3MoKSk7XG4gICAgICAgIGJvdW5kcy5tb2RlbHMuYWRkTG9vcChsb29wTW9kZWwpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5QQVJfU1RBUlQ6XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuUEFSX09WRVJfU1RBUlQ6XG4gICAgICAgIGFkanVzdExvb3BIZWlnaHRGb3JXcmFwKFxuICAgICAgICAgIGxvb3BXaWR0aHMsXG4gICAgICAgICAgbXNnLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luICsgY29uZi5ib3hUZXh0TWFyZ2luLFxuICAgICAgICAgIChtZXNzYWdlKSA9PiBib3VuZHMubmV3TG9vcChtZXNzYWdlKVxuICAgICAgICApO1xuICAgICAgICBib3VuZHMuc2F2ZVZlcnRpY2FsUG9zKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLlBBUl9BTkQ6XG4gICAgICAgIGFkanVzdExvb3BIZWlnaHRGb3JXcmFwKFxuICAgICAgICAgIGxvb3BXaWR0aHMsXG4gICAgICAgICAgbXNnLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luICsgY29uZi5ib3hUZXh0TWFyZ2luLFxuICAgICAgICAgIGNvbmYuYm94TWFyZ2luLFxuICAgICAgICAgIChtZXNzYWdlKSA9PiBib3VuZHMuYWRkU2VjdGlvblRvTG9vcChtZXNzYWdlKVxuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5QQVJfRU5EOlxuICAgICAgICBsb29wTW9kZWwgPSBib3VuZHMuZW5kTG9vcCgpO1xuICAgICAgICBhd2FpdCBzdmdEcmF3LmRyYXdMb29wKGRpYWdyYW0yLCBsb29wTW9kZWwsIFwicGFyXCIsIGNvbmYpO1xuICAgICAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGxvb3BNb2RlbC5zdG9weSAtIGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpKTtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRMb29wKGxvb3BNb2RlbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFVVE9OVU1CRVI6XG4gICAgICAgIHNlcXVlbmNlSW5kZXggPSBtc2cubWVzc2FnZS5zdGFydCB8fCBzZXF1ZW5jZUluZGV4O1xuICAgICAgICBzZXF1ZW5jZUluZGV4U3RlcCA9IG1zZy5tZXNzYWdlLnN0ZXAgfHwgc2VxdWVuY2VJbmRleFN0ZXA7XG4gICAgICAgIGlmIChtc2cubWVzc2FnZS52aXNpYmxlKSB7XG4gICAgICAgICAgZGlhZ09iai5kYi5lbmFibGVTZXF1ZW5jZU51bWJlcnMoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkaWFnT2JqLmRiLmRpc2FibGVTZXF1ZW5jZU51bWJlcnMoKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5DUklUSUNBTF9TVEFSVDpcbiAgICAgICAgYWRqdXN0TG9vcEhlaWdodEZvcldyYXAoXG4gICAgICAgICAgbG9vcFdpZHRocyxcbiAgICAgICAgICBtc2csXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4sXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4gKyBjb25mLmJveFRleHRNYXJnaW4sXG4gICAgICAgICAgKG1lc3NhZ2UpID0+IGJvdW5kcy5uZXdMb29wKG1lc3NhZ2UpXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkNSSVRJQ0FMX09QVElPTjpcbiAgICAgICAgYWRqdXN0TG9vcEhlaWdodEZvcldyYXAoXG4gICAgICAgICAgbG9vcFdpZHRocyxcbiAgICAgICAgICBtc2csXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4gKyBjb25mLmJveFRleHRNYXJnaW4sXG4gICAgICAgICAgY29uZi5ib3hNYXJnaW4sXG4gICAgICAgICAgKG1lc3NhZ2UpID0+IGJvdW5kcy5hZGRTZWN0aW9uVG9Mb29wKG1lc3NhZ2UpXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkNSSVRJQ0FMX0VORDpcbiAgICAgICAgbG9vcE1vZGVsID0gYm91bmRzLmVuZExvb3AoKTtcbiAgICAgICAgYXdhaXQgc3ZnRHJhdy5kcmF3TG9vcChkaWFncmFtMiwgbG9vcE1vZGVsLCBcImNyaXRpY2FsXCIsIGNvbmYpO1xuICAgICAgICBib3VuZHMuYnVtcFZlcnRpY2FsUG9zKGxvb3BNb2RlbC5zdG9weSAtIGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpKTtcbiAgICAgICAgYm91bmRzLm1vZGVscy5hZGRMb29wKGxvb3BNb2RlbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkJSRUFLX1NUQVJUOlxuICAgICAgICBhZGp1c3RMb29wSGVpZ2h0Rm9yV3JhcChcbiAgICAgICAgICBsb29wV2lkdGhzLFxuICAgICAgICAgIG1zZyxcbiAgICAgICAgICBjb25mLmJveE1hcmdpbixcbiAgICAgICAgICBjb25mLmJveE1hcmdpbiArIGNvbmYuYm94VGV4dE1hcmdpbixcbiAgICAgICAgICAobWVzc2FnZSkgPT4gYm91bmRzLm5ld0xvb3AobWVzc2FnZSlcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuQlJFQUtfRU5EOlxuICAgICAgICBsb29wTW9kZWwgPSBib3VuZHMuZW5kTG9vcCgpO1xuICAgICAgICBhd2FpdCBzdmdEcmF3LmRyYXdMb29wKGRpYWdyYW0yLCBsb29wTW9kZWwsIFwiYnJlYWtcIiwgY29uZik7XG4gICAgICAgIGJvdW5kcy5idW1wVmVydGljYWxQb3MobG9vcE1vZGVsLnN0b3B5IC0gYm91bmRzLmdldFZlcnRpY2FsUG9zKCkpO1xuICAgICAgICBib3VuZHMubW9kZWxzLmFkZExvb3AobG9vcE1vZGVsKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0cnkge1xuICAgICAgICAgIG1zZ01vZGVsID0gbXNnLm1zZ01vZGVsO1xuICAgICAgICAgIG1zZ01vZGVsLnN0YXJ0eSA9IGJvdW5kcy5nZXRWZXJ0aWNhbFBvcygpO1xuICAgICAgICAgIG1zZ01vZGVsLnNlcXVlbmNlSW5kZXggPSBzZXF1ZW5jZUluZGV4O1xuICAgICAgICAgIG1zZ01vZGVsLnNlcXVlbmNlVmlzaWJsZSA9IGRpYWdPYmouZGIuc2hvd1NlcXVlbmNlTnVtYmVycygpO1xuICAgICAgICAgIGNvbnN0IGxpbmVTdGFydFkgPSBhd2FpdCBib3VuZE1lc3NhZ2UoZGlhZ3JhbTIsIG1zZ01vZGVsKTtcbiAgICAgICAgICBhZGp1c3RDcmVhdGVkRGVzdHJveWVkRGF0YShcbiAgICAgICAgICAgIG1zZyxcbiAgICAgICAgICAgIG1zZ01vZGVsLFxuICAgICAgICAgICAgbGluZVN0YXJ0WSxcbiAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgICAgYWN0b3JzLFxuICAgICAgICAgICAgY3JlYXRlZEFjdG9ycyxcbiAgICAgICAgICAgIGRlc3Ryb3llZEFjdG9yc1xuICAgICAgICAgICk7XG4gICAgICAgICAgbWVzc2FnZXNUb0RyYXcucHVzaCh7IG1lc3NhZ2VNb2RlbDogbXNnTW9kZWwsIGxpbmVTdGFydFkgfSk7XG4gICAgICAgICAgYm91bmRzLm1vZGVscy5hZGRNZXNzYWdlKG1zZ01vZGVsKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGxvZy5lcnJvcihcImVycm9yIHdoaWxlIGRyYXdpbmcgbWVzc2FnZVwiLCBlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoW1xuICAgICAgZGlhZ09iai5kYi5MSU5FVFlQRS5TT0xJRF9PUEVOLFxuICAgICAgZGlhZ09iai5kYi5MSU5FVFlQRS5ET1RURURfT1BFTixcbiAgICAgIGRpYWdPYmouZGIuTElORVRZUEUuU09MSUQsXG4gICAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLkRPVFRFRCxcbiAgICAgIGRpYWdPYmouZGIuTElORVRZUEUuU09MSURfQ1JPU1MsXG4gICAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLkRPVFRFRF9DUk9TUyxcbiAgICAgIGRpYWdPYmouZGIuTElORVRZUEUuU09MSURfUE9JTlQsXG4gICAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLkRPVFRFRF9QT0lOVFxuICAgIF0uaW5jbHVkZXMobXNnLnR5cGUpKSB7XG4gICAgICBzZXF1ZW5jZUluZGV4ID0gc2VxdWVuY2VJbmRleCArIHNlcXVlbmNlSW5kZXhTdGVwO1xuICAgIH1cbiAgICBpbmRleCsrO1xuICB9XG4gIGxvZy5kZWJ1ZyhcImNyZWF0ZWRBY3RvcnNcIiwgY3JlYXRlZEFjdG9ycyk7XG4gIGxvZy5kZWJ1ZyhcImRlc3Ryb3llZEFjdG9yc1wiLCBkZXN0cm95ZWRBY3RvcnMpO1xuICBhd2FpdCBkcmF3QWN0b3JzKGRpYWdyYW0yLCBhY3RvcnMsIGFjdG9yS2V5cywgZmFsc2UpO1xuICBmb3IgKGNvbnN0IGUgb2YgbWVzc2FnZXNUb0RyYXcpIHtcbiAgICBhd2FpdCBkcmF3TWVzc2FnZShkaWFncmFtMiwgZS5tZXNzYWdlTW9kZWwsIGUubGluZVN0YXJ0WSwgZGlhZ09iaik7XG4gIH1cbiAgaWYgKGNvbmYubWlycm9yQWN0b3JzKSB7XG4gICAgYXdhaXQgZHJhd0FjdG9ycyhkaWFncmFtMiwgYWN0b3JzLCBhY3RvcktleXMsIHRydWUpO1xuICB9XG4gIGJhY2tncm91bmRzLmZvckVhY2goKGUpID0+IHN2Z0RyYXcuZHJhd0JhY2tncm91bmRSZWN0KGRpYWdyYW0yLCBlKSk7XG4gIGZpeExpZmVMaW5lSGVpZ2h0cyhkaWFncmFtMiwgYWN0b3JzLCBhY3RvcktleXMsIGNvbmYpO1xuICBmb3IgKGNvbnN0IGJveDIgb2YgYm91bmRzLm1vZGVscy5ib3hlcykge1xuICAgIGJveDIuaGVpZ2h0ID0gYm91bmRzLmdldFZlcnRpY2FsUG9zKCkgLSBib3gyLnk7XG4gICAgYm91bmRzLmluc2VydChib3gyLngsIGJveDIueSwgYm94Mi54ICsgYm94Mi53aWR0aCwgYm94Mi5oZWlnaHQpO1xuICAgIGJveDIuc3RhcnR4ID0gYm94Mi54O1xuICAgIGJveDIuc3RhcnR5ID0gYm94Mi55O1xuICAgIGJveDIuc3RvcHggPSBib3gyLnN0YXJ0eCArIGJveDIud2lkdGg7XG4gICAgYm94Mi5zdG9weSA9IGJveDIuc3RhcnR5ICsgYm94Mi5oZWlnaHQ7XG4gICAgYm94Mi5zdHJva2UgPSBcInJnYigwLDAsMCwgMC41KVwiO1xuICAgIGF3YWl0IHN2Z0RyYXcuZHJhd0JveChkaWFncmFtMiwgYm94MiwgY29uZik7XG4gIH1cbiAgaWYgKGhhc0JveGVzKSB7XG4gICAgYm91bmRzLmJ1bXBWZXJ0aWNhbFBvcyhjb25mLmJveE1hcmdpbik7XG4gIH1cbiAgY29uc3QgcmVxdWlyZWRCb3hTaXplID0gZHJhd0FjdG9yc1BvcHVwKGRpYWdyYW0yLCBhY3RvcnMsIGFjdG9yS2V5cywgZG9jKTtcbiAgY29uc3QgeyBib3VuZHM6IGJveCB9ID0gYm91bmRzLmdldEJvdW5kcygpO1xuICBsZXQgYm94SGVpZ2h0ID0gYm94LnN0b3B5IC0gYm94LnN0YXJ0eTtcbiAgaWYgKGJveEhlaWdodCA8IHJlcXVpcmVkQm94U2l6ZS5tYXhIZWlnaHQpIHtcbiAgICBib3hIZWlnaHQgPSByZXF1aXJlZEJveFNpemUubWF4SGVpZ2h0O1xuICB9XG4gIGxldCBoZWlnaHQgPSBib3hIZWlnaHQgKyAyICogY29uZi5kaWFncmFtTWFyZ2luWTtcbiAgaWYgKGNvbmYubWlycm9yQWN0b3JzKSB7XG4gICAgaGVpZ2h0ID0gaGVpZ2h0IC0gY29uZi5ib3hNYXJnaW4gKyBjb25mLmJvdHRvbU1hcmdpbkFkajtcbiAgfVxuICBsZXQgYm94V2lkdGggPSBib3guc3RvcHggLSBib3guc3RhcnR4O1xuICBpZiAoYm94V2lkdGggPCByZXF1aXJlZEJveFNpemUubWF4V2lkdGgpIHtcbiAgICBib3hXaWR0aCA9IHJlcXVpcmVkQm94U2l6ZS5tYXhXaWR0aDtcbiAgfVxuICBjb25zdCB3aWR0aCA9IGJveFdpZHRoICsgMiAqIGNvbmYuZGlhZ3JhbU1hcmdpblg7XG4gIGlmICh0aXRsZSkge1xuICAgIGRpYWdyYW0yLmFwcGVuZChcInRleHRcIikudGV4dCh0aXRsZSkuYXR0cihcInhcIiwgKGJveC5zdG9weCAtIGJveC5zdGFydHgpIC8gMiAtIDIgKiBjb25mLmRpYWdyYW1NYXJnaW5YKS5hdHRyKFwieVwiLCAtMjUpO1xuICB9XG4gIGNvbmZpZ3VyZVN2Z1NpemUoZGlhZ3JhbTIsIGhlaWdodCwgd2lkdGgsIGNvbmYudXNlTWF4V2lkdGgpO1xuICBjb25zdCBleHRyYVZlcnRGb3JUaXRsZSA9IHRpdGxlID8gNDAgOiAwO1xuICBkaWFncmFtMi5hdHRyKFxuICAgIFwidmlld0JveFwiLFxuICAgIGJveC5zdGFydHggLSBjb25mLmRpYWdyYW1NYXJnaW5YICsgXCIgLVwiICsgKGNvbmYuZGlhZ3JhbU1hcmdpblkgKyBleHRyYVZlcnRGb3JUaXRsZSkgKyBcIiBcIiArIHdpZHRoICsgXCIgXCIgKyAoaGVpZ2h0ICsgZXh0cmFWZXJ0Rm9yVGl0bGUpXG4gICk7XG4gIGxvZy5kZWJ1ZyhgbW9kZWxzOmAsIGJvdW5kcy5tb2RlbHMpO1xufTtcbmFzeW5jIGZ1bmN0aW9uIGdldE1heE1lc3NhZ2VXaWR0aFBlckFjdG9yKGFjdG9ycywgbWVzc2FnZXMsIGRpYWdPYmopIHtcbiAgY29uc3QgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3IgPSB7fTtcbiAgZm9yIChjb25zdCBtc2cgb2YgbWVzc2FnZXMpIHtcbiAgICBpZiAoYWN0b3JzW21zZy50b10gJiYgYWN0b3JzW21zZy5mcm9tXSkge1xuICAgICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbbXNnLnRvXTtcbiAgICAgIGlmIChtc2cucGxhY2VtZW50ID09PSBkaWFnT2JqLmRiLlBMQUNFTUVOVC5MRUZUT0YgJiYgIWFjdG9yLnByZXZBY3Rvcikge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChtc2cucGxhY2VtZW50ID09PSBkaWFnT2JqLmRiLlBMQUNFTUVOVC5SSUdIVE9GICYmICFhY3Rvci5uZXh0QWN0b3IpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBjb25zdCBpc05vdGUgPSBtc2cucGxhY2VtZW50ICE9PSB2b2lkIDA7XG4gICAgICBjb25zdCBpc01lc3NhZ2UgPSAhaXNOb3RlO1xuICAgICAgY29uc3QgdGV4dEZvbnQgPSBpc05vdGUgPyBub3RlRm9udChjb25mKSA6IG1lc3NhZ2VGb250KGNvbmYpO1xuICAgICAgY29uc3Qgd3JhcHBlZE1lc3NhZ2UgPSBtc2cud3JhcCA/IHV0aWxzLndyYXBMYWJlbChtc2cubWVzc2FnZSwgY29uZi53aWR0aCAtIDIgKiBjb25mLndyYXBQYWRkaW5nLCB0ZXh0Rm9udCkgOiBtc2cubWVzc2FnZTtcbiAgICAgIGNvbnN0IG1lc3NhZ2VEaW1lbnNpb25zID0gaGFzS2F0ZXgod3JhcHBlZE1lc3NhZ2UpID8gYXdhaXQgY2FsY3VsYXRlTWF0aE1MRGltZW5zaW9ucyhtc2cubWVzc2FnZSwgZ2V0Q29uZmlnKCkpIDogdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMod3JhcHBlZE1lc3NhZ2UsIHRleHRGb250KTtcbiAgICAgIGNvbnN0IG1lc3NhZ2VXaWR0aCA9IG1lc3NhZ2VEaW1lbnNpb25zLndpZHRoICsgMiAqIGNvbmYud3JhcFBhZGRpbmc7XG4gICAgICBpZiAoaXNNZXNzYWdlICYmIG1zZy5mcm9tID09PSBhY3Rvci5uZXh0QWN0b3IpIHtcbiAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbbXNnLnRvXSA9IGNvbW1vbi5nZXRNYXgoXG4gICAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbbXNnLnRvXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChpc01lc3NhZ2UgJiYgbXNnLmZyb20gPT09IGFjdG9yLnByZXZBY3Rvcikge1xuICAgICAgICBtYXhNZXNzYWdlV2lkdGhQZXJBY3Rvclttc2cuZnJvbV0gPSBjb21tb24uZ2V0TWF4KFxuICAgICAgICAgIG1heE1lc3NhZ2VXaWR0aFBlckFjdG9yW21zZy5mcm9tXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChpc01lc3NhZ2UgJiYgbXNnLmZyb20gPT09IG1zZy50bykge1xuICAgICAgICBtYXhNZXNzYWdlV2lkdGhQZXJBY3Rvclttc2cuZnJvbV0gPSBjb21tb24uZ2V0TWF4KFxuICAgICAgICAgIG1heE1lc3NhZ2VXaWR0aFBlckFjdG9yW21zZy5mcm9tXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aCAvIDJcbiAgICAgICAgKTtcbiAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbbXNnLnRvXSA9IGNvbW1vbi5nZXRNYXgoXG4gICAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbbXNnLnRvXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aCAvIDJcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSBpZiAobXNnLnBsYWNlbWVudCA9PT0gZGlhZ09iai5kYi5QTEFDRU1FTlQuUklHSFRPRikge1xuICAgICAgICBtYXhNZXNzYWdlV2lkdGhQZXJBY3Rvclttc2cuZnJvbV0gPSBjb21tb24uZ2V0TWF4KFxuICAgICAgICAgIG1heE1lc3NhZ2VXaWR0aFBlckFjdG9yW21zZy5mcm9tXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChtc2cucGxhY2VtZW50ID09PSBkaWFnT2JqLmRiLlBMQUNFTUVOVC5MRUZUT0YpIHtcbiAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbYWN0b3IucHJldkFjdG9yXSA9IGNvbW1vbi5nZXRNYXgoXG4gICAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbYWN0b3IucHJldkFjdG9yXSB8fCAwLFxuICAgICAgICAgIG1lc3NhZ2VXaWR0aFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChtc2cucGxhY2VtZW50ID09PSBkaWFnT2JqLmRiLlBMQUNFTUVOVC5PVkVSKSB7XG4gICAgICAgIGlmIChhY3Rvci5wcmV2QWN0b3IpIHtcbiAgICAgICAgICBtYXhNZXNzYWdlV2lkdGhQZXJBY3RvclthY3Rvci5wcmV2QWN0b3JdID0gY29tbW9uLmdldE1heChcbiAgICAgICAgICAgIG1heE1lc3NhZ2VXaWR0aFBlckFjdG9yW2FjdG9yLnByZXZBY3Rvcl0gfHwgMCxcbiAgICAgICAgICAgIG1lc3NhZ2VXaWR0aCAvIDJcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3Rvci5uZXh0QWN0b3IpIHtcbiAgICAgICAgICBtYXhNZXNzYWdlV2lkdGhQZXJBY3Rvclttc2cuZnJvbV0gPSBjb21tb24uZ2V0TWF4KFxuICAgICAgICAgICAgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3JbbXNnLmZyb21dIHx8IDAsXG4gICAgICAgICAgICBtZXNzYWdlV2lkdGggLyAyXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBsb2cuZGVidWcoXCJtYXhNZXNzYWdlV2lkdGhQZXJBY3RvcjpcIiwgbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3IpO1xuICByZXR1cm4gbWF4TWVzc2FnZVdpZHRoUGVyQWN0b3I7XG59XG5jb25zdCBnZXRSZXF1aXJlZFBvcHVwV2lkdGggPSBmdW5jdGlvbihhY3Rvcikge1xuICBsZXQgcmVxdWlyZWRQb3B1cFdpZHRoID0gMDtcbiAgY29uc3QgdGV4dEZvbnQgPSBhY3RvckZvbnQoY29uZik7XG4gIGZvciAoY29uc3Qga2V5IGluIGFjdG9yLmxpbmtzKSB7XG4gICAgY29uc3QgbGFiZWxEaW1lbnNpb25zID0gdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMoa2V5LCB0ZXh0Rm9udCk7XG4gICAgY29uc3QgbGFiZWxXaWR0aCA9IGxhYmVsRGltZW5zaW9ucy53aWR0aCArIDIgKiBjb25mLndyYXBQYWRkaW5nICsgMiAqIGNvbmYuYm94TWFyZ2luO1xuICAgIGlmIChyZXF1aXJlZFBvcHVwV2lkdGggPCBsYWJlbFdpZHRoKSB7XG4gICAgICByZXF1aXJlZFBvcHVwV2lkdGggPSBsYWJlbFdpZHRoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVxdWlyZWRQb3B1cFdpZHRoO1xufTtcbmFzeW5jIGZ1bmN0aW9uIGNhbGN1bGF0ZUFjdG9yTWFyZ2lucyhhY3RvcnMsIGFjdG9yVG9NZXNzYWdlV2lkdGgsIGJveGVzKSB7XG4gIGxldCBtYXhIZWlnaHQgPSAwO1xuICBmb3IgKGNvbnN0IHByb3Agb2YgT2JqZWN0LmtleXMoYWN0b3JzKSkge1xuICAgIGNvbnN0IGFjdG9yID0gYWN0b3JzW3Byb3BdO1xuICAgIGlmIChhY3Rvci53cmFwKSB7XG4gICAgICBhY3Rvci5kZXNjcmlwdGlvbiA9IHV0aWxzLndyYXBMYWJlbChcbiAgICAgICAgYWN0b3IuZGVzY3JpcHRpb24sXG4gICAgICAgIGNvbmYud2lkdGggLSAyICogY29uZi53cmFwUGFkZGluZyxcbiAgICAgICAgYWN0b3JGb250KGNvbmYpXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCBhY3REaW1zID0gaGFzS2F0ZXgoYWN0b3IuZGVzY3JpcHRpb24pID8gYXdhaXQgY2FsY3VsYXRlTWF0aE1MRGltZW5zaW9ucyhhY3Rvci5kZXNjcmlwdGlvbiwgZ2V0Q29uZmlnKCkpIDogdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMoYWN0b3IuZGVzY3JpcHRpb24sIGFjdG9yRm9udChjb25mKSk7XG4gICAgYWN0b3Iud2lkdGggPSBhY3Rvci53cmFwID8gY29uZi53aWR0aCA6IGNvbW1vbi5nZXRNYXgoY29uZi53aWR0aCwgYWN0RGltcy53aWR0aCArIDIgKiBjb25mLndyYXBQYWRkaW5nKTtcbiAgICBhY3Rvci5oZWlnaHQgPSBhY3Rvci53cmFwID8gY29tbW9uLmdldE1heChhY3REaW1zLmhlaWdodCwgY29uZi5oZWlnaHQpIDogY29uZi5oZWlnaHQ7XG4gICAgbWF4SGVpZ2h0ID0gY29tbW9uLmdldE1heChtYXhIZWlnaHQsIGFjdG9yLmhlaWdodCk7XG4gIH1cbiAgZm9yIChjb25zdCBhY3RvcktleSBpbiBhY3RvclRvTWVzc2FnZVdpZHRoKSB7XG4gICAgY29uc3QgYWN0b3IgPSBhY3RvcnNbYWN0b3JLZXldO1xuICAgIGlmICghYWN0b3IpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBjb25zdCBuZXh0QWN0b3IgPSBhY3RvcnNbYWN0b3IubmV4dEFjdG9yXTtcbiAgICBpZiAoIW5leHRBY3Rvcikge1xuICAgICAgY29uc3QgbWVzc2FnZVdpZHRoMiA9IGFjdG9yVG9NZXNzYWdlV2lkdGhbYWN0b3JLZXldO1xuICAgICAgY29uc3QgYWN0b3JXaWR0aDIgPSBtZXNzYWdlV2lkdGgyICsgY29uZi5hY3Rvck1hcmdpbiAtIGFjdG9yLndpZHRoIC8gMjtcbiAgICAgIGFjdG9yLm1hcmdpbiA9IGNvbW1vbi5nZXRNYXgoYWN0b3JXaWR0aDIsIGNvbmYuYWN0b3JNYXJnaW4pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IG1lc3NhZ2VXaWR0aCA9IGFjdG9yVG9NZXNzYWdlV2lkdGhbYWN0b3JLZXldO1xuICAgIGNvbnN0IGFjdG9yV2lkdGggPSBtZXNzYWdlV2lkdGggKyBjb25mLmFjdG9yTWFyZ2luIC0gYWN0b3Iud2lkdGggLyAyIC0gbmV4dEFjdG9yLndpZHRoIC8gMjtcbiAgICBhY3Rvci5tYXJnaW4gPSBjb21tb24uZ2V0TWF4KGFjdG9yV2lkdGgsIGNvbmYuYWN0b3JNYXJnaW4pO1xuICB9XG4gIGxldCBtYXhCb3hIZWlnaHQgPSAwO1xuICBib3hlcy5mb3JFYWNoKChib3gpID0+IHtcbiAgICBjb25zdCB0ZXh0Rm9udCA9IG1lc3NhZ2VGb250KGNvbmYpO1xuICAgIGxldCB0b3RhbFdpZHRoID0gYm94LmFjdG9yS2V5cy5yZWR1Y2UoKHRvdGFsLCBhS2V5KSA9PiB7XG4gICAgICByZXR1cm4gdG90YWwgKz0gYWN0b3JzW2FLZXldLndpZHRoICsgKGFjdG9yc1thS2V5XS5tYXJnaW4gfHwgMCk7XG4gICAgfSwgMCk7XG4gICAgdG90YWxXaWR0aCAtPSAyICogY29uZi5ib3hUZXh0TWFyZ2luO1xuICAgIGlmIChib3gud3JhcCkge1xuICAgICAgYm94Lm5hbWUgPSB1dGlscy53cmFwTGFiZWwoYm94Lm5hbWUsIHRvdGFsV2lkdGggLSAyICogY29uZi53cmFwUGFkZGluZywgdGV4dEZvbnQpO1xuICAgIH1cbiAgICBjb25zdCBib3hNc2dEaW1lbnNpb25zID0gdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMoYm94Lm5hbWUsIHRleHRGb250KTtcbiAgICBtYXhCb3hIZWlnaHQgPSBjb21tb24uZ2V0TWF4KGJveE1zZ0RpbWVuc2lvbnMuaGVpZ2h0LCBtYXhCb3hIZWlnaHQpO1xuICAgIGNvbnN0IG1pbldpZHRoID0gY29tbW9uLmdldE1heCh0b3RhbFdpZHRoLCBib3hNc2dEaW1lbnNpb25zLndpZHRoICsgMiAqIGNvbmYud3JhcFBhZGRpbmcpO1xuICAgIGJveC5tYXJnaW4gPSBjb25mLmJveFRleHRNYXJnaW47XG4gICAgaWYgKHRvdGFsV2lkdGggPCBtaW5XaWR0aCkge1xuICAgICAgY29uc3QgbWlzc2luZyA9IChtaW5XaWR0aCAtIHRvdGFsV2lkdGgpIC8gMjtcbiAgICAgIGJveC5tYXJnaW4gKz0gbWlzc2luZztcbiAgICB9XG4gIH0pO1xuICBib3hlcy5mb3JFYWNoKChib3gpID0+IGJveC50ZXh0TWF4SGVpZ2h0ID0gbWF4Qm94SGVpZ2h0KTtcbiAgcmV0dXJuIGNvbW1vbi5nZXRNYXgobWF4SGVpZ2h0LCBjb25mLmhlaWdodCk7XG59XG5jb25zdCBidWlsZE5vdGVNb2RlbCA9IGFzeW5jIGZ1bmN0aW9uKG1zZywgYWN0b3JzLCBkaWFnT2JqKSB7XG4gIGNvbnN0IHN0YXJ0eCA9IGFjdG9yc1ttc2cuZnJvbV0ueDtcbiAgY29uc3Qgc3RvcHggPSBhY3RvcnNbbXNnLnRvXS54O1xuICBjb25zdCBzaG91bGRXcmFwID0gbXNnLndyYXAgJiYgbXNnLm1lc3NhZ2U7XG4gIGxldCB0ZXh0RGltZW5zaW9ucyA9IGhhc0thdGV4KG1zZy5tZXNzYWdlKSA/IGF3YWl0IGNhbGN1bGF0ZU1hdGhNTERpbWVuc2lvbnMobXNnLm1lc3NhZ2UsIGdldENvbmZpZygpKSA6IHV0aWxzLmNhbGN1bGF0ZVRleHREaW1lbnNpb25zKFxuICAgIHNob3VsZFdyYXAgPyB1dGlscy53cmFwTGFiZWwobXNnLm1lc3NhZ2UsIGNvbmYud2lkdGgsIG5vdGVGb250KGNvbmYpKSA6IG1zZy5tZXNzYWdlLFxuICAgIG5vdGVGb250KGNvbmYpXG4gICk7XG4gIGNvbnN0IG5vdGVNb2RlbCA9IHtcbiAgICB3aWR0aDogc2hvdWxkV3JhcCA/IGNvbmYud2lkdGggOiBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGgsIHRleHREaW1lbnNpb25zLndpZHRoICsgMiAqIGNvbmYubm90ZU1hcmdpbiksXG4gICAgaGVpZ2h0OiAwLFxuICAgIHN0YXJ0eDogYWN0b3JzW21zZy5mcm9tXS54LFxuICAgIHN0b3B4OiAwLFxuICAgIHN0YXJ0eTogMCxcbiAgICBzdG9weTogMCxcbiAgICBtZXNzYWdlOiBtc2cubWVzc2FnZVxuICB9O1xuICBpZiAobXNnLnBsYWNlbWVudCA9PT0gZGlhZ09iai5kYi5QTEFDRU1FTlQuUklHSFRPRikge1xuICAgIG5vdGVNb2RlbC53aWR0aCA9IHNob3VsZFdyYXAgPyBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGgsIHRleHREaW1lbnNpb25zLndpZHRoKSA6IGNvbW1vbi5nZXRNYXgoXG4gICAgICBhY3RvcnNbbXNnLmZyb21dLndpZHRoIC8gMiArIGFjdG9yc1ttc2cudG9dLndpZHRoIC8gMixcbiAgICAgIHRleHREaW1lbnNpb25zLndpZHRoICsgMiAqIGNvbmYubm90ZU1hcmdpblxuICAgICk7XG4gICAgbm90ZU1vZGVsLnN0YXJ0eCA9IHN0YXJ0eCArIChhY3RvcnNbbXNnLmZyb21dLndpZHRoICsgY29uZi5hY3Rvck1hcmdpbikgLyAyO1xuICB9IGVsc2UgaWYgKG1zZy5wbGFjZW1lbnQgPT09IGRpYWdPYmouZGIuUExBQ0VNRU5ULkxFRlRPRikge1xuICAgIG5vdGVNb2RlbC53aWR0aCA9IHNob3VsZFdyYXAgPyBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGgsIHRleHREaW1lbnNpb25zLndpZHRoICsgMiAqIGNvbmYubm90ZU1hcmdpbikgOiBjb21tb24uZ2V0TWF4KFxuICAgICAgYWN0b3JzW21zZy5mcm9tXS53aWR0aCAvIDIgKyBhY3RvcnNbbXNnLnRvXS53aWR0aCAvIDIsXG4gICAgICB0ZXh0RGltZW5zaW9ucy53aWR0aCArIDIgKiBjb25mLm5vdGVNYXJnaW5cbiAgICApO1xuICAgIG5vdGVNb2RlbC5zdGFydHggPSBzdGFydHggLSBub3RlTW9kZWwud2lkdGggKyAoYWN0b3JzW21zZy5mcm9tXS53aWR0aCAtIGNvbmYuYWN0b3JNYXJnaW4pIC8gMjtcbiAgfSBlbHNlIGlmIChtc2cudG8gPT09IG1zZy5mcm9tKSB7XG4gICAgdGV4dERpbWVuc2lvbnMgPSB1dGlscy5jYWxjdWxhdGVUZXh0RGltZW5zaW9ucyhcbiAgICAgIHNob3VsZFdyYXAgPyB1dGlscy53cmFwTGFiZWwoXG4gICAgICAgIG1zZy5tZXNzYWdlLFxuICAgICAgICBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGgsIGFjdG9yc1ttc2cuZnJvbV0ud2lkdGgpLFxuICAgICAgICBub3RlRm9udChjb25mKVxuICAgICAgKSA6IG1zZy5tZXNzYWdlLFxuICAgICAgbm90ZUZvbnQoY29uZilcbiAgICApO1xuICAgIG5vdGVNb2RlbC53aWR0aCA9IHNob3VsZFdyYXAgPyBjb21tb24uZ2V0TWF4KGNvbmYud2lkdGgsIGFjdG9yc1ttc2cuZnJvbV0ud2lkdGgpIDogY29tbW9uLmdldE1heChcbiAgICAgIGFjdG9yc1ttc2cuZnJvbV0ud2lkdGgsXG4gICAgICBjb25mLndpZHRoLFxuICAgICAgdGV4dERpbWVuc2lvbnMud2lkdGggKyAyICogY29uZi5ub3RlTWFyZ2luXG4gICAgKTtcbiAgICBub3RlTW9kZWwuc3RhcnR4ID0gc3RhcnR4ICsgKGFjdG9yc1ttc2cuZnJvbV0ud2lkdGggLSBub3RlTW9kZWwud2lkdGgpIC8gMjtcbiAgfSBlbHNlIHtcbiAgICBub3RlTW9kZWwud2lkdGggPSBNYXRoLmFicyhzdGFydHggKyBhY3RvcnNbbXNnLmZyb21dLndpZHRoIC8gMiAtIChzdG9weCArIGFjdG9yc1ttc2cudG9dLndpZHRoIC8gMikpICsgY29uZi5hY3Rvck1hcmdpbjtcbiAgICBub3RlTW9kZWwuc3RhcnR4ID0gc3RhcnR4IDwgc3RvcHggPyBzdGFydHggKyBhY3RvcnNbbXNnLmZyb21dLndpZHRoIC8gMiAtIGNvbmYuYWN0b3JNYXJnaW4gLyAyIDogc3RvcHggKyBhY3RvcnNbbXNnLnRvXS53aWR0aCAvIDIgLSBjb25mLmFjdG9yTWFyZ2luIC8gMjtcbiAgfVxuICBpZiAoc2hvdWxkV3JhcCkge1xuICAgIG5vdGVNb2RlbC5tZXNzYWdlID0gdXRpbHMud3JhcExhYmVsKFxuICAgICAgbXNnLm1lc3NhZ2UsXG4gICAgICBub3RlTW9kZWwud2lkdGggLSAyICogY29uZi53cmFwUGFkZGluZyxcbiAgICAgIG5vdGVGb250KGNvbmYpXG4gICAgKTtcbiAgfVxuICBsb2cuZGVidWcoXG4gICAgYE5NOlske25vdGVNb2RlbC5zdGFydHh9LCR7bm90ZU1vZGVsLnN0b3B4fSwke25vdGVNb2RlbC5zdGFydHl9LCR7bm90ZU1vZGVsLnN0b3B5fToke25vdGVNb2RlbC53aWR0aH0sJHtub3RlTW9kZWwuaGVpZ2h0fT0ke21zZy5tZXNzYWdlfV1gXG4gICk7XG4gIHJldHVybiBub3RlTW9kZWw7XG59O1xuY29uc3QgYnVpbGRNZXNzYWdlTW9kZWwgPSBmdW5jdGlvbihtc2csIGFjdG9ycywgZGlhZ09iaikge1xuICBpZiAoIVtcbiAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLlNPTElEX09QRU4sXG4gICAgZGlhZ09iai5kYi5MSU5FVFlQRS5ET1RURURfT1BFTixcbiAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLlNPTElELFxuICAgIGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVELFxuICAgIGRpYWdPYmouZGIuTElORVRZUEUuU09MSURfQ1JPU1MsXG4gICAgZGlhZ09iai5kYi5MSU5FVFlQRS5ET1RURURfQ1JPU1MsXG4gICAgZGlhZ09iai5kYi5MSU5FVFlQRS5TT0xJRF9QT0lOVCxcbiAgICBkaWFnT2JqLmRiLkxJTkVUWVBFLkRPVFRFRF9QT0lOVFxuICBdLmluY2x1ZGVzKG1zZy50eXBlKSkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuICBjb25zdCBbZnJvbUxlZnQsIGZyb21SaWdodF0gPSBhY3RpdmF0aW9uQm91bmRzKG1zZy5mcm9tLCBhY3RvcnMpO1xuICBjb25zdCBbdG9MZWZ0LCB0b1JpZ2h0XSA9IGFjdGl2YXRpb25Cb3VuZHMobXNnLnRvLCBhY3RvcnMpO1xuICBjb25zdCBpc0Fycm93VG9SaWdodCA9IGZyb21MZWZ0IDw9IHRvTGVmdDtcbiAgY29uc3Qgc3RhcnR4ID0gaXNBcnJvd1RvUmlnaHQgPyBmcm9tUmlnaHQgOiBmcm9tTGVmdDtcbiAgbGV0IHN0b3B4ID0gaXNBcnJvd1RvUmlnaHQgPyB0b0xlZnQgOiB0b1JpZ2h0O1xuICBjb25zdCBpc0Fycm93VG9BY3RpdmF0aW9uID0gTWF0aC5hYnModG9MZWZ0IC0gdG9SaWdodCkgPiAyO1xuICBjb25zdCBhZGp1c3RWYWx1ZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHJldHVybiBpc0Fycm93VG9SaWdodCA/IC12YWx1ZSA6IHZhbHVlO1xuICB9O1xuICBpZiAobXNnLmZyb20gPT09IG1zZy50bykge1xuICAgIHN0b3B4ID0gc3RhcnR4O1xuICB9IGVsc2Uge1xuICAgIGlmIChtc2cuYWN0aXZhdGUgJiYgIWlzQXJyb3dUb0FjdGl2YXRpb24pIHtcbiAgICAgIHN0b3B4ICs9IGFkanVzdFZhbHVlKGNvbmYuYWN0aXZhdGlvbldpZHRoIC8gMiAtIDEpO1xuICAgIH1cbiAgICBpZiAoIVtkaWFnT2JqLmRiLkxJTkVUWVBFLlNPTElEX09QRU4sIGRpYWdPYmouZGIuTElORVRZUEUuRE9UVEVEX09QRU5dLmluY2x1ZGVzKG1zZy50eXBlKSkge1xuICAgICAgc3RvcHggKz0gYWRqdXN0VmFsdWUoMyk7XG4gICAgfVxuICB9XG4gIGNvbnN0IGFsbEJvdW5kcyA9IFtmcm9tTGVmdCwgZnJvbVJpZ2h0LCB0b0xlZnQsIHRvUmlnaHRdO1xuICBjb25zdCBib3VuZGVkV2lkdGggPSBNYXRoLmFicyhzdGFydHggLSBzdG9weCk7XG4gIGlmIChtc2cud3JhcCAmJiBtc2cubWVzc2FnZSkge1xuICAgIG1zZy5tZXNzYWdlID0gdXRpbHMud3JhcExhYmVsKFxuICAgICAgbXNnLm1lc3NhZ2UsXG4gICAgICBjb21tb24uZ2V0TWF4KGJvdW5kZWRXaWR0aCArIDIgKiBjb25mLndyYXBQYWRkaW5nLCBjb25mLndpZHRoKSxcbiAgICAgIG1lc3NhZ2VGb250KGNvbmYpXG4gICAgKTtcbiAgfVxuICBjb25zdCBtc2dEaW1zID0gdXRpbHMuY2FsY3VsYXRlVGV4dERpbWVuc2lvbnMobXNnLm1lc3NhZ2UsIG1lc3NhZ2VGb250KGNvbmYpKTtcbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogY29tbW9uLmdldE1heChcbiAgICAgIG1zZy53cmFwID8gMCA6IG1zZ0RpbXMud2lkdGggKyAyICogY29uZi53cmFwUGFkZGluZyxcbiAgICAgIGJvdW5kZWRXaWR0aCArIDIgKiBjb25mLndyYXBQYWRkaW5nLFxuICAgICAgY29uZi53aWR0aFxuICAgICksXG4gICAgaGVpZ2h0OiAwLFxuICAgIHN0YXJ0eCxcbiAgICBzdG9weCxcbiAgICBzdGFydHk6IDAsXG4gICAgc3RvcHk6IDAsXG4gICAgbWVzc2FnZTogbXNnLm1lc3NhZ2UsXG4gICAgdHlwZTogbXNnLnR5cGUsXG4gICAgd3JhcDogbXNnLndyYXAsXG4gICAgZnJvbUJvdW5kczogTWF0aC5taW4uYXBwbHkobnVsbCwgYWxsQm91bmRzKSxcbiAgICB0b0JvdW5kczogTWF0aC5tYXguYXBwbHkobnVsbCwgYWxsQm91bmRzKVxuICB9O1xufTtcbmNvbnN0IGNhbGN1bGF0ZUxvb3BCb3VuZHMgPSBhc3luYyBmdW5jdGlvbihtZXNzYWdlcywgYWN0b3JzLCBfbWF4V2lkdGhQZXJBY3RvciwgZGlhZ09iaikge1xuICBjb25zdCBsb29wcyA9IHt9O1xuICBjb25zdCBzdGFjayA9IFtdO1xuICBsZXQgY3VycmVudCwgbm90ZU1vZGVsLCBtc2dNb2RlbDtcbiAgZm9yIChjb25zdCBtc2cgb2YgbWVzc2FnZXMpIHtcbiAgICBtc2cuaWQgPSB1dGlscy5yYW5kb20oeyBsZW5ndGg6IDEwIH0pO1xuICAgIHN3aXRjaCAobXNnLnR5cGUpIHtcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5MT09QX1NUQVJUOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFMVF9TVEFSVDpcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5PUFRfU1RBUlQ6XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuUEFSX1NUQVJUOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLlBBUl9PVkVSX1NUQVJUOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkNSSVRJQ0FMX1NUQVJUOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkJSRUFLX1NUQVJUOlxuICAgICAgICBzdGFjay5wdXNoKHtcbiAgICAgICAgICBpZDogbXNnLmlkLFxuICAgICAgICAgIG1zZzogbXNnLm1lc3NhZ2UsXG4gICAgICAgICAgZnJvbTogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsXG4gICAgICAgICAgdG86IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLFxuICAgICAgICAgIHdpZHRoOiAwXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5BTFRfRUxTRTpcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5QQVJfQU5EOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkNSSVRJQ0FMX09QVElPTjpcbiAgICAgICAgaWYgKG1zZy5tZXNzYWdlKSB7XG4gICAgICAgICAgY3VycmVudCA9IHN0YWNrLnBvcCgpO1xuICAgICAgICAgIGxvb3BzW2N1cnJlbnQuaWRdID0gY3VycmVudDtcbiAgICAgICAgICBsb29wc1ttc2cuaWRdID0gY3VycmVudDtcbiAgICAgICAgICBzdGFjay5wdXNoKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkxPT1BfRU5EOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFMVF9FTkQ6XG4gICAgICBjYXNlIGRpYWdPYmouZGIuTElORVRZUEUuT1BUX0VORDpcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5QQVJfRU5EOlxuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkNSSVRJQ0FMX0VORDpcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5CUkVBS19FTkQ6XG4gICAgICAgIGN1cnJlbnQgPSBzdGFjay5wb3AoKTtcbiAgICAgICAgbG9vcHNbY3VycmVudC5pZF0gPSBjdXJyZW50O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgZGlhZ09iai5kYi5MSU5FVFlQRS5BQ1RJVkVfU1RBUlQ6XG4gICAgICAgIHtcbiAgICAgICAgICBjb25zdCBhY3RvclJlY3QgPSBhY3RvcnNbbXNnLmZyb20gPyBtc2cuZnJvbS5hY3RvciA6IG1zZy50by5hY3Rvcl07XG4gICAgICAgICAgY29uc3Qgc3RhY2tlZFNpemUgPSBhY3RvckFjdGl2YXRpb25zKG1zZy5mcm9tID8gbXNnLmZyb20uYWN0b3IgOiBtc2cudG8uYWN0b3IpLmxlbmd0aDtcbiAgICAgICAgICBjb25zdCB4ID0gYWN0b3JSZWN0LnggKyBhY3RvclJlY3Qud2lkdGggLyAyICsgKHN0YWNrZWRTaXplIC0gMSkgKiBjb25mLmFjdGl2YXRpb25XaWR0aCAvIDI7XG4gICAgICAgICAgY29uc3QgdG9BZGQgPSB7XG4gICAgICAgICAgICBzdGFydHg6IHgsXG4gICAgICAgICAgICBzdG9weDogeCArIGNvbmYuYWN0aXZhdGlvbldpZHRoLFxuICAgICAgICAgICAgYWN0b3I6IG1zZy5mcm9tLmFjdG9yLFxuICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICAgIH07XG4gICAgICAgICAgYm91bmRzLmFjdGl2YXRpb25zLnB1c2godG9BZGQpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBkaWFnT2JqLmRiLkxJTkVUWVBFLkFDVElWRV9FTkQ6XG4gICAgICAgIHtcbiAgICAgICAgICBjb25zdCBsYXN0QWN0b3JBY3RpdmF0aW9uSWR4ID0gYm91bmRzLmFjdGl2YXRpb25zLm1hcCgoYSkgPT4gYS5hY3RvcikubGFzdEluZGV4T2YobXNnLmZyb20uYWN0b3IpO1xuICAgICAgICAgIGRlbGV0ZSBib3VuZHMuYWN0aXZhdGlvbnMuc3BsaWNlKGxhc3RBY3RvckFjdGl2YXRpb25JZHgsIDEpWzBdO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb25zdCBpc05vdGUgPSBtc2cucGxhY2VtZW50ICE9PSB2b2lkIDA7XG4gICAgaWYgKGlzTm90ZSkge1xuICAgICAgbm90ZU1vZGVsID0gYXdhaXQgYnVpbGROb3RlTW9kZWwobXNnLCBhY3RvcnMsIGRpYWdPYmopO1xuICAgICAgbXNnLm5vdGVNb2RlbCA9IG5vdGVNb2RlbDtcbiAgICAgIHN0YWNrLmZvckVhY2goKHN0aykgPT4ge1xuICAgICAgICBjdXJyZW50ID0gc3RrO1xuICAgICAgICBjdXJyZW50LmZyb20gPSBjb21tb24uZ2V0TWluKGN1cnJlbnQuZnJvbSwgbm90ZU1vZGVsLnN0YXJ0eCk7XG4gICAgICAgIGN1cnJlbnQudG8gPSBjb21tb24uZ2V0TWF4KGN1cnJlbnQudG8sIG5vdGVNb2RlbC5zdGFydHggKyBub3RlTW9kZWwud2lkdGgpO1xuICAgICAgICBjdXJyZW50LndpZHRoID0gY29tbW9uLmdldE1heChjdXJyZW50LndpZHRoLCBNYXRoLmFicyhjdXJyZW50LmZyb20gLSBjdXJyZW50LnRvKSkgLSBjb25mLmxhYmVsQm94V2lkdGg7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbXNnTW9kZWwgPSBidWlsZE1lc3NhZ2VNb2RlbChtc2csIGFjdG9ycywgZGlhZ09iaik7XG4gICAgICBtc2cubXNnTW9kZWwgPSBtc2dNb2RlbDtcbiAgICAgIGlmIChtc2dNb2RlbC5zdGFydHggJiYgbXNnTW9kZWwuc3RvcHggJiYgc3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgICBzdGFjay5mb3JFYWNoKChzdGspID0+IHtcbiAgICAgICAgICBjdXJyZW50ID0gc3RrO1xuICAgICAgICAgIGlmIChtc2dNb2RlbC5zdGFydHggPT09IG1zZ01vZGVsLnN0b3B4KSB7XG4gICAgICAgICAgICBjb25zdCBmcm9tID0gYWN0b3JzW21zZy5mcm9tXTtcbiAgICAgICAgICAgIGNvbnN0IHRvID0gYWN0b3JzW21zZy50b107XG4gICAgICAgICAgICBjdXJyZW50LmZyb20gPSBjb21tb24uZ2V0TWluKFxuICAgICAgICAgICAgICBmcm9tLnggLSBtc2dNb2RlbC53aWR0aCAvIDIsXG4gICAgICAgICAgICAgIGZyb20ueCAtIGZyb20ud2lkdGggLyAyLFxuICAgICAgICAgICAgICBjdXJyZW50LmZyb21cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjdXJyZW50LnRvID0gY29tbW9uLmdldE1heChcbiAgICAgICAgICAgICAgdG8ueCArIG1zZ01vZGVsLndpZHRoIC8gMixcbiAgICAgICAgICAgICAgdG8ueCArIGZyb20ud2lkdGggLyAyLFxuICAgICAgICAgICAgICBjdXJyZW50LnRvXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY3VycmVudC53aWR0aCA9IGNvbW1vbi5nZXRNYXgoY3VycmVudC53aWR0aCwgTWF0aC5hYnMoY3VycmVudC50byAtIGN1cnJlbnQuZnJvbSkpIC0gY29uZi5sYWJlbEJveFdpZHRoO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjdXJyZW50LmZyb20gPSBjb21tb24uZ2V0TWluKG1zZ01vZGVsLnN0YXJ0eCwgY3VycmVudC5mcm9tKTtcbiAgICAgICAgICAgIGN1cnJlbnQudG8gPSBjb21tb24uZ2V0TWF4KG1zZ01vZGVsLnN0b3B4LCBjdXJyZW50LnRvKTtcbiAgICAgICAgICAgIGN1cnJlbnQud2lkdGggPSBjb21tb24uZ2V0TWF4KGN1cnJlbnQud2lkdGgsIG1zZ01vZGVsLndpZHRoKSAtIGNvbmYubGFiZWxCb3hXaWR0aDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBib3VuZHMuYWN0aXZhdGlvbnMgPSBbXTtcbiAgbG9nLmRlYnVnKFwiTG9vcCB0eXBlIHdpZHRoczpcIiwgbG9vcHMpO1xuICByZXR1cm4gbG9vcHM7XG59O1xuY29uc3QgcmVuZGVyZXIgPSB7XG4gIGJvdW5kcyxcbiAgZHJhd0FjdG9ycyxcbiAgZHJhd0FjdG9yc1BvcHVwLFxuICBzZXRDb25mLFxuICBkcmF3XG59O1xuY29uc3QgZGlhZ3JhbSA9IHtcbiAgcGFyc2VyOiBwYXJzZXIkMSxcbiAgZGIsXG4gIHJlbmRlcmVyLFxuICBzdHlsZXMsXG4gIGluaXQ6ICh7IHdyYXAgfSkgPT4ge1xuICAgIGRiLnNldFdyYXAod3JhcCk7XG4gIH1cbn07XG5leHBvcnQge1xuICBkaWFncmFtXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/sequenceDiagram-17ac3bff.js\n"));

/***/ }),

/***/ "./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/svgDrawCommon-3ba9043b.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/svgDrawCommon-3ba9043b.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: function() { return /* binding */ drawBackgroundRect; },\n/* harmony export */   b: function() { return /* binding */ drawEmbeddedImage; },\n/* harmony export */   c: function() { return /* binding */ drawImage; },\n/* harmony export */   d: function() { return /* binding */ drawRect; },\n/* harmony export */   e: function() { return /* binding */ getTextObj; },\n/* harmony export */   f: function() { return /* binding */ drawText; },\n/* harmony export */   g: function() { return /* binding */ getNoteRect; }\n/* harmony export */ });\n/* harmony import */ var _braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @braintree/sanitize-url */ \"./node_modules/.pnpm/@braintree+sanitize-url@6.0.4/node_modules/@braintree/sanitize-url/dist/index.js\");\n/* harmony import */ var _mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mermaid-ad1dc92f.js */ \"./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/mermaid-ad1dc92f.js\");\n\n\nconst drawRect = (element, rectData) => {\n  const rectElement = element.append(\"rect\");\n  rectElement.attr(\"x\", rectData.x);\n  rectElement.attr(\"y\", rectData.y);\n  rectElement.attr(\"fill\", rectData.fill);\n  rectElement.attr(\"stroke\", rectData.stroke);\n  rectElement.attr(\"width\", rectData.width);\n  rectElement.attr(\"height\", rectData.height);\n  if (rectData.name) {\n    rectElement.attr(\"name\", rectData.name);\n  }\n  rectData.rx !== void 0 && rectElement.attr(\"rx\", rectData.rx);\n  rectData.ry !== void 0 && rectElement.attr(\"ry\", rectData.ry);\n  if (rectData.attrs !== void 0) {\n    for (const attrKey in rectData.attrs) {\n      rectElement.attr(attrKey, rectData.attrs[attrKey]);\n    }\n  }\n  rectData.class !== void 0 && rectElement.attr(\"class\", rectData.class);\n  return rectElement;\n};\nconst drawBackgroundRect = (element, bounds) => {\n  const rectData = {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: \"rect\"\n  };\n  const rectElement = drawRect(element, rectData);\n  rectElement.lower();\n};\nconst drawText = (element, textData) => {\n  const nText = textData.text.replace(_mermaid_ad1dc92f_js__WEBPACK_IMPORTED_MODULE_1__.J, \" \");\n  const textElem = element.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  textData.class !== void 0 && textElem.attr(\"class\", textData.class);\n  const tspan = textElem.append(\"tspan\");\n  tspan.attr(\"x\", textData.x + textData.textMargin * 2);\n  tspan.text(nText);\n  return textElem;\n};\nconst drawImage = (elem, x, y, link) => {\n  const imageElement = elem.append(\"image\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__.sanitizeUrl)(link);\n  imageElement.attr(\"xlink:href\", sanitizedLink);\n};\nconst drawEmbeddedImage = (element, x, y, link) => {\n  const imageElement = element.append(\"use\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = (0,_braintree_sanitize_url__WEBPACK_IMPORTED_MODULE_0__.sanitizeUrl)(link);\n  imageElement.attr(\"xlink:href\", `#${sanitizedLink}`);\n};\nconst getNoteRect = () => {\n  const noteRectData = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    anchor: \"start\",\n    rx: 0,\n    ry: 0\n  };\n  return noteRectData;\n};\nconst getTextObj = () => {\n  const testObject = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    \"text-anchor\": \"start\",\n    style: \"#666\",\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true\n  };\n  return testObject;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvLnBucG0vbWVybWFpZEAxMC45LjQvbm9kZV9tb2R1bGVzL21lcm1haWQvZGlzdC9zdmdEcmF3Q29tbW9uLTNiYTkwNDNiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFzRDtBQUNNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsbURBQWM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9FQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvRUFBVztBQUNuQyxzQ0FBc0MsY0FBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbWVybWFpZEAxMC45LjQvbm9kZV9tb2R1bGVzL21lcm1haWQvZGlzdC9zdmdEcmF3Q29tbW9uLTNiYTkwNDNiLmpzPzU5OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2FuaXRpemVVcmwgfSBmcm9tIFwiQGJyYWludHJlZS9zYW5pdGl6ZS11cmxcIjtcbmltcG9ydCB7IEogYXMgbGluZUJyZWFrUmVnZXggfSBmcm9tIFwiLi9tZXJtYWlkLWFkMWRjOTJmLmpzXCI7XG5jb25zdCBkcmF3UmVjdCA9IChlbGVtZW50LCByZWN0RGF0YSkgPT4ge1xuICBjb25zdCByZWN0RWxlbWVudCA9IGVsZW1lbnQuYXBwZW5kKFwicmVjdFwiKTtcbiAgcmVjdEVsZW1lbnQuYXR0cihcInhcIiwgcmVjdERhdGEueCk7XG4gIHJlY3RFbGVtZW50LmF0dHIoXCJ5XCIsIHJlY3REYXRhLnkpO1xuICByZWN0RWxlbWVudC5hdHRyKFwiZmlsbFwiLCByZWN0RGF0YS5maWxsKTtcbiAgcmVjdEVsZW1lbnQuYXR0cihcInN0cm9rZVwiLCByZWN0RGF0YS5zdHJva2UpO1xuICByZWN0RWxlbWVudC5hdHRyKFwid2lkdGhcIiwgcmVjdERhdGEud2lkdGgpO1xuICByZWN0RWxlbWVudC5hdHRyKFwiaGVpZ2h0XCIsIHJlY3REYXRhLmhlaWdodCk7XG4gIGlmIChyZWN0RGF0YS5uYW1lKSB7XG4gICAgcmVjdEVsZW1lbnQuYXR0cihcIm5hbWVcIiwgcmVjdERhdGEubmFtZSk7XG4gIH1cbiAgcmVjdERhdGEucnggIT09IHZvaWQgMCAmJiByZWN0RWxlbWVudC5hdHRyKFwicnhcIiwgcmVjdERhdGEucngpO1xuICByZWN0RGF0YS5yeSAhPT0gdm9pZCAwICYmIHJlY3RFbGVtZW50LmF0dHIoXCJyeVwiLCByZWN0RGF0YS5yeSk7XG4gIGlmIChyZWN0RGF0YS5hdHRycyAhPT0gdm9pZCAwKSB7XG4gICAgZm9yIChjb25zdCBhdHRyS2V5IGluIHJlY3REYXRhLmF0dHJzKSB7XG4gICAgICByZWN0RWxlbWVudC5hdHRyKGF0dHJLZXksIHJlY3REYXRhLmF0dHJzW2F0dHJLZXldKTtcbiAgICB9XG4gIH1cbiAgcmVjdERhdGEuY2xhc3MgIT09IHZvaWQgMCAmJiByZWN0RWxlbWVudC5hdHRyKFwiY2xhc3NcIiwgcmVjdERhdGEuY2xhc3MpO1xuICByZXR1cm4gcmVjdEVsZW1lbnQ7XG59O1xuY29uc3QgZHJhd0JhY2tncm91bmRSZWN0ID0gKGVsZW1lbnQsIGJvdW5kcykgPT4ge1xuICBjb25zdCByZWN0RGF0YSA9IHtcbiAgICB4OiBib3VuZHMuc3RhcnR4LFxuICAgIHk6IGJvdW5kcy5zdGFydHksXG4gICAgd2lkdGg6IGJvdW5kcy5zdG9weCAtIGJvdW5kcy5zdGFydHgsXG4gICAgaGVpZ2h0OiBib3VuZHMuc3RvcHkgLSBib3VuZHMuc3RhcnR5LFxuICAgIGZpbGw6IGJvdW5kcy5maWxsLFxuICAgIHN0cm9rZTogYm91bmRzLnN0cm9rZSxcbiAgICBjbGFzczogXCJyZWN0XCJcbiAgfTtcbiAgY29uc3QgcmVjdEVsZW1lbnQgPSBkcmF3UmVjdChlbGVtZW50LCByZWN0RGF0YSk7XG4gIHJlY3RFbGVtZW50Lmxvd2VyKCk7XG59O1xuY29uc3QgZHJhd1RleHQgPSAoZWxlbWVudCwgdGV4dERhdGEpID0+IHtcbiAgY29uc3QgblRleHQgPSB0ZXh0RGF0YS50ZXh0LnJlcGxhY2UobGluZUJyZWFrUmVnZXgsIFwiIFwiKTtcbiAgY29uc3QgdGV4dEVsZW0gPSBlbGVtZW50LmFwcGVuZChcInRleHRcIik7XG4gIHRleHRFbGVtLmF0dHIoXCJ4XCIsIHRleHREYXRhLngpO1xuICB0ZXh0RWxlbS5hdHRyKFwieVwiLCB0ZXh0RGF0YS55KTtcbiAgdGV4dEVsZW0uYXR0cihcImNsYXNzXCIsIFwibGVnZW5kXCIpO1xuICB0ZXh0RWxlbS5zdHlsZShcInRleHQtYW5jaG9yXCIsIHRleHREYXRhLmFuY2hvcik7XG4gIHRleHREYXRhLmNsYXNzICE9PSB2b2lkIDAgJiYgdGV4dEVsZW0uYXR0cihcImNsYXNzXCIsIHRleHREYXRhLmNsYXNzKTtcbiAgY29uc3QgdHNwYW4gPSB0ZXh0RWxlbS5hcHBlbmQoXCJ0c3BhblwiKTtcbiAgdHNwYW4uYXR0cihcInhcIiwgdGV4dERhdGEueCArIHRleHREYXRhLnRleHRNYXJnaW4gKiAyKTtcbiAgdHNwYW4udGV4dChuVGV4dCk7XG4gIHJldHVybiB0ZXh0RWxlbTtcbn07XG5jb25zdCBkcmF3SW1hZ2UgPSAoZWxlbSwgeCwgeSwgbGluaykgPT4ge1xuICBjb25zdCBpbWFnZUVsZW1lbnQgPSBlbGVtLmFwcGVuZChcImltYWdlXCIpO1xuICBpbWFnZUVsZW1lbnQuYXR0cihcInhcIiwgeCk7XG4gIGltYWdlRWxlbWVudC5hdHRyKFwieVwiLCB5KTtcbiAgY29uc3Qgc2FuaXRpemVkTGluayA9IHNhbml0aXplVXJsKGxpbmspO1xuICBpbWFnZUVsZW1lbnQuYXR0cihcInhsaW5rOmhyZWZcIiwgc2FuaXRpemVkTGluayk7XG59O1xuY29uc3QgZHJhd0VtYmVkZGVkSW1hZ2UgPSAoZWxlbWVudCwgeCwgeSwgbGluaykgPT4ge1xuICBjb25zdCBpbWFnZUVsZW1lbnQgPSBlbGVtZW50LmFwcGVuZChcInVzZVwiKTtcbiAgaW1hZ2VFbGVtZW50LmF0dHIoXCJ4XCIsIHgpO1xuICBpbWFnZUVsZW1lbnQuYXR0cihcInlcIiwgeSk7XG4gIGNvbnN0IHNhbml0aXplZExpbmsgPSBzYW5pdGl6ZVVybChsaW5rKTtcbiAgaW1hZ2VFbGVtZW50LmF0dHIoXCJ4bGluazpocmVmXCIsIGAjJHtzYW5pdGl6ZWRMaW5rfWApO1xufTtcbmNvbnN0IGdldE5vdGVSZWN0ID0gKCkgPT4ge1xuICBjb25zdCBub3RlUmVjdERhdGEgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIHdpZHRoOiAxMDAsXG4gICAgaGVpZ2h0OiAxMDAsXG4gICAgZmlsbDogXCIjRURGMkFFXCIsXG4gICAgc3Ryb2tlOiBcIiM2NjZcIixcbiAgICBhbmNob3I6IFwic3RhcnRcIixcbiAgICByeDogMCxcbiAgICByeTogMFxuICB9O1xuICByZXR1cm4gbm90ZVJlY3REYXRhO1xufTtcbmNvbnN0IGdldFRleHRPYmogPSAoKSA9PiB7XG4gIGNvbnN0IHRlc3RPYmplY3QgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIHdpZHRoOiAxMDAsXG4gICAgaGVpZ2h0OiAxMDAsXG4gICAgXCJ0ZXh0LWFuY2hvclwiOiBcInN0YXJ0XCIsXG4gICAgc3R5bGU6IFwiIzY2NlwiLFxuICAgIHRleHRNYXJnaW46IDAsXG4gICAgcng6IDAsXG4gICAgcnk6IDAsXG4gICAgdHNwYW46IHRydWVcbiAgfTtcbiAgcmV0dXJuIHRlc3RPYmplY3Q7XG59O1xuZXhwb3J0IHtcbiAgZHJhd0JhY2tncm91bmRSZWN0IGFzIGEsXG4gIGRyYXdFbWJlZGRlZEltYWdlIGFzIGIsXG4gIGRyYXdJbWFnZSBhcyBjLFxuICBkcmF3UmVjdCBhcyBkLFxuICBnZXRUZXh0T2JqIGFzIGUsXG4gIGRyYXdUZXh0IGFzIGYsXG4gIGdldE5vdGVSZWN0IGFzIGdcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/.pnpm/mermaid@10.9.4/node_modules/mermaid/dist/svgDrawCommon-3ba9043b.js\n"));

/***/ })

}]);